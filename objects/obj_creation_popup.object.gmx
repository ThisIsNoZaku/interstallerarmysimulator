<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
type=0;
target_gear=0;
tab=1;
badname=0;

rows=0;


tooltip="";
tooltip2="";


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
role_names_all="";

var derpaderp,z,idd;
derpaderp=0;idd=0;
if (type&gt;=100) then z=type-100;
if (type&lt;100) then z=type;

if (type&gt;=100){
    repeat(13){derpaderp+=1;
        if (derpaderp=1) then idd=15;
        if (derpaderp=2) then idd=14;
        if (derpaderp=3) then idd=17;
        if (derpaderp=4) then idd=16;
        if (derpaderp=5) then idd=5;
        if (derpaderp=6) then idd=2;
        if (derpaderp=7) then idd=4;
        if (derpaderp=8) then idd=3;
        if (derpaderp=9) then idd=6;
        if (derpaderp=10) then idd=8;
        if (derpaderp=11) then idd=9;
        if (derpaderp=12) then idd=10;
        if (derpaderp=13) then idd=12;
        
        role_names_all+=string(obj_creation.role[100,idd])+"|";
    }
    
    role_names_all+=string(obj_img.faction_title[1])+"|";
    role_names_all+="Master of Sanctity|";
    role_names_all+="Master of the Apothecarion|";
    role_names_all+="Forge Master|";
    // role_names_all+="Crusader|";
    // role_names_all+="Ranger|";
    
    if (obj_creation.role[100,z]!=""){
        if (string_count(obj_creation.role[100,z],role_names_all)&gt;1) then badname=1;
        if (string_count(obj_creation.role[100,z],role_names_all)&lt;=1) then badname=0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
tooltip="";tooltip2="";

if (type&gt;0){
    draw_set_color(0);
    draw_rectangle(430,536,845,748,0);
    draw_set_color(38144);
    draw_rectangle(430,535,845,748,1);
    draw_rectangle(430,536,845,748,1);
    draw_rectangle(431,537,846,747,1);
    
    
    
    if (type&lt;=20){
        draw_set_font(fnt_40k_30b);
        if (type=1) then draw_text_transformed(444,550,"Primary Color",0.6,0.6,0);
        if (type=2) then draw_text_transformed(444,550,"Secondary Color",0.6,0.6,0);
        if (type=3) then draw_text_transformed(444,550,"Pauldron 1 Color",0.6,0.6,0);
        if (type=4) then draw_text_transformed(444,550,"Pauldron 2 Color",0.6,0.6,0);
        if (type=5) then draw_text_transformed(444,550,"Trim Color",0.6,0.6,0);
        if (type=6) then draw_text_transformed(444,550,"Lens Color",0.6,0.6,0);
        if (type=7) then draw_text_transformed(444,550,"Weapon Color",0.6,0.6,0);
    
        rows=floor(obj_creation.colors)+1;
        var coli,cu,tot;cu=0;coli=0;tot=0;
        repeat(rows){coli+=1;cu=0;
            repeat(10){cu+=1;tot+=1;
                if (tot&lt;=obj_creation.colors){
                    draw_set_color(make_color_rgb(obj_creation.col_r[tot],obj_creation.col_g[tot],obj_creation.col_b[tot]));
                    
                    var x1,x2,y1,y2;
                    x1=395+(cu*40);y1=541+(coli*40);
                    x2=435+(cu*40);y2=581+(coli*40);
                    
                    draw_rectangle(x1,y1,x2,y2,0);
                    draw_set_color(38144);
                    draw_rectangle(x1,y1,x2,y2,1);
                    
                    if (scr_hit(x1,y1,x2,y2)=true){
                        draw_set_color(c_white);draw_set_alpha(0.2);
                        draw_rectangle(x1,y1,x2,y2,0);draw_set_alpha(1);
                        
                        if (obj_creation.mouse_left=1) and (obj_creation.cooldown&lt;=0){
                            if (type=1) then obj_creation.main_color=tot;
                            if (type=2) then obj_creation.secondary_color=tot;
                            if (type=3) then obj_creation.pauldron2_color=tot;
                            if (type=4) then obj_creation.pauldron_color=tot;
                            if (type=5) then obj_creation.trim_color=tot;
                            if (type=6) then obj_creation.lens_color=tot;
                            if (type=7) then obj_creation.weapon_color=tot;
                            with(obj_creation){shader_reset();}
                            obj_creation.alarm[0]=1;obj_creation.cooldown=8000;
                            instance_destroy();
                        }
                    }
                }
            }
        }
        
        draw_set_halign(fa_center);draw_set_font(fnt_40k_14b);
        draw_set_color(38144);draw_rectangle(634-(string_width("CANCEL")/2),722,634+(string_width("CANCEL")/2),742,0);
        draw_set_color(0);draw_text(634,723,"CANCEL");
        if (scr_hit(634-(string_width("CANCEL")/2),722,634+(string_width("CANCEL")/2),742)=true){
            draw_set_color(c_white);draw_set_alpha(0.2);
            draw_rectangle(634-(string_width("CANCEL")/2),722,634+(string_width("CANCEL")/2),742,0);draw_set_alpha(1);
            if (obj_creation.mouse_left=1){obj_creation.cooldown=8000;instance_destroy();}
        }draw_set_alpha(1);
        
        
    }
    
    
    
    if (type&gt;=100){
        var co,ide;co=100;ide=type-100;
        
        draw_set_font(fnt_40k_30b);
        if (obj_creation.role[co,ide]="") or (badname=1) then draw_set_color(c_red);
        if (obj_creation.text_selected!="unit_name"+string(ide)) then draw_text_transformed(444,550,obj_creation.role[co,ide],0.6,0.6,0);
        if (obj_creation.text_selected="unit_name"+string(ide)) and (obj_creation.text_bar&gt;30) then draw_text_transformed(444,550,string(obj_creation.role[co,ide]),0.6,0.6,0);
        if (obj_creation.text_selected="unit_name"+string(ide)) and (obj_creation.text_bar&lt;=30) then draw_text_transformed(444,550,string(obj_creation.role[co,ide])+"|",0.6,0.6,0);
        var wid,hei;wid=0;hei=string_height_ext(string(obj_creation.role[co,ide])+"Q",-1,580)*0.6;
        if (scr_hit(444,550,820,550+hei)){obj_cursor.image_index=2;
            tooltip="Astartes Role Name";tooltip2="The name of this Astartes Role.  The plural form will be ''"+string(obj_creation.role[co,ide])+"s''.";
            if (obj_creation.mouse_left=1) and (obj_creation.cooldown&lt;=0){
                obj_creation.text_selected="unit_name"+string(ide);obj_creation.cooldown=8000;keyboard_string=obj_creation.role[co,ide];
            }
        }
        if (obj_creation.text_selected="unit_name"+string(ide)) then obj_creation.role[co,ide]=keyboard_string;
        draw_rectangle(444-1,550-1,822,550+hei,1);
        draw_set_color(38144);
        
        
        draw_set_font(fnt_40k_14b);
        draw_set_halign(fa_right);
        
        /*if (target_gear=1) then draw_text_transformed(594,575,"Primary Weapon",0.5,0.5,0);
        if (target_gear=2) then draw_text_transformed(594,575,"Secondary Weapon",0.5,0.5,0);
        if (target_gear=3) then draw_text_transformed(594,575,"Armor",0.5,0.5,0);
        if (target_gear=4) then draw_text_transformed(594,575,"Mobility Item",0.5,0.5,0);
        if (target_gear=5) then draw_text_transformed(594,575,"Special Gear",0.5,0.5,0);*/
        
        
        
        var gg,x5,y5,title,geh;title="";geh="";spacing=22;gg=0;
        x5=594;y5=597-spacing;
        
        repeat(5){
            gg+=1;y5+=spacing;
            if (gg=1){title="Main Weapon: ";geh=obj_creation.wep1[co,ide];}
            if (gg=2){title="Secondary Weapon: ";geh=obj_creation.wep2[co,ide];}
            if (gg=3){title="Armor: ";geh=obj_creation.armor[co,ide];}
            if (gg=4){title="Mobility Item: ";geh=obj_creation.mobi[co,ide];}
            if (gg=5){title="Special Item: ";geh=obj_creation.gear[co,ide];}
            
            draw_set_halign(fa_right);draw_set_color(38144);
            draw_rectangle(x5,y5,x5-string_width(title),y5+string_height(title)-2,0);
            draw_set_color(0);draw_text(x5,y5,string(title));
            
            if (scr_hit(x5-string_width(title),y5,x5,y5+string_height(title)-2)=true){
                draw_set_color(c_white);draw_set_alpha(0.2);
                draw_rectangle(x5,y5,x5-string_width(title),y5+string_height(title)-2,0);
                if (obj_creation.mouse_left=1) and (obj_creation.cooldown&lt;=0){
                
                    var bad;bad=0;
                    if (type=106) and ((gg=3) or (gg=4) or (gg=5)) then bad=1;
                    
                    if (bad=0){
                        obj_creation.cooldown=8000;
                        tab=1;
                        
                        if (gg&lt;4) then target_gear=gg;
                        if (gg=4) then target_gear=5;
                        if (gg=5) then target_gear=4;
                        
                        scr_weapons_equip();// Gets item list
                    }
                }
            }
            draw_set_alpha(1);draw_set_color(38144);
            draw_set_halign(fa_left);draw_text(600,y5,string(geh));
        }
        
        draw_set_halign(fa_center);draw_set_font(fnt_40k_14b);if (target_gear&gt;0) then draw_set_alpha(0.5);
        draw_set_color(38144);draw_rectangle(634-(string_width("CONFIRM")/2),722,634+(string_width("CONFIRM")/2),742,0);
        draw_set_color(0);draw_text(634,723,"CONFIRM");
        if (scr_hit(634-(string_width("CONFIRM")/2),722,634+(string_width("CONFIRM")/2),742)=true) and (target_gear=0){
            draw_set_color(c_white);draw_set_alpha(0.2);
            draw_rectangle(634-(string_width("CONFIRM")/2),722,634+(string_width("CONFIRM")/2),742,0);draw_set_alpha(1);
            if (obj_creation.mouse_left=1) and (obj_creation.role[co,ide]!="") and (badname=0){obj_creation.cooldown=8000;instance_destroy();}
        }draw_set_alpha(1);
        
        draw_set_halign(fa_left);
        if (scr_hit(434,591,594,709)=true){
            tooltip="Gear";tooltip2="The equipment this Astartes Role defaults to.  Note that if defaults are set to expensive items the Astartes may instead be provided with more usual equipment.";
        }
    }
}




if (target_gear&gt;0){
    var i;i=-1;repeat(50){i+=1;item_name[i]="";}
    tab=1;scr_weapons_equip();
    
    draw_set_color(0);
    draw_rectangle(851,210,1168,749,0);
    
    draw_set_color(38144);
    draw_rectangle(844,200,1166,748,1);
    draw_rectangle(845,201,1165,747,1);
    draw_rectangle(846,202,1164,746,1);
    
    draw_set_font(fnt_40k_30b);
    if (target_gear=1) then draw_text_transformed(862,215,"Select First Weapon",0.6,0.6,0);
    if (target_gear=2) then draw_text_transformed(862,215,"Select Second Weapon",0.6,0.6,0);
    if (target_gear=3) then draw_text_transformed(862,215,"Select Armor",0.6,0.6,0);
    if (target_gear=4) then draw_text_transformed(862,215,"Select Mobility Item",0.6,0.6,0);
    if (target_gear=5) then draw_text_transformed(862,215,"Select Special Item",0.6,0.6,0);
    draw_set_font(fnt_40k_14b);
    
    var x3,y3,space,h;h=0;x3=862;y3=245;space=18;
    repeat(23){h+=1;draw_set_color(38144);
        if (item_name[h]!=""){
            if (string_width(item_name[h])&gt;=140) then draw_text_transformed(x3,y3,item_name[h],0.75,1,0);
            if (string_width(item_name[h])&lt;140) then draw_text_transformed(x3,y3,item_name[h],1,1,0);y3+=space;
            
            // x2 was 1150
            if (scr_hit(x3,y3-space,x3+143,y3+17-space)=true){
                if (string_width(item_name[h])&lt;140){
                    draw_set_color(c_white);draw_set_alpha(0.2);
                    draw_text_transformed(x3,y3-space,item_name[h],1,1,0);draw_set_alpha(1);
                }
                if (string_width(item_name[h])&gt;=140){
                    draw_set_color(c_white);draw_set_alpha(0.2);
                    draw_text_transformed(x3,y3-space,item_name[h],0.75,1,0);draw_set_alpha(1);
                }
                
                if (obj_creation.mouse_left=1) and (obj_creation.cooldown&lt;=0){
                    var buh;buh=item_name[h];obj_creation.cooldown=8000;
                    if (item_name[h]="(None)") then buh="";
                    if (target_gear=1) then obj_creation.wep1[co,ide]=buh;
                    if (target_gear=2) then obj_creation.wep2[co,ide]=buh;
                    if (target_gear=3) then obj_creation.armor[co,ide]=buh;
                    if (target_gear=4) then obj_creation.gear[co,ide]=buh;
                    if (target_gear=5) then obj_creation.mobi[co,ide]=buh;
                    target_gear=0;
                }
            }
        }
    }
    
    if (target_gear=1) or (target_gear=2){
        var i;i=-1;repeat(50){i+=1;item_name[i]="";}
        tab=2;scr_weapons_equip();
        
        var x3,y3,h,space;h=0;x3=862+146;y3=245;space=18;
        repeat(23){h+=1;draw_set_color(38144);
            if (item_name[h]!=""){
                if (string_width(item_name[h])&gt;=140) then draw_text_transformed(x3,y3,item_name[h],0.75,1,0);
                if (string_width(item_name[h])&lt;140) then draw_text_transformed(x3,y3,item_name[h],1,1,0);y3+=space;
                
                if (scr_hit(x3,y3-space,x3+143,y3+17-space)=true){
                    
                    if (string_width(item_name[h])&lt;140){
                        draw_set_color(c_white);draw_set_alpha(0.2);
                        draw_text_transformed(x3,y3-space,item_name[h],1,1,0);draw_set_alpha(1);
                    }
                    if (string_width(item_name[h])&gt;=140){
                        draw_set_color(c_white);draw_set_alpha(0.2);
                        draw_text_transformed(x3,y3-space,item_name[h],0.75,1,0);draw_set_alpha(1);
                    }
                    
                    if (obj_creation.mouse_left=1) and (obj_creation.cooldown&lt;=0){
                        var buh;buh=item_name[h];obj_creation.cooldown=8000;
                        if (item_name[h]="(None)") then buh="";
                        if (target_gear=1) then obj_creation.wep1[co,ide]=buh;
                        if (target_gear=2) then obj_creation.wep2[co,ide]=buh;
                        if (target_gear=3) then obj_creation.armor[co,ide]=buh;
                        if (target_gear=4) then obj_creation.gear[co,ide]=buh;
                        if (target_gear=5) then obj_creation.mobi[co,ide]=buh;
                        target_gear=0;
                    }
                }
            }
        }
        
        tab=1;
    }
    
    
    
    draw_set_halign(fa_center);draw_set_font(fnt_40k_14b);
    draw_set_color(38144);draw_rectangle(1008-(string_width("CANCEL")/2),722,1008+(string_width("CANCEL")/2),742,0);
    draw_set_color(0);draw_text(1008,723,"CANCEL");
    if (scr_hit(1008-(string_width("CANCEL")/2),722,1008+(string_width("CANCEL")/2),742)=true){
        draw_set_color(c_white);draw_set_alpha(0.2);
        draw_rectangle(1008-(string_width("CANCEL")/2),722,1008+(string_width("CANCEL")/2),742,0);draw_set_alpha(1);
        if (obj_creation.mouse_left=1){obj_creation.cooldown=8000;target_gear=0;}
    }draw_set_alpha(1);
    
}







if (tooltip!="") and (obj_creation.change_slide&lt;=0){
    draw_set_alpha(1);
    draw_set_font(fnt_40k_14);draw_set_halign(fa_left);draw_set_color(0);
    draw_rectangle(mouse_x+18,mouse_y+20,mouse_x+string_width_ext(tooltip2,-1,500)+24,mouse_y+44+string_height_ext(tooltip2,-1,500),0);
    draw_set_color(38144);
    draw_rectangle(mouse_x+18,mouse_y+20,mouse_x+string_width_ext(tooltip2,-1,500)+24,mouse_y+44+string_height_ext(tooltip2,-1,500),1);
    draw_set_font(fnt_40k_14b);draw_text(mouse_x+22,mouse_y+22,string(tooltip));
    draw_set_font(fnt_40k_14);draw_text_ext(mouse_x+22,mouse_y+42,string(tooltip2),-1,500);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
