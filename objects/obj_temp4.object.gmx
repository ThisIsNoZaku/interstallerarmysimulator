<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
num=0;
loc="";
managing=0;
ruins_race=0;
ruins_battle=0;
battle_threat=0;
battle_loc="";
ship_id=0;
obj=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action_eta</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siz</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tch</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mch</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>defeat</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Ancient Ruins</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// show_message("so far so good, defeat:"+string(defeat));


var obj;obj=0;
with(obj_star){if (name!=obj_temp4.battle_loc) then instance_deactivate_object(id);}
obj=instance_nearest(room_width/2,room_height/2,obj_star);
instance_activate_object(obj_star);


if (defeat=0){
    var dice;dice=floor(random(100))+1;
    if (string_count("Shitty",obj_ini.strin2)&gt;0) then dice+=10;
    if (dice&lt;(battle_threat*10)){
        if (ruins_race=5){
            obj_controller.disposition[5]+=2;
            var o;o=0;repeat(4){if (o&lt;=4){o+=1;if (obj_ini.adv[o]="Reverent Guardians") then o=500;}}if (o&gt;100) then obj_controller.disposition[5]+=1;
        }
        
        
        
        if (ruins_race&lt;5){
            var di;di=choose(2,4);
            if (di=2) then obj_controller.disposition[2]+=2;
            if (di=4) then obj_controller.disposition[4]+=1;
        }
        if (ruins_race=6){
            if (ruins_battle=6) then obj_controller.disposition[6]-=5;
            if (ruins_battle=11) then obj_controller.disposition[6]+=2;
            if (ruins_battle=12) then obj_controller.disposition[6]+=4;
        }
    }
}
if (defeat=1){
    var dice;dice=floor(random(100))+1;
    if (string_count("Shitty",obj_ini.strin2)&gt;0) then dice+=10;
    if (dice&lt;(battle_threat*10)){
        if (ruins_race=5) then obj_controller.disposition[5]-=2;
        if (ruins_race&lt;5){
            var di;di=choose(2,4);
            if (di=2) then obj_controller.disposition[2]-=2;
            if (di=4) then obj_controller.disposition[4]-=1;
        }
    }
    var pop;pop=instance_create(0,0,obj_popup);
    if (ruins_battle=10){obj.p_traitors[num]=battle_threat+1;obj.p_heresy[num]+=10;}
    if (ruins_battle=11){obj.p_traitors[num]=battle_threat+1;obj.p_heresy[num]+=25;}
    if (ruins_battle=12){obj.p_demons[num]=battle_threat+1;obj.p_heresy[num]+=40;}
    
    pop.title="Ancient Ruins";
    pop.text="Your forces within the ancient ruins have been surrounded and destroyed, down to the last man.  ";
    if (ruins_battle=10) then pop.text+="Now that they have been discovered, scans indicate the heretics and mutants are leaving the structures en masse.  ";
    if (ruins_battle=11) then pop.text+="Now that they have been discovered, scans indicate the chaos space marines are leaving the structures, intent on doing damage.  ";
    if (ruins_battle=12) then pop.text+="Scans indicate the foul daemons are leaving the structures en masse, intent on doing damage.  "
    if (ruins_battle=6) then pop.text+="Now that they have been discovered, the Eldar seem to have vanished without a trace.  Scans reveal nothing.";
}

obj.p_feature[num]=string_replace(obj.p_feature[num],"Ancient Ruins|","");


if (defeat=0) then scr_ruins_reward(obj,num,ruins_race);

// argument0: world object
// argument1: planet
// argument2: ruins_race
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>STC mechanicus</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var comp,plan,i;i=0;comp=0;plan=0;
plan=instance_nearest(x,y,obj_star);
plan.p_feature[num]=string_replace(plan.p_feature[num],"STC Fragment|","");

scr_return_ship(loc,self,num);

with(obj_star_select){instance_destroy();}
with(obj_fleet_select){instance_destroy();}

obj_controller.menu=20;obj_controller.diplomacy=3;obj_controller.force_goodbye=5;

if (obj_controller.disposition[3]&lt;=10) then obj_controller.disposition[3]+=5;
if (obj_controller.disposition[3]&gt;10) and (obj_controller.disposition[3]&lt;=30) then obj_controller.disposition[3]+=7;
if (obj_controller.disposition[3]&gt;30) and (obj_controller.disposition[3]&lt;=50) then obj_controller.disposition[3]+=9;
if (obj_controller.disposition[3]&gt;50) then obj_controller.disposition[3]+=11;

with(obj_controller){scr_dialogue("stc_thanks");}

with(obj_temp2){instance_destroy();}
with(obj_temp3){instance_destroy();}
with(obj_temp7){instance_destroy();}

if (obj_ini.fleet_type=1) then with(obj_star){
    if (owner=1) and ((p_owner[1]=1) or (p_owner[2]=1)) then instance_create(x,y,obj_temp2);
}
if (obj_ini.fleet_type!=1) then with(obj_p_fleet){// Get fleet star system
    if (capital_number&gt;0) and (action="") then instance_create(instance_nearest(x,y,obj_star).x,instance_nearest(x,y,obj_star).y,obj_temp2);
    if (frigate_number&gt;0) and (action="") then instance_create(instance_nearest(x,y,obj_star).x,instance_nearest(x,y,obj_star).y,obj_temp7);
}


if (obj_ini.fleet_type!=1){
    with(obj_p_fleet){if (action="") then instance_deactivate_object(instance_nearest(x,y,obj_star));}
}
with(obj_star){// Get origin star system for enemy fleet
    if (owner=obj_controller.diplomacy) and ((p_owner[1]=obj_controller.diplomacy) or (p_owner[2]=obj_controller.diplomacy) 
    or (p_owner[3]=obj_controller.diplomacy) or (p_owner[4]=obj_controller.diplomacy)){
        instance_create(x,y,obj_temp3);
    }
}

var targ, flit, i,chasing;chasing=0;// Set target

if (instance_exists(obj_temp2)) then targ=instance_nearest(obj_temp2.x,obj_temp2.y,obj_temp3);
if (!instance_exists(obj_temp2)) and (instance_exists(obj_temp7)) then targ=instance_nearest(obj_temp7.x,obj_temp7.y,obj_temp3);

// If player fleet is flying about then get their target for new target
if (!instance_exists(obj_temp2)) and (!instance_exists(obj_temp7)) and (instance_exists(obj_p_fleet)) and (obj_ini.fleet_type!=1){chasing=1;
    with(obj_p_fleet){var pop;
        if (capital_number&gt;0) and (action!=""){pop=instance_create(action_x,action_y,obj_temp2);pop.action_eta=action_eta;}
        if (frigate_number&gt;0) and (action!=""){pop=instance_create(action_x,action_y,obj_temp7);pop.action_eta=action_eta;}
    }
}
if (instance_exists(obj_temp2)) then targ=instance_nearest(obj_temp2.x,obj_temp2.y,obj_temp3);
if (!instance_exists(obj_temp2)) and (instance_exists(obj_temp7)) then targ=instance_nearest(obj_temp7.x,obj_temp7.y,obj_temp3);

flit=instance_create(targ.x-0,targ.y-32,obj_en_fleet);

flit.owner=obj_controller.diplomacy;
flit.home_x=targ.x;flit.home_y=targ.y;
flit.sprite_index=spr_fleet_mechanicus;

flit.image_index=0;
flit.capital_number=1;
flit.trade_goods="Requisition!500!|";

if (obj_ini.fleet_type!=1){
    if (instance_exists(obj_temp2)){flit.action_x=obj_temp2.x;flit.action_y=obj_temp2.y;flit.target=instance_nearest(flit.action_x,flit.action_y,obj_p_fleet);}
    if (!instance_exists(obj_temp2)) and (instance_exists(obj_temp7)){flit.action_x=obj_temp7.x;flit.action_y=obj_temp7.y;flit.target=instance_nearest(flit.action_x,flit.action_y,obj_p_fleet);}
}
if (obj_ini.fleet_type=1){
    targ=instance_nearest(flit.x,flit.y,obj_temp2);
    flit.action_x=targ.x;flit.action_y=targ.y;
}

flit.alarm[4]=1;

instance_activate_all();
with(obj_temp2){instance_destroy();}
with(obj_temp3){instance_destroy();}
with(obj_temp7){instance_destroy();}
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>STC take</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var comp,plan,i;i=0;comp=0;plan=0;
plan=instance_nearest(x,y,obj_star);

var mission,mission_roll;
mission="bad";mission_roll=floor(random(100))+1;
if (string_count("Ambusher",obj_ini.strin)=1) then mission_roll-=15;
if (plan.p_owner[num]=3) then mission_roll+=20;
if (mission_roll&lt;=60) then mission="good";// 135
if (plan.p_type[num]="Dead") then mission="good";
// mission="bad";

var pop;
pop=instance_create(0,0,obj_popup);
pop.image="artifact_recovered";
pop.title="STC Recovered!";

if (plan.p_first[num]!=3) or (plan.p_type[num]!="Forge"){
    pop.text="Your forces descend beneath the surface of the planet, delving deep into an ancient tomb.  Automated defenses and locks are breached.##";
    pop.text+="The STC Fragment has been safely stowed away, and is ready to be decrypted or gifted at your convenience.";
    scr_return_ship(loc,self,num);
}



if (mission="good") and (plan.p_first[num]=3) and (plan.p_type[num]="Forge"){
    pop.text="Your forces descend into the vaults of the Mechanicus Forge, bypassing sentries, automated defenses, and blast doors on the way.##";
    pop.text+="The STC Fragment has been safely recovered and stowed away.  It is ready to be decrypted or gifted at your convenience.";
    
    /*if (plan.p_type[num]!="Dead"){
        if (plan.p_owner[num]=2) then obj_controller.disposition[2]-=1;
        if (plan.p_owner[num]=3) then obj_controller.disposition[3]-=10;// max(obj_controller.disposition/4,10)
        if (plan.p_owner[num]=4) then obj_controller.disposition[4]-=max(obj_controller.disposition[4]/4,10);
        if (plan.p_owner[num]=5) then obj_controller.disposition[5]-=3;
        if (plan.p_owner[num]=8) then obj_controller.disposition[8]-=3;
    }*/
    scr_return_ship(loc,self,num);
}
if (mission="bad") and (plan.p_first[num]=3) and (plan.p_type[num]="Forge"){
    /*pop.text="Your marines converge upon the STC Fragment; resistance is light and easily dealt with.  After a brief firefight it is retrieved.##";
    pop.text+="The fragment been safely stowed away, and is ready to be decrypted or gifted at your convenience.";

    */
    
    pop.image="thallax";
    pop.text="Your forces descend into the vaults of the Mechanicus Forge.  Sentries, automated defenses, and blast doors stand in their way.##";
    pop.text+="Half-way through the mission a small army of Praetorian Servitors and Skitarii bear down upon your men.  The Mechanicus guards seem to be upset.";
    
    /*if (plan.p_owner[num]=2) then obj_controller.disposition[2]-=2;*/
    if (plan.p_owner[num]=3){obj_controller.disposition[3]-=40;}
    /*if (plan.p_owner[num]=4) then obj_controller.disposition[4]-=max(obj_controller.disposition[4]/3,20);
    if (plan.p_owner[num]=5) then obj_controller.disposition[5]-=max(obj_controller.disposition[3]/4,15);
    if (plan.p_owner[num]=6) then obj_controller.disposition[6]-=15;
    if (plan.p_owner[num]=8) then obj_controller.disposition[8]-=8;*/
    
    if (plan.p_owner[num]&gt;3) and (plan.p_owner[num]&lt;=6){obj_controller.audiences+=1;obj_controller.audien[obj_controller.audiences]=plan.p_owner[num];obj_controller.audien_topic[obj_controller.audiences]="artifact_angry";}
    if (plan.p_owner[num]=3) and (obj_controller.faction_status[3]!="War"){obj_controller.audiences+=1;obj_controller.audien[obj_controller.audiences]=plan.p_owner[num];obj_controller.audien_topic[obj_controller.audiences]="declare_war";}
    
    // Start battle
    pop.battle_special=3.1;
    obj_controller.trading_artifact=0;
    var h;h=0;repeat(4){h+=1;obj_controller.diplo_option[h]="";obj_controller.diplo_goto[h]="";}
    obj_controller.menu=0;
    
    pop.loc=plan.name;
    pop.planet=num;
    
    exit;
}


if (obj_ini.adv[1]="Scavengers") or (obj_ini.adv[2]="Scavengers") or (obj_ini.adv[3]="Scavengers") or (obj_ini.adv[4]="Scavengers"){
    var ex1,ex1_num,ex2,ex2_num,ex3,ex3_num;
    ex1="";ex1_num=0;ex2="";ex2_num=0;ex3="";ex3_num=0;
    
    var stah;stah=instance_nearest(x,y,obj_star);

    if (stah.p_first[num]=2){
        ex1="Meltagun";ex1_num=choose(2,3,4);ex2="Flamer";ex2_num=choose(2,3,4);
        ex3=choose("Power Fist",string(obj_img.blade)+"sword",string(obj_img.gyro_adj)+" Pistol");ex3_num=choose(2,3,4,5);
    }
    if (stah.p_first[num]=3){
        ex1="Plasma Pistol";ex1_num=choose(1,2);ex2="Power Armor";ex2_num=choose(2,3,4);
        ex3=choose("Servo Arms","Bionics");ex3_num=choose(2,3,4);
    }
    if (stah.p_first[num]=5){
        ex1="Flamer";ex1_num=choose(3,4,5,6);ex2="Heavy Flamer";ex2_num=choose(1,2,3);
        ex3=choose(string(obj_img.blade)+"sword",string(obj_img.gyro_adj)+" Pistol");ex3_num=choose(2,3,4,5);
    }
    
    if (ex1!=""){
        pop.text+="##While they're at it your Battle Brothers also find ";
        if (ex1_num&gt;0) then pop.text+=string(ex1_num)+" "+string(ex1);
        if (ex2_num&gt;0) then pop.text+=", "+string(ex2_num)+" "+string(ex2);
        if (ex3_num&gt;0) then pop.text+=", and "+string(ex3_num)+" "+string(ex3);
        pop.text+=".";
        scr_add_item(ex1,ex1_num);scr_add_item(ex2,ex2_num);scr_add_item(ex3,ex3_num);
    }
}


with(obj_star_select){instance_destroy();}
with(obj_fleet_select){instance_destroy();}
plan.p_feature[num]=string_replace(plan.p_feature[num],"STC Fragment|","");

/*i=0;
if (string_count("Daemonic",obj_ini.artifact_tags[last_artifact-1])=1) then repeat(140){
    i+=1;
    if (man_sel[i]=1){
        if (obj_controller.man[i]="man"){obj_ini.chaos[comp,i]+=choose(0,2,4,6,8);}
        if (obj_controller.man[i]="vehicle"){obj_ini.veh_chaos[comp,i]+=choose(0,2,4,6,8);}
    }
}*/


scr_add_stc_fragment();// STC here


obj_controller.trading_artifact=0;obj_controller.diplo_option1="";
obj_controller.diplo_option2="";obj_controller.diplo_option3="";
obj_controller.menu=0;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>planetary take</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
scr_return_ship(loc,self,num);

var man_size,ship_id,comp,plan,i;
i=0;ship_id=0;man_size=0;comp=0;plan=0;
repeat(30){i+=1;if (obj_ini.ship[i]=loc) then ship_id=i;}i=0;
plan=instance_nearest(x,y,obj_star);
scr_add_artifact("random","random",4,loc,ship_id+500);

var i,last_artifact;
i=0;last_artifact=0;
repeat(100){if (last_artifact=0){i+=1;if (obj_ini.artifact[i]="") then last_artifact=i-1;}}




var mission,mission_roll;
mission="bad";mission_roll=floor(random(100))+1;
if (string_count("Ambusher",obj_ini.strin)=1) then mission_roll-=15;
if (mission_roll&lt;=60) then mission="good";// 135
if (plan.p_type[num]="Dead") then mission="good";
// mission="bad";

var pop;
pop=instance_create(0,0,obj_popup);
pop.image="artifact_recovered";
pop.title="Artifact Recovered!";

if (mission="good"){
    pop.text="Your marines quickly converge upon the Artifact and remove it, before local forces have any idea of what is happening.##";
    pop.text+="It has been stowed away upon "+string(loc)+".  It appears to be a "+string(obj_ini.artifact[last_artifact])+" but should be brought home and identified posthaste.";
    scr_event_log("","Artifact has been forcibly recovered.");
    
    if (plan.p_type[num]!="Dead"){
        if (plan.p_owner[num]=2) then obj_controller.disposition[2]-=1;
        if (plan.p_owner[num]=3) then obj_controller.disposition[3]-=10;// max(obj_controller.disposition/4,10)
        if (plan.p_owner[num]=4) then obj_controller.disposition[4]-=max(obj_controller.disposition[4]/4,10);
        if (plan.p_owner[num]=5) then obj_controller.disposition[5]-=3;
        if (plan.p_owner[num]=8) then obj_controller.disposition[8]-=3;
    }
}
if (mission="bad"){
    pop.text="Your marines converge upon the Artifact; resistance is light and easily dealt with.  After a brief firefight the Artifact is retrieved.##";
    pop.text+="It has been stowed away upon "+string(loc)+".  It appears to be a "+string(obj_ini.artifact[last_artifact])+" but should be brought home and identified posthaste.";
    scr_event_log("red","Artifact forcibly recovered.  Collateral damage is caused.");
    
    if (plan.p_owner[num]=2) then obj_controller.disposition[2]-=2;
    if (plan.p_owner[num]=3) then obj_controller.disposition[3]-=max(obj_controller.disposition[3]/3,20);
    if (plan.p_owner[num]=4) then obj_controller.disposition[4]-=max(obj_controller.disposition[4]/3,20);
    if (plan.p_owner[num]=5) then obj_controller.disposition[5]-=max(obj_controller.disposition[3]/4,15);
    if (plan.p_owner[num]=6) then obj_controller.disposition[6]-=15;
    if (plan.p_owner[num]=8) then obj_controller.disposition[8]-=8;
    
    if (plan.p_owner[num]&gt;=3) and (plan.p_owner[num]&lt;=6){obj_controller.audiences+=1;obj_controller.audien[obj_controller.audiences]=plan.p_owner[num];obj_controller.audien_topic[obj_controller.audiences]="artifact_angry";}
}


if (obj_ini.adv[1]="Scavengers") or (obj_ini.adv[2]="Scavengers") or (obj_ini.adv[3]="Scavengers") or (obj_ini.adv[4]="Scavengers"){
    var ex1,ex1_num,ex2,ex2_num,ex3,ex3_num;
    ex1="";ex1_num=0;ex2="";ex2_num=0;ex3="";ex3_num=0;
    
    var stah;stah=instance_nearest(x,y,obj_star);

    if (stah.p_first[num]=2){
        ex1="Meltagun";ex1_num=choose(2,3,4);ex2="Flamer";ex2_num=choose(2,3,4);
        ex3=choose("Power Fist",string(obj_img.blade)+"sword",string(obj_img.gyro_adj)+" Pistol");ex3_num=choose(2,3,4,5);
    }
    if (stah.p_first[num]=3){
        ex1="Plasma Pistol";ex1_num=choose(1,2);ex2="Power Armor";ex2_num=choose(2,3,4);
        ex3=choose("Servo Arms","Bionics");ex3_num=choose(2,3,4);
    }
    if (stah.p_first[num]=5){
        ex1="Flamer";ex1_num=choose(3,4,5,6);ex2="Heavy Flamer";ex2_num=choose(1,2,3);
        ex3=choose(string(obj_img.blade)+"sword",string(obj_img.gyro_adj)+" Pistol");ex3_num=choose(2,3,4,5);
    }
    
    if (ex1!=""){
        pop.text+="##While they're at it your Battle Brothers also find ";
        if (ex1_num&gt;0) then pop.text+=string(ex1_num)+" "+string(ex1);
        if (ex2_num&gt;0) then pop.text+=", "+string(ex2_num)+" "+string(ex2);
        if (ex3_num&gt;0) then pop.text+=", and "+string(ex3_num)+" "+string(ex3);
        pop.text+=".";
        scr_add_item(ex1,ex1_num);scr_add_item(ex2,ex2_num);scr_add_item(ex3,ex3_num);
    }
}


with(obj_star_select){instance_destroy();}
with(obj_fleet_select){instance_destroy();}
plan.p_feature[num]=string_replace(plan.p_feature[num],"Artifact|","");

i=0;
if (string_count("Daemonic",obj_ini.artifact_tags[last_artifact-1])=1) then repeat(140){
    i+=1;
    if (man_sel[i]=1){
        if (obj_controller.man[i]="man"){obj_ini.chaos[comp,i]+=choose(0,2,4,6,8);}
        if (obj_controller.man[i]="vehicle"){obj_ini.veh_chaos[comp,i]+=choose(0,2,4,6,8);}
    }
}

obj_controller.trading_artifact=0;
var h;h=0;repeat(4){h+=1;obj_controller.diplo_option[h]="";obj_controller.diplo_goto[h]="";}
obj_controller.menu=0;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>governor hands over</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
scr_return_ship(loc,self,num);

var man_size,ship_id,comp,plan,i;
i=0;ship_id=0;man_size=0;comp=0;plan=0;
repeat(30){i+=1;if (obj_ini.ship[i]=loc) then ship_id=i;}i=0;
plan=instance_nearest(x,y,obj_star);
scr_add_artifact("random","random",4,loc,ship_id+500);

var i,last_artifact;
i=0;last_artifact=0;
repeat(100){if (last_artifact=0){i+=1;if (obj_ini.artifact[i]="") then last_artifact=i-1;}}

var pop;
pop=instance_create(0,0,obj_popup);
pop.image="artifact_recovered";
pop.title="Artifact Recovered!";
pop.text="The Planetary Governor hands over the Artifact without asking for compensation.##It has been safely stowed away upon "+string(loc)+".  It appears to be a "+string(obj_ini.artifact[last_artifact])+" but should be brought home and identified posthaste.";
with(obj_star_select){instance_destroy();}
with(obj_fleet_select){instance_destroy();}
plan.p_feature[num]=string_replace(plan.p_feature[num],"Artifact|","");
scr_event_log("","Planetary Governor hands over Artifact.");

i=0;
if (string_count("Daemonic",obj_ini.artifact_tags[last_artifact-1])=1) then repeat(140){
    i+=1;
    if (man_sel[i]=1){
        if (obj_controller.man[i]="man"){obj_ini.chaos[comp,i]+=choose(0,2,4,6,8);}
        if (obj_controller.man[i]="vehicle"){obj_ini.veh_chaos[comp,i]+=choose(0,2,4,6,8);}
    }
}

obj_controller.trading_artifact=0;
var h;h=0;repeat(4){h+=1;obj_controller.diplo_option[h]="";obj_controller.diplo_goto[h]="";}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>success</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
scr_return_ship(loc,self,num);

var man_size,ship_id,comp,plan,i;
i=0;ship_id=0;man_size=0;comp=0;plan=0;
repeat(30){i+=1;if (obj_ini.ship[i]=loc) then ship_id=i;}i=0;
plan=instance_nearest(x,y,obj_star);
scr_add_artifact("random","random",4,loc,ship_id+500);

var i,last_artifact;
i=0;last_artifact=0;
repeat(100){if (last_artifact=0){i+=1;if (obj_ini.artifact[i]="") then last_artifact=i-1;}}

var pop;
pop=instance_create(0,0,obj_popup);
pop.image="artifact_recovered";
pop.title="Artifact Recovered!";
pop.text="The Artifact has been safely stowed away upon "+string(loc)+".  It appears to be a "+string(obj_ini.artifact[last_artifact])+" but should be brought home and identified posthaste.";
with(obj_star_select){instance_destroy();}
with(obj_fleet_select){instance_destroy();}
plan.p_feature[num]=string_replace(plan.p_feature[num],"Artifact|","");
scr_event_log("","Artifact recovered.");

i=0;
if (string_count("Daemonic",obj_ini.artifact_tags[last_artifact-1])=1) then repeat(140){
    i+=1;
    if (man_sel[i]=1){
        if (obj_controller.man[i]="man"){obj_ini.chaos[comp,i]+=choose(0,2,4,6,8);}
        if (obj_controller.man[i]="vehicle"){obj_ini.veh_chaos[comp,i]+=choose(0,2,4,6,8);}
    }
}

obj_controller.trading_artifact=0;
var h;h=0;repeat(4){h+=1;obj_controller.diplo_option[h]="";obj_controller.diplo_goto[h]="";}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Compensate didn't work</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (num&gt;0){// Hmmmmmmm
    var stah;stah=instance_nearest(x,y,obj_star);

    if (string_count("Artifact",stah.p_feature[num])&gt;0){// Artifact is present
        var pop;
        pop=instance_create(0,0,obj_popup);
        pop.image="artifact2";
        pop.title="Artifact Located";
        pop.text="Trading for the the Artifact on "+string(stah.name)+" "+string(num)+" has not been fruitful.  What is thy will?";
        
        if (stah.p_owner[num]=2){pop.option2="Gift the Artifact to the Sector Commander.";}
        if (stah.p_owner[num]=3){pop.option2="Let it be.  The Mechanicus' wrath is not lightly provoked.";}
        if (stah.p_owner[num]=4){pop.option2="Let it be.  The Inquisition's wrath is not lightly provoked.";}
        
        if (stah.p_owner[num]&gt;4) then pop.option2="Let it be.";
        
        if (stah.p_owner[num]=5){pop.option2="Gift the Artifact to the Ecclesiarchy.";}
        if (stah.p_owner[num]=6){pop.option2="Gift the Artifact to the Eldar.";}
        if (stah.p_owner[num]=8){pop.option2="Gift the Artifact to the Tau Empire.";}
        
        pop.option1="Swiftly take the Artifact.";
        pop.target_comp=stah.p_owner[num];
        
        if (stah.p_owner[num]&gt;=9) or (stah.p_owner[num]=7){
            pop.option1="Swiftly take the Artifact.";
            pop.option2="Let it be.";
        }
        
    }
    

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (num&gt;0){// Hmmmmmmm
    var stah;stah=instance_nearest(x,y,obj_star);
    obj_controller.menu=0;

    
    if (string_count("STC",stah.p_feature[num])&gt;0){// STC is present
        if (tch&gt;0) and (mch=0){
            var pop,own;
            pop=instance_create(0,0,obj_popup);
            pop.image="stc";
            pop.title="STC Fragment Located";
            
            
            if (stah.p_owner[num]!=3) then pop.text="An STC Fragment has been located upon "+string(stah.name)+" "+string(num)+"; what it might contain is unknown.  Your "+string(obj_ini.role[100,16])+"s wish to reclaim, identify, and put it to use immediately.  What is thy will?";
            if (stah.p_owner[num]=3) then pop.text="An STC Fragment has been located upon "+string(stah.name)+" "+string(num)+"; what it might contain is unknown.  It appears to be located deep within a Mechanicus Vault.  Taking it may be seen as an act of war.  What is thy will?";
            
            
            own=stah.p_owner[num];
            pop.option1="Swiftly take the STC Fragment.";
            pop.option2="Leave it.";
        }
        if (tch&gt;0) and (mch&gt;0){
            if (stah.p_owner[num]!=3){
                var pop,own;
                pop=instance_create(0,0,obj_popup);
                pop.image="stc";
                pop.title="STC Fragment Located";
                // pop.text="An STC Fragment has been located upon "+string(stah.name)+" "+string(num)+".  Your "+string(obj_ini.role[100,16])+"s and present Mechanicus Techpriests are bickering over what should be done with it.  What is thy will?";
                
                pop.text="An STC Fragment has been located upon "+string(stah.name)+" "+string(num)+".  Your "+string(obj_ini.role[100,16])+"s wish to reclaim, identify, and put it to use immediately, and the Tech Priests wish to send it to the closest forge world.  What is thy will?";
                // if (stah.p_owner[num]=3) then pop.text="An STC Fragment has been located upon "+string(stah.name)+" "+string(num)+".  It appears to be located deep within a Mechanicus Vault.  The present Tech Priests warn that taking it will be seen as an act of war.  What is thy will?";
                
                own=stah.p_owner[num];
                pop.option1="Swiftly take the STC Fragment.";
                pop.option2="Leave it.";
                pop.option3="Send it to the Adeptus Mechanicus.";
            }
        }
        if (tch=0) and (mch&gt;0){
            if (stah.p_owner[num]!=3){
                var pop,own;
                pop=instance_create(0,0,obj_popup);
                pop.image="stc";
                pop.title="STC Fragment Located";
                pop.text="An STC Fragment has been located upon "+string(stah.name)+" "+string(num)+"; what it might contain is unknown.  The present Tech Priests wish to send it to Mars, and refuse to take the device off-world otherwise.";
                
                own=stah.p_owner[num];
                pop.option1="Leave it.";
                pop.option2="Send it to the Adeptus Mechanicus.";
            }
        }
        if (mch&gt;0) and (stah.p_owner[num]=3){
            var pop,own;
            pop=instance_create(0,0,obj_popup);
            pop.image="stc";
            pop.title="STC Fragment Located";
            pop.text="An STC Fragment has been located upon "+string(stah.name)+" "+string(num)+".  It appears to be located deep within a Mechanicus Vault.  The present Tech Priests stress they will not condone a mission to steal the STC Fragment.";
            
            own=stah.p_owner[num];
            
            
            scr_return_ship(loc,id,num);
            var man_size,ship_id,comp,plan,i;
            i=0;ship_id=0;man_size=0;comp=0;plan=0;
            repeat(30){i+=1;if (obj_ini.ship[i]=loc) then ship_id=i;}i=0;
            obj_controller.menu=0;obj_controller.managing=0;
            obj_controller.cooldown=10;
            instance_destroy();exit;
            
            // pop.option1="Leave it.";
            // get bitched at by the mechanicus
        }
        
        pop.ma_co=tch;pop.ma_id=mch;
        pop.target_comp=stah.p_owner[num];
    }
    
    
    
    if (string_count("Artifact",stah.p_feature[num])&gt;0){// Artifact is present
        if (stah.p_type[num]="Dead") or (stah.p_owner[num]=1){alarm[4]=1;exit;}
    
        var pop,own;
        pop=instance_create(0,0,obj_popup);
        pop.image="artifact";
        pop.title="Artifact Located";
        pop.text="The Artifact has been located upon "+string(stah.name)+" "+string(num)+"; its condition and class are unlikely to be determined until returned to the ship.  What is thy will?";
        
        own=stah.p_owner[num];
        
        // show_message(own);
        
        if (stah.p_first[num]=3) and (stah.p_owner[num]&gt;5){
            if (stah.p_pdf[num]&gt;0) then own=3;
        }
        
        pop.option1="Request audience with the "
        if (own=1){pop.option1+="Planetary Governor";pop.option3="Gift the Artifact to the Sector Commander.";}
        if (own=2){pop.option1+="Planetary Governor";pop.option3="Gift the Artifact to the Sector Commander.";}
        if (own=3){pop.option1+="Mechanicus";pop.option3="Let it be.  The Mechanicus' wrath is not lightly provoked.";}
        if (own=4){pop.option1+="Inquisition";pop.option3="Let it be.  The Inquisition's wrath is not lightly provoked.";}
        if (own=5){pop.option1+="Ecclesiarchy";pop.option3="Gift the Artifact to the Ecclesiarchy.";}
        if (own=6){pop.option1+="Eldar";pop.option3="Gift the Artifact to the Eldar.";}
        if (own=8){pop.option1+="Tau";pop.option3="Gift the Artifact to the Tau Empire.";}
        
        pop.option1+=" regarding the Artifact.";
        pop.option2="Swiftly take the Artifact.";
        pop.target_comp=stah.p_owner[num];
        
        if (own&gt;=9) or ((own=7) and (stah.p_pdf[num]&lt;=0)){
            pop.option1="Swiftly take the Artifact.";
            pop.option2="Let it be.";
            pop.option3="";
        }
        
        // show_message(string(pop.option1)+"/"+string(pop.option2)+"/"+string(pop.option3));
        
        /*if (pop.option1=""){
            pop.option1="Swiftly take the Artifact.";
            pop.option2="Let it be.";
            pop.option3="";
        }*/
        
    }
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>28,28</point>
  </PhysicsShapePoints>
</object>
