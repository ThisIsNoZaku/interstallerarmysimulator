<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_star</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>craftworld=0;// orbit_angle=0;orbit_radius=0;
space_hulk=0;
old_x=0;old_y=0;

if (((x&gt;=(room_width-150)) and (y&lt;=450)) or (y&lt;100)) and (global.load=0){// was 300
    instance_destroy();
}


var run;run=0;
name="";star="";planets=0;owner=2;
image_speed=0;
image_alpha=0;
x2=0;y2=0;buddy=0;
if (global.load=0) then alarm[0]=1;
storm=0;storm_image=0;trader=0;

run=0;
repeat(8){run+=1;
    planet[run]=0;
    dispo[run]=-50;
    p_type[run]="";
    p_feature[run]="";
    p_owner[run]=0;
    p_first[run]=0;
    p_population[run]=0;
    p_max_population[run]=0;
    p_large[run]=0;
    p_pop[run]="";
    p_guardsmen[run]=0;
    p_pdf[run]=0;
    p_fortified[run]=0;
    p_station[run]=0;
    // Whether or not player forces are on the planet
    p_player[run]=0;
    p_lasers[run]=0;
    p_silo[run]=0;
    p_defenses[run]=0;
    p_upgrades[run]="";
    // 
    // v how much of a problem they are from 1-5
    p_orks[run]=0;
    p_tau[run]=0;
    p_eldar[run]=0;
    p_tyranids[run]=0;
    p_traitors[run]=0;
    p_chaos[run]=0;
    p_demons[run]=0;
    p_sisters[run]=0;
    p_necrons[run]=0;
    p_halp[run]=0;
    // 
    p_heresy[run]=0;
    p_hurssy[run]=0;
    p_hurssy_time[run]=0;
    p_heresy_secret[run]=0;
    p_influence[run]=0;
    p_raided[run]=0;
    // 
    p_problem[0,run]="";p_timer[0,run]=0;
    p_problem[1,run]="";p_timer[1,run]=0;
    p_problem[2,run]="";p_timer[2,run]=0;
    p_problem[3,run]="";p_timer[3,run]=0;
    p_problem[4,run]="";p_timer[4,run]=0;
    p_problem[5,run]="";p_timer[5,run]=0;
}


run=-1;repeat(22){run+=1;present_fleet[run]=0;}
vision=1;
// present_fleets=0;
// tau_fleets=0;



ai_a=-1;
ai_b=-1;
ai_c=-1;
ai_d=-1;
ai_e=-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var rando,i,contin;
rando=0;i=0;contin=0;


repeat(4){
    i+=1;
    // Check for industrial facilities
    if (p_type[i]!="Dead") and (p_type[i]!="Lava"){// Used to not have Ice either
        if (p_orks[i]&gt;=4){// Have the proppa facilities and size
            var fleet;fleet=0;contin=2;
            if (instance_number(obj_en_fleet)=0) then contin=3;
            if (instance_number(obj_en_fleet)&gt;0) then contin=2;
            
            if (instance_exists(obj_p_fleet)){
                var ppp;ppp=instance_nearest(x,y,obj_p_fleet);
                if (point_distance(x,y,ppp.x,ppp.y)&lt;50) and (ppp.action="") then contin=0;
            }
            if (contin=2){
                fleet=instance_nearest(x+32,y,obj_en_fleet);
                if (fleet.owner!=7) or (point_distance(x+32,y,fleet.x,fleet.y)&gt;5) or (fleet.action!="") then contin=3;
                if (fleet.owner=7) and (point_distance(x+32,y,fleet.x,fleet.y)&lt;=5) and (fleet.action="") and (contin!=3){
                    rando=choose(1,1,1,1,1,3,3,3,3);
                    if (rando=1) then fleet.capital_number+=1;
                    // if (rando=2) then fleet.frigate_number+=1;
                    if (rando=3) then fleet.escort_number+=1;
                    
                    if (fleet.image_index&gt;=5){
                        // eh heh heh
                        var stue, stue2;stue=0;stue2=0;
                        var goood;goood=0;
                        
                        with(obj_star){if (planets=1) and (p_type[1]="Dead") then instance_deactivate_object(instance_id);}
                        stue=instance_nearest(fleet.x,fleet.y,obj_star);
                        instance_deactivate_object(stue);
                        repeat(10){
                            if (goood=0){
                                stue2=instance_nearest(fleet.x+choose(random(400),random(400)*-1),fleet.y+choose(random(100),random(100)*-1),obj_star);
                                if (stue2.owner!=7) then goood=1;
                                
                                
                                if (stue.owner=7) and (instance_exists(stue)){// New code testing
                                    if (stue.present_fleet[7]&gt;0){
                                        var fli;fli=instance_nearest(stue.x,stue.y,obj_en_fleet);
                                        if (fli.action="") and (owner!=7) and (point_distance(stue.x,stue.y,fli.x,fli.y)&lt;60) then goood=1;
                                        var fli;fli=instance_nearest(stue.x,stue.y,obj_p_fleet);
                                        if (fli.action="") and (owner!=7) and (point_distance(stue.x,stue.y,fli.x,fli.y)&lt;60) then goood=1;
                                    }
                                }// End new code testing
                                
                                
                                if (stue2.planets=0) then goood=0;
                                if (stue2.planets=1) and (stue2.p_type[1]="Dead") then goood=0;
                            }
                        }
                        fleet.action_x=stue2.x;fleet.action_y=stue2.y;fleet.alarm[4]=1;// present_fleets-=1;
                        instance_activate_object(obj_star);
                        
                        
                    }
                }
            }
            if (contin=3) and (rando&lt;=25){// Create a fleet
                // fleet=instance_create
                fleet=instance_create(x+32,y,obj_en_fleet);
                fleet.owner=7;
                fleet.sprite_index=spr_fleet_ork;
                fleet.image_index=1;
                fleet.capital_number=2;
                // present_fleets+=1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Select</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (obj_controller.zoomed=1){obj_controller.x=self.x;obj_controller.y=self.y;}
obj_controller.popup=3;// 3: star system
obj_controller.sel_system_x=x;
obj_controller.sel_system_y=y;

selected=1;

var xx,yy;xx=x;yy=y;

obj_controller.selected=self.id;
obj_controller.sel_owner=self.owner;
obj_controller.cooldown=8;
obj_controller.selecting_planet=0;

if (obj_controller.zoomed=1){obj_controller.zoomed=0;view_visible[0]=true;view_visible[1]=false;obj_cursor.image_xscale=1;obj_cursor.image_yscale=1;}

// Pass variables to obj_controller.temp[t]=""; here
with(obj_star_select){instance_destroy();}
instance_create(x,y,obj_star_select);
obj_star_select.owner=self.owner;
obj_star_select.target=self.id;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Income Return</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if (instance_exists(obj_temp1)){
    var tempy, tempy_d, biggy;
    tempy=0;tempy_d=9999;biggy=0;

    tempy=instance_nearest(x,y,obj_temp1);
    tempy_d=point_distance(x,y,tempy.x,tempy.y);
    
    if (tempy_d&gt;10) and (tempy_d&lt;=180){// Nearby star system
        var i;i=0;    
        repeat(4){
            i+=1;
            if (p_type[i]="Forge") and (p_owner[i]=3) then obj_controller.income_forge+=2;
            if (p_type[i]="Agri") and (p_owner[i]=2) then obj_controller.income_agri+=1;
        }
        // if (tempy_d&lt;5) then instance_deactivate_object(self);
    }
    
    biggy=instance_nearest(obj_temp1.x,obj_temp1.y,obj_star);
    if (biggy.owner=1) and (tempy_d&gt;180) and ((biggy.buddy=id) or (buddy=biggy)){
        var i;i=0;
        repeat(4){
            i+=1;
            if (p_type[i]="Forge") and (p_owner[i]=3) then obj_controller.income_forge+=2;
            if (p_type[i]="Agri") and (p_owner[i]=2) then obj_controller.income_agri+=1;
        }
    }
    
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Initialize Pt 2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var i;
i=1;

// p_population[run]=0;p_guardsmen[run]=0;p_pdf[run]=0;


repeat(4){
    p_population[i]=0;// 10B        
    
    if (p_type[i]="Lava"){
        p_population[i]=floor(random(100))+400;p_station[i]=2;
        p_max_population[i]=500;
    }
    if (p_type[i]="Desert"){
        p_population[i]=floor(random(300000000))+50000000;p_fortified[i]=choose(2,3,4);p_station[i]=3;
        p_max_population[i]=350000000;
    }
    if (p_type[i]="Hive"){
        p_population[i]=random(50)+50;p_large[i]=1;p_fortified[i]=4;p_station[i]=choose(4,5);
        p_max_population[i]=150;
    }
    if (p_type[i]="Agri"){
        p_population[i]=floor(random(10000000))+5000000;p_fortified[i]=choose(0,1);p_station[i]=choose(0,1);
        p_max_population[i]=15000000;
    }
    if (p_type[i]="Temperate"){
        p_population[i]=random(2)+5;p_large[i]=1;p_fortified[i]=choose(3,4);p_station[i]=choose(3,4);
        p_max_population[i]=7;
    }
    if (p_type[i]="Shrine"){
        p_population[i]=random(2)+4;p_large[i]=1;p_fortified[i]=choose(4,5);p_station[i]=choose(4,5);
        p_max_population[i]=7;
    }
    if (p_type[i]="Ice"){
        p_population[i]=floor(random(1500000))+500000;p_fortified[i]=choose(1,2,3);p_station[i]=choose(1,2,3);
        p_max_population[i]=2000000;
    }
    if (p_type[i]="Feudal"){
        p_population[i]=floor(random(100000000))+50000000;p_fortified[i]=choose(2,3);p_station[i]=choose(2,3,4);
        p_max_population[i]=150000000;
    }
    if (p_type[i]="Forge"){
        p_population[i]=random(2)+4;p_large[i]=1;p_fortified[i]=5;p_station[i]=5;
        p_max_population[i]=6;
    }
    if (p_type[i]="Death"){
        p_population[i]=floor(random(4900000))+100000;p_station[i]=choose(2,3);
        p_max_population[i]=5000000;
    }
    if (p_type[i]="Craftworld"){
        p_population[i]=floor(random_range(150000,300000));p_station=6;
        p_max_population[i]=p_population;
    }
    
    
    
    if (p_population[i]&gt;=10000000){
        var military;military=p_population[i]/470;
        p_guardsmen[i]=floor(military*0.25);
        p_pdf[i]=floor(military*0.75);
    }
    if (p_population[i]&gt;=5000000) and (p_population[i]&lt;10000000){
        var military;military=p_population[i]/200;
        p_guardsmen[i]=floor(military*0.25);
        p_pdf[i]=floor(military*0.75);
    }
    if (p_population[i]&gt;=100000) and (p_population[i]&lt;5000000){
        var military;military=p_population[i]/50;
        p_guardsmen[i]=floor(military*0.25);
        p_pdf[i]=floor(military*0.75);
    }
    if (p_population[i]&lt;100000) and (p_population[i]&gt;5) and (p_large[i]=0){
        p_pdf[i]=floor(p_population[i]/25);
    }
    if (p_population[i]&lt;2000) and (p_population[i]&gt;5) and (p_large[i]=0){
        p_pdf[i]=floor(p_population[i]/10);
    }
    if (p_large[i]=1){
        p_guardsmen[i]=floor(p_population[i]*1250000);
        p_pdf[i]=p_guardsmen[i]*3;
    }
    
    if (p_population[i]&lt;1000000)  and (p_large[i]=0)then p_pop[i]=string(p_population[i]);
    if (p_population[i]&gt;999999)  and (p_large[i]=0)and (p_population[i]&lt;1000000000) then p_pop[i]=string(p_population[i]/1000000)+"M";
    if (p_large[i]=1) then p_pop[i]=string(p_population[i])+"B";
    
    if (craftworld=1){p_guardsmen[i]=0;p_pdf[i]=0;p_eldar[i]=6;owner=6;p_owner[1]=6;buddy=0;x2=0;}
    
    p_guardsmen[i]=0;
    i+=1;
}
i=0;repeat(4){i+=1;p_guardsmen[i]=0;}




var fleet, flit, capital, frigate, escort, v;flit=0;capital=0;frigate=0;escort=0;v=0;
if (owner=2) or (owner=7) or (owner=3){// create imperial fleet

    var g;g=0;
    repeat(4){g+=1;
        if (p_type[g]="Hive") then flit+=4;
        if (p_type[g]="Forge") then flit+=8;
        if (p_type[g]="Desert") or (p_type[g]="Temperate") then flit+=1;
        if (p_type[g]="Feudal") or (p_type[g]="Ice") then flit+=0.5;
        if (p_type[g]="Shrine") then flit+=2;
    }
    
    frigate=round(flit/2);
    escort=round(flit);
    
    /*if (flit&gt;=4){
        // capital=choose(0,1);
        frigate=choose(3,4,5,6);
        escort=floor(random_range(4,10));
        
        if (owner=7) and (capital&gt;0) then capital-=choose(0,1);
        if (owner=7) and (frigate&gt;0) then frigate-=floor(random(4));
        if (owner=7) and (escort&gt;0) then escort-=floor(random(4));
    }
    if (flit&gt;=1) and (flit&lt;4){
        capital=choose(0,0,0,1);
        frigate=floor(random_range(2,5));
        escort=floor(random_range(3,8));
        
        if (owner=7) and (capital&gt;0) then capital-=choose(0,1,2);
        if (owner=7) and (frigate&gt;0) then frigate-=floor(random(6));
        if (owner=7) and (escort&gt;0) then escort-=floor(random(6));
    }
    if (flit&lt;1) and (flit&gt;0){
        frigate=floor(random_range(1,3));
        escort=floor(random_range(2,5));
        
        if (owner=7) and (capital&gt;0) then capital-=choose(0,1,2,3);
        if (owner=7) and (frigate&gt;0) then frigate-=floor(random(8));
        if (owner=7) and (escort&gt;0) then escort-=floor(random(8));
    }
    
    capital=round(capital/2);
    frigate=round(frigate/2);
    escort=round(escort/2);*/
    
    if (capital&lt;0) then capital=0;
    if (frigate&lt;0) then frigate=0;
    if (escort&lt;0) then escort=0;
    
    
    if (flit&gt;0){                                                      // DISABLED FOR TESTING FLEET COMBAT
        fleet=instance_create(x,y-32,obj_en_fleet);
        fleet.owner=2;
        
        fleet.capital_number=capital;
        fleet.frigate_number=frigate;
        fleet.escort_number=escort;
        
        // present_fleet[2]+=1;
        
        // Create ships here
        fleet.image_speed=0;
        var ii;ii=0;ii+=capital-1;ii+=round((frigate/2));ii+=round((escort/4));
        if (ii&lt;=1) and (capital+frigate+escort&gt;0) then ii=1;
        fleet.image_index=ii;
    }
    
}


if (owner=7){
    if (p_population[1]&gt;0) then p_orks[1]=1;
    if (p_population[2]&gt;0) then p_orks[2]=1;
    if (p_population[3]&gt;0) then p_orks[3]=1;
    if (p_population[4]&gt;0) then p_orks[4]=1;
    
    if (p_orks[1]&gt;0){p_orks[1]=choose(1,2,3,3,4,5);if (p_type[1]="Forge") or (p_type[1]="Hive") then p_orks[1]=choose(5);}
    if (p_orks[2]&gt;0){p_orks[2]=choose(1,2,3,3,4,5);if (p_type[2]="Forge") or (p_type[2]="Hive") then p_orks[2]=choose(5);}
    if (p_orks[3]&gt;0){p_orks[3]=choose(1,2,3,3,4,5);if (p_type[3]="Forge") or (p_type[3]="Hive") then p_orks[3]=choose(5);}
    if (p_orks[4]&gt;0){p_orks[4]=choose(1,2,3,3,4,5);if (p_type[4]="Forge") or (p_type[4]="Hive") then p_orks[4]=choose(5);}
}





flit=1;capital=0;frigate=0;escort=0;v=0;
if (owner=8){// create tau fleet
    if (p_type[1]="Desert") then flit+=5;if (p_type[2]="Desert") then flit+=5;
    if (p_type[3]="Desert") then flit+=5;if (p_type[4]="Desert") then flit+=5;
    
    if (flit&gt;=4){
        capital=choose(1,2,2,2,3,4);
        frigate=floor(random_range(5,10));
        escort=floor(random_range(8,14));
    }
    if (flit&gt;=1) and (flit&lt;3){
        capital=choose(1,2,2);
        frigate=floor(random_range(4,8));
        escort=floor(random_range(5,12));
    }
    
    if (flit&gt;0){
        fleet=instance_create(x-24,y-24,obj_en_fleet);
        fleet.owner=8;
        // Create ships here
        fleet.sprite_index=spr_fleet_tau;
        fleet.image_speed=0;
        
        
        fleet.capital_number=capital;
        fleet.frigate_number=frigate;
        fleet.escort_number=escort;
        
        fleet.image_index=floor((capital)+(frigate/2)+(escort/4));
        
        // present_fleets+=1;tau_fleets+=1;
    }
    
    // p_tau[1]=0;p_tau[2]=0;p_tau[3]=0;p_tau[4]=0;
    /*if (p_population[1]&gt;0) then p_tau[1]=1;
    if (p_population[2]&gt;0) then p_tau[2]=1;
    if (p_population[3]&gt;0) then p_tau[3]=1;
    if (p_population[4]&gt;0) then p_tau[4]=1;*/
    
    if (p_type[1]!="Dead") then p_tau[1]=choose(1,2,3,4);
    if (p_type[2]!="Dead") then p_tau[2]=choose(1,2,3,4);
    if (p_type[3]!="Dead") then p_tau[3]=choose(1,2,3,4);
    if (p_type[4]!="Dead") then p_tau[4]=choose(1,2,3,4);
    
    if (p_type[1]="Desert") and (p_tau[1]&lt;4) then p_tau[1]=4;
    if (p_type[2]="Desert") and (p_tau[2]&lt;4) then p_tau[2]=4;
    if (p_type[3]="Desert") and (p_tau[3]&lt;4) then p_tau[3]=4;
    if (p_type[4]="Desert") and (p_tau[4]&lt;4) then p_tau[4]=4;
    
    if (p_tau[1]&gt;0){p_owner[1]=8;p_first[1]=8;
        if (p_type[1]="Forge") or (p_type[1]="Hive") then p_tau[1]=choose(2,3);if (p_type[1]="Ice") then p_tau[1]=choose(1,2);
        if (p_type[1]="Temperate") or (p_type[1]="Desert") or (p_type[1]="Feudal") then p_tau[1]=choose(3,3,4,4,5);
    }
    if (p_tau[2]&gt;0){p_owner[2]=8;p_first[2]=8;
        if (p_type[2]="Forge") or (p_type[2]="Hive") then p_tau[2]=choose(2,3);if (p_type[2]="Ice") then p_tau[2]=choose(1,2);
        if (p_type[2]="Temperate") or (p_type[2]="Desert") or (p_type[2]="Feudal") then p_tau[2]=choose(3,3,4,4,5);
    }
    if (p_tau[3]&gt;0){p_owner[3]=8;p_first[3]=8;
        if (p_type[3]="Forge") or (p_type[3]="Hive") then p_tau[3]=choose(2,3);if (p_type[3]="Ice") then p_tau[3]=choose(1,2);
        if (p_type[3]="Temperate") or (p_type[3]="Desert") or (p_type[3]="Feudal") then p_tau[3]=choose(3,3,4,4,5);
    }
    if (p_tau[4]&gt;0){p_owner[4]=8;p_first[4]=8;
        if (p_type[4]="Forge") or (p_type[3]="Hive") then p_tau[4]=choose(2,3);if (p_type[4]="Ice") then p_tau[4]=choose(1,2);
        if (p_type[4]="Temperate") or (p_type[3]="Desert") or (p_type[4]="Feudal") then p_tau[4]=choose(3,3,4,4,5);
    }
    
    p_owner[1]=8;p_first[1]=8;p_influence[1]=70;
    p_owner[2]=8;p_first[2]=8;p_influence[2]=70;
    p_owner[3]=8;p_first[3]=8;p_influence[3]=70;
    p_owner[4]=8;p_first[4]=8;p_influence[4]=70;
    
    /*if (p_population[4]&lt;=0) then exit;
    
    if (p_tau[4]&gt;0){p_owner[4]=8;
        if (p_type[4]="Forge") or (p_type[4]="Hive") then p_tau[4]=choose(2,3);if (p_type[4]="Ice") then p_tau[4]=choose(1,2);
        if (p_type[4]="Temperate") or (p_type[4]="Desert") or (p_type[4]="Feudal") then p_tau[4]=choose(3,3,4,4,5);
    }
    if (p_type[4]="Desert") and (p_tau[4]&lt;4) then p_tau[4]=4;*/
    
    
}



if (owner=9){
    if (p_population[1]&gt;0) then p_tyranids[1]=1;
    if (p_population[2]&gt;0) then p_tyranids[2]=1;
    if (p_population[3]&gt;0) then p_tyranids[3]=1;
    if (p_population[4]&gt;0) then p_tyranids[4]=1;
    
    if (p_tyranids[1]&gt;0){p_tyranids[1]=choose(4,5);if (p_type[1]="Forge") or (p_type[1]="Hive") then p_tyranids[1]=choose(5);}
    if (p_tyranids[2]&gt;0){p_tyranids[2]=choose(4,5);if (p_type[2]="Forge") or (p_type[2]="Hive") then p_tyranids[2]=choose(5);}
    if (p_tyranids[3]&gt;0){p_tyranids[3]=choose(4,5);if (p_type[3]="Forge") or (p_type[3]="Hive") then p_tyranids[3]=choose(5);}
    if (p_tyranids[4]&gt;0){p_tyranids[4]=choose(4,5);if (p_type[4]="Forge") or (p_type[4]="Hive") then p_tyranids[4]=choose(5);}
    
    p_owner[1]=2;p_owner[2]=2;p_owner[3]=2;p_owner[4]=2;
}


if (owner&gt;20){
    if (p_population[1]&gt;0) then p_tyranids[1]=3;
    if (p_population[2]&gt;0) then p_tyranids[2]=3;
    if (p_population[3]&gt;0) then p_tyranids[3]=3;
    if (p_population[4]&gt;0) then p_tyranids[4]=3;
    
    p_owner[1]=2;p_owner[2]=2;p_owner[3]=2;p_owner[4]=2;
    owner=9;
}



var i;i=0;
repeat(4){i+=1;
    if (p_owner[i]=8) and (p_guardsmen[i]&gt;0){p_pdf[i]+=p_guardsmen[i];p_guardsmen[i]=0;}
    if (p_type[i]="Shrine") and (p_owner[i]!=1) and (p_first[i]!=1){p_owner[i]=5;p_first[i]=5;p_sisters[i]=4;}
    // if (p_owner[i]=3) or (p_owner[i]=5){p_feature[i]="Artifact|";}Testing ; 137
}



if (name="Kim Jong") and (owner=10){
    // if (owner=10){
        if (p_type[1]!="Dead"){p_heresy[1]=100;p_traitors[1]=2;}
        if (p_type[2]!="Dead"){p_heresy[2]=100;p_traitors[2]=2;}
        if (p_type[3]!="Dead"){p_heresy[3]=100;p_traitors[3]=2;}
        if (p_type[4]!="Dead"){p_heresy[4]=100;p_traitors[4]=2;}
    // }
}


obj_controller.alarm[3]=1;


i=choose(0,1);
if (i=1) and (planets&gt;0){
    var nostart,aa;nostart=false;aa=0;
    i=floor(random(planets))+1;
    
    if (instance_exists(obj_p_fleet)) then aa=instance_nearest(x,y,obj_p_fleet);
    if (instance_exists(obj_p_fleet)){if (point_distance(x,y,aa.x,aa.y)&gt;50) then nostart=true;}
    if (!instance_exists(obj_p_fleet)) then nostart=true;
    
    if (p_feature[i]="") and (p_owner[i]!=1) and (nostart=true) then p_feature[i]="????|";
}





var hyu;hyu=0;i=0;
repeat(4){i+=1;
    if (p_tyranids[i]&gt;=5){
        p_guardsmen[i]=0;
        p_pdf[i]=0;
        p_population[i]=0;
        hyu+=1;
        p_owner[i]=9;
    }
    if (p_first[i]&lt;=5) and (dispo[i]&gt;-5000) then dispo[i]=-20;
}
if (hyu=0) and (owner=9) then owner=2;


scr_star_ownership(false);

/*if (p_owner[1]=5) or (p_owner[2]=5) or (p_owner[3]=5) or (p_owner[4]=5){
    var ngood;ngood=0;
    if (p_owner[1]!=7) and (p_owner[2]!=7) and (p_owner[3]!=7) and (p_owner[4]!=7) then ngood+=1;
    if (p_owner[1]!=8) and (p_owner[2]!=8) and (p_owner[3]!=8) and (p_owner[4]!=8) then ngood+=1;
    if (p_owner[1]!=13) and (p_owner[2]!=13) and (p_owner[3]!=13) and (p_owner[4]!=13) then ngood+=1;
    if (ngood=3) then owner=5;
}*/
// Cult testing
// p_feature[1]="Artifact";
// if (planets&gt;=1) and (global.debug=1) then p_feature[1]="Necron Tomb";
// p_problem[1,1]="bomb";
// p_timer[1,1]=30;
// p_orks[1]=2;
// p_tau[1]=3;
// p_owner[1]=8;
// p_pdf[1]=0;
// p_guardsmen[1]=0;
// p_population[1]=0;
/*    p_type[1]="Daemon";p_fortified[1]=6;p_traitors[1]=7;p_owner[1]=10;
    p_feature[1]="";
*/
// p_feature[1]="Ancient Ruins";
// p_feature[2]="Artifact";
// if (planets&gt;=1){p_problem[1,1]="spyrer";p_timer[1,1]=100;}
// if (planets&gt;=3){p_problem[3,1]="bomb";p_timer[3,1]=10;}

// if (p_type[2]!="Hive") and (p_type[2]!="Dead") and (choose(0,0,1)=1) then p_population[2]=0;


/*if (planets&gt;=1) then p_tyranids[1]=choose(0,0,0,1,2,3);
if (planets&gt;=2) then p_tyranids[2]=choose(0,0,0,1,2,3);
if (planets&gt;=3) then p_tyranids[3]=choose(0,0,0,1,2,3);
if (planets&gt;=4) then p_tyranids[4]=choose(0,0,0,1,2,3);*/


// if (owner=2) or (owner=3) {var i;i=0;repeat(4){i+=1;p_heresy[i]=40;}}



/*if (p_type[1]="Dead") and (present_fleets=0){
        fleet=instance_create(x,y+32,obj_en_fleet);
        fleet.owner=9;
        // Create ships here
        fleet.sprite_index=spr_fleet_tyranid;
        fleet.image_speed=0;
        fleet.capital_number=choose(1,2,3);
        fleet.frigate_number=round(random_range(3,5));
        fleet.escort_number=round(random_range(6,10));
        fleet.image_index=floor((fleet.capital_number)+(fleet.frigate_number/2)+(fleet.escort_number/4));
        fleet.image_alpha=0;
        
        obj_controller.x=fleet.x;
        obj_controller.y=fleet.y;
        
        present_fleets+=1;
}*/


/*p_pdf[1]=0;p_guardsmen[1]=0;
p_pdf[2]=0;p_guardsmen[2]=0;
p_tyranids[1]=3;
p_tyranids[2]=3;*/

// if (choose(0,0,0,1)=1) and (p_feature[2]="") then p_feature[floor(random(planets))+1]="Awakened Necron Tomb|";



if (obj_controller.test_map=true){
    /*if (p_owner[1]=3) then p_feature[1]="STC Fragment|";
    if (p_owner[2]=3) then p_feature[2]="STC Fragment|";
    if (p_owner[3]=3) then p_feature[3]="STC Fragment|";
    
    
    // Testing new guardsmen
    p_guardsmen[1]=5000000;
    p_tyranids[1]=4;
    
    p_guardsmen[2]=500000;
    p_tyranids[2]=3;
    
    p_guardsmen[3]=100000;
    p_tyranids[3]=2;
    
    p_orks[1]=0;p_orks[2]=0;p_orks[3]=0;*/
}

// if (obj_controller.test_map=true) and (p_owner[2]=1){

if (p_owner[2]=1){
    

    /*
    p_guardsmen[2]=10000000;
    p_pdf[2]=0;
    obj_controller.faction_status[2]="War";
    */
    
    
    // p_type[1]="Dead";
    // p_feature[2]="";
    
    // p_orks[2]=3;
    // p_feature[2]="Starship!0!|";
    
    /*repeat(4){
        var fleet;fleet=instance_create(x+(floor(random_range(100,200))*choose(1,-1)),y+(floor(random_range(100,200))*choose(1,-1)),obj_en_fleet);
        fleet.owner=10;fleet.sprite_index=spr_fleet_chaos;fleet.orbiting=0;
        fleet.action_x=x;fleet.action_y=y;fleet.alarm[4]=1;
        
        fleet.capital_number=0;
        fleet.frigate_number=1;
        fleet.escort_number=2;
        
        // Create ships here
        fleet.image_speed=0;
        var ii;ii=0;ii+=capital-1;ii+=round((frigate/2));ii+=round((escort/4));
        if (ii&lt;=1) and (capital+frigate+escort&gt;0) then ii=1;
        fleet.image_index=ii;
    }*/
    
}

obj_controller.alarm[9]=2;
if (obj_controller.test_map!=true) and (p_owner[2]!=1){i=0;repeat(4){i+=1;p_guardsmen[i]=0;}}

// var ii;ii=0;repeat(4){ii+=1;p_feature[ii]="STC Fragment|";}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Initialize Pt 1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (obj_controller.craftworld=0) and (space_hulk=0){
    var test,oldx,oldy;
    oldx=x;oldy=y;
    x-=5000;y-=5000;
    test=instance_nearest(oldx+choose(random(200),1*-random(200)),oldy+choose(random(200),1*-random(200)),obj_star);
    x2=test.x;y2=test.y;
    buddy=test;
    x=oldx;y=oldy;
}


repeat(80){
    if ((name="random") or (name="")) and (craftworld=0) and (space_hulk=0) then scr_star_name();
    if (name="") and (craftworld=1) then name=scr_eldar_name(3);
}



if (obj_controller.craftworld=1) and (space_hulk=0){
    star="craftworld";sprite_index=spr_craftworld;image_index=0;image_speed=0;
    planets=1;p_type[1]="Craftworld";heresy=-999;p_owner[1]=6;p_first[1]=6;owner=6;
    p_population[1]=floor(random_range(150000,300000));p_fortified[1]=6;p_eldar[1]=6;
    old_x=x;old_y=y;
    exit;
}
if (space_hulk=1){
    star="space_hulk";sprite_index=spr_star_hulk;image_index=0;image_speed=0;
    planets=1;p_type[1]="Space Hulk";heresy=-999;p_owner[1]=2;
    p_population[1]=0;p_fortified[1]=5;
    
    var loll;loll=choose(7,9,9,9,9,9,10);
    if (loll=7) then p_orks[1]=choose(3,4,5);
    /*if (loll=7) and (planets&gt;=2) then p_orks[2]=choose(3,4,5);
    if (loll=7) and (planets&gt;=3) then p_orks[3]=choose(3,4,5);
    if (loll=7) and (planets&gt;=4) then p_orks[4]=choose(3,4,5);*/
    
    if (loll=9) then p_tyranids[1]=choose(3,4,5);
    /*if (loll=9) and (planets&gt;=2) then p_tyranids[2]=choose(3,4,5);
    if (loll=9) and (planets&gt;=3) then p_tyranids[3]=choose(3,4,5);
    if (loll=9) and (planets&gt;=4) then p_tyranids[4]=choose(3,4,5);*/
    
    if (loll=10) then p_traitors[1]=choose(2,3,4);
    /*if (loll=10) and (planets&gt;=2) then p_chaos[2]=choose(2,3,4);
    if (loll=10) and (planets&gt;=3) then p_chaos[3]=choose(2,3,4);
    if (loll=10) and (planets&gt;=4) then p_chaos[4]=choose(2,3,4);*/
    
    // show_message("space hulking#ORK:"+string(p_orks[1])+" | TYR:"+string(p_tyranids[1])+" | CSM:"+string(p_traitors[1]));
    
    p_first[1]=loll;
    
    old_x=x;old_y=y;p_owner[1]=loll;vision=1;
    exit;
}



var rui;
rui=choose(0,0,0,0,1,1,2,2,3,4,5);// had a 6 at the end of here; probably causing empty stars
if (rui=0){star="orange1";image_index=0;}
if (rui=1){star="orange2";image_index=1;}
if (rui=2){star="red";image_index=2;}
if (rui=3){star="white1";image_index=3;}
if (rui=4){star="white2";image_index=4;}
if (rui=5){star="blue";image_index=5;}
image_speed=0;
image_alpha=1;


if (star="orange1") or (star="orange2") then planets=choose(1,2,3,3,4);
if (star="red") then planets=choose(1,2,3);
if (star="white1") or (star="white2") then planets=choose(1,1,2);
if (star="blue") then planets=1;



rui=-1;




if (star="orange1") or (star="orange2"){rui=0;
    repeat(4){rui+=1;
        if (planets&gt;=rui){
            planet[rui]=1;
            p_type[rui]=choose("Temperate","Temperate",choose("Temperate","Shrine"),"Feudal","Agri","Death","Desert","Ice","Hive");
            if (p_type[rui]="Agri") or (p_type[rui]="Hive"){p_owner[rui]=2;p_first[rui]=2;}
        }
    }
}
if (star="red"){rui=0;
    repeat(4){rui+=1;
        if (planets&gt;=rui){
            planet[rui]=1;
            p_type[rui]=choose(choose("Temperate","Temperate","Temperate","Feudal","Feudal","Shrine"),"Desert","Dead","Hive","Lava");
        }
    }
}
if (star="white1") or (star="white2"){rui=0;
    repeat(4){rui+=1;
        if (planets&gt;=rui){
            planet[rui]=1;
            p_type[rui]=choose(choose("Temperate","Temperate","Temperate","Feudal","Feudal","Shrine"),"Death","Ice","Hive","Dead");
        }
    }
}
if (star="blue"){rui=0;
    repeat(4){rui+=1;
        if (planets&gt;=rui){
            planet[rui]=1;
            p_type[rui]=choose(choose("Temperate","Temperate","Temperate","Feudal","Feudal","Shrine"),"Ice","Ice","Dead","Dead");
        }
    }
}


if (name="Kim Jong"){
    planets=3;
    p_type[1]="Dead";planet[1]=1;
    p_type[2]="Temperate";planet[2]=1;
    p_type[3]="Dead";planet[3]=1;
}
if (name="Muric"){
    planets=4;
    p_type[1]="Hive";planet[1]=1;
    p_type[2]="Temperate";planet[2]=1;
    p_type[3]="Agri";planet[3]=1;
    p_type[4]="Agri";planet[4]=1;
}
if (name="Morrowynd"){planets=3;
    p_type[1]="Feudal";planet[1]=1;p_feature[1]="????|";
    p_type[2]="Dead";planet[2]=1;
    p_type[3]="Dead";planet[3]=1;
}





var a,b,c,d,e,f,g,h;
a=99;b=99;c=99;d=99;e="";f=0;g="";h=0;

repeat(10){
    e=p_type[1];
    if (e="Lava") then a=1;if (e="Desert") then a=2;if (e="Hive") then a=3;
    if (e="Death") then a=4;if (e="Agri") then a=5;if (e="Temperate") then a=6;if (e="Feudal") then a=choose(5.5,6.5);if (e="Shrine") then a=choose(5.6,6.6);
    if (e="Ice") then a=7;if (e="Dead") then a=1;
    e=p_type[2];
    if (e="Lava") then b=1;if (e="Desert") then b=2;if (e="Hive") then b=3;
    if (e="Death") then b=4;if (e="Agri") then b=5;if (e="Temperate") then b=6;if (e="Feudal") then b=choose(5.5,6.5);if (e="Shrine") then b=choose(5.6,6.6);
    if (e="Ice") then b=7;if (e="Dead") then b=2.5;
    e=p_type[3];
    if (e="Lava") then c=1;if (e="Desert") then c=2;if (e="Hive") then c=3;
    if (e="Death") then c=4;if (e="Agri") then c=5;if (e="Temperate") then c=6;if (e="Feudal") then c=6choose(5.5,6.5);if (e="Shrine") then c=choose(5.6,6.6);
    if (e="Ice") then c=7;if (e="Dead") then c=3.5;
    e=p_type[4];
    if (e="Lava") then d=1;if (e="Desert") then d=2;if (e="Hive") then d=3;
    if (e="Death") then d=4;if (e="Agri") then d=5;if (e="Temperate") then d=6;if (e="Feudal") then d=choose(5.5,6.5);if (e="Shrine") then d=choose(5.6,6.6);
    if (e="Ice") then d=7;if (e="Dead") then d=4.5;

    if (d&lt;c){
        f=c;e=p_type[3];
        c=d;p_type[3]=p_type[4];
        p_type[4]=e;d=f;
    }
    
    if (c&lt;b){
        f=b;e=p_type[2];
        b=c;p_type[2]=p_type[3];
        p_type[3]=e;c=f;
    }
    
    if (b&lt;a){
        f=a;e=p_type[1];
        a=b;p_type[1]=p_type[2];
        p_type[2]=e;b=f;
    }
    
    
    
    
}





if (p_type[1]!=""){p_owner[1]=2;p_first[1]=2;}
if (p_type[2]!=""){p_owner[2]=2;p_first[2]=2;}
if (p_type[3]!=""){p_owner[3]=2;p_first[3]=2;}
if (p_type[4]!=""){p_owner[4]=2;p_first[4]=2;}

if (p_type[1]!="Dead") then p_heresy[1]=floor(random(10))+1;
if (p_type[2]!="Dead") then p_heresy[2]=floor(random(10))+1;
if (p_type[3]!="Dead") then p_heresy[3]=floor(random(10))+1;
if (p_type[4]!="Dead") then p_heresy[4]=floor(random(10))+1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (global.load&gt;0){
    sprite_index=spr_star;
    if (star="orange1") then image_index=0;
    if (star="orange2") then image_index=1;
    if (star="red") then image_index=2;
    if (star="white1") then image_index=3;
    if (star="white2") then image_index=4;
    if (star="blue") then image_index=5;
    if (vision=1) then image_alpha=1;
    if (vision=0) then image_alpha=0;
    exit;
}



if (name!="") and (planets=0) and (image_alpha!=0.33) then image_alpha=0.33;
if (name!="") and (planets!=0) and (image_alpha=0.33) then image_alpha=1;
if (storm&gt;0) then storm_image+=1;
if (storm=0) then storm_image=0;


if (planets=1) and (p_type[1]="Dead") then image_alpha=0.33;
if (planets=2) and (p_type[1]="Dead") and (p_type[2]="Dead") then image_alpha=0.33;
if (planets=3) and (p_type[1]="Dead") and (p_type[2]="Dead") and (p_type[3]="Dead") then image_alpha=0.33;
if (planets=4) and (p_type[1]="Dead") and (p_type[2]="Dead") and (p_type[3]="Dead") and (p_type[4]="Dead") then image_alpha=0.33;




// if (tau_fleets&lt;0) then tau_fleets=0;


if (ai_a&gt;=0) then ai_a-=1;
if (ai_b&gt;=0) then ai_b-=1;
if (ai_c&gt;=0) then ai_c-=1;
if (ai_d&gt;=0) then ai_d-=1;
if (ai_e&gt;=0) then ai_e-=1;


if (ai_a=0) then scr_enemy_ai_a();
if (ai_b=0) then scr_enemy_ai_b();
if (ai_c=0) then scr_enemy_ai_c();
if (ai_d=0) then scr_enemy_ai_d();
if (ai_e=0){scr_enemy_ai_e();scr_apothecary_ground();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_saveload</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_drop_select</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_bomb_select</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

var m_dist;
m_dist=point_distance(x,y,mouse_x,mouse_y);

if (obj_controller.cooldown&gt;0) then exit;
if ((obj_controller.zoomed=0) and (mouse_y&lt;view_yview[0]+62)) or (obj_controller.menu!=0) then exit;
if ((obj_controller.zoomed=0) and (mouse_y&gt;view_yview[0]+830)) or (obj_controller.menu!=0) then exit;
if (p_type[1]="Craftworld") and (obj_controller.known[6]=0) then exit;
if (vision=0) then exit;

/*if (instance_exists(obj_fleet_select)){
    var free,z;free=1;z=obj_fleet_select;
    if (mouse_x&gt;=view_xview[0]+z.void_x) and (mouse_y&gt;=view_yview[0]+z.void_y) 
    and (mouse_x&lt;view_xview[0]+z.void_x+z.void_wid) and (mouse_y&lt;view_yview[0]+z.void_y+z.void_hei) and (obj_controller.fleet_minimized=0) then free=0;
    
    if (mouse_x&gt;=view_xview[0]+z.void_x) and (mouse_y&gt;=view_yview[0]+z.void_y) 
    and (mouse_x&lt;view_xview[0]+z.void_x+z.void_wid) and (mouse_y&lt;view_yview[0]+137) and (obj_controller.fleet_minimized=1) then free=0;
    if (free=0) then exit;
}

if (obj_controller.popup=3){// Prevent hitting through the planet select
    if (mouse_x&gt;view_xview[0]+27) and (mouse_y&gt;view_yview[0]+166) and (mouse_x&lt;view_xview[0]+346) and (mouse_y&lt;view_yview[0]+458) then exit;
}
if (obj_controller.selecting_planet&gt;0){// This prevents clicking onto a new star by pressing the buttons or planet panel
    var xx,yy;xx=view_xview[0]+0;yy=view_yview[0]+0;
    if (scr_hit(xx+27,yy+166,xx+727,yy+458)) and (instance_exists(obj_star_select)){if (obj_star_select.button1!="") then exit;}
    if (scr_hit(xx+348,yy+461,xx+348+246,yy+461+26)) and (instance_exists(obj_star_select)){if (obj_star_select.button1!="") then exit;}
    if (scr_hit(xx+348,yy+489,xx+348+246,yy+489+26)) and (instance_exists(obj_star_select)){if (obj_star_select.button2!="") then exit;}
    if (scr_hit(xx+348,yy+517,xx+348+246,yy+517+26)) and (instance_exists(obj_star_select)){if (obj_star_select.button3!="") then exit;}
    if (scr_hit(xx+348,yy+545,xx+348+246,yy+545+26)) and (instance_exists(obj_star_select)){if (obj_star_select.button4!="") then exit;}
}*/


if (scr_void_click()=false) then exit;


/*if (obj_controller.selecting_planet=0) and (obj_controller.zoomed=1) and (m_dist&lt;40) and (obj_controller.cooldown&lt;=0){
    obj_controller.cooldown=8;
    with(obj_controller){scr_zoom();}
    obj_controller.x=x;
    obj_controller.y=y;
    
    // var mx,my;
    // mx=0;my=0;
    // mx=point_distance(view_xview[0],0,x,0);
    // my=point_distance(0,y,0,view_yview[0]);
    // window_mouse_set(view_xview[0]+mx,view_yview[0]+my);
    
    exit;
}*/





if ((obj_controller.zoomed=0) and (m_dist&lt;20)) or ((obj_controller.zoomed=1) and (m_dist&lt;40)) and (obj_controller.cooldown&lt;=0){
    if (mouse_x&lt;=self.x+24) and (mouse_y&gt;=self.y-24){// This should prevent overlap with fleet object

    
    
    if (obj_controller.zoomed=1){obj_controller.x=self.x;obj_controller.y=self.y;}

    
    alarm[3]=1;
    
    
    
    
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>




if (p_type[1]="Craftworld") and (obj_controller.known[6]=0){
    draw_set_alpha(0);draw_set_color(255);
    draw_circle(old_x,old_y,5,0);draw_set_alpha(1);
    exit;
}






var show;
show=name;
// show=string(name)+" "+string(p_tyranids[1])+string(p_tyranids[2])+string(p_tyranids[3])+string(p_tyranids[4]);
// if (space_hulk=1) then show="Space Hulk";
// show=string(name)+"|"+string(p_player[1]+p_player[2]+p_player[3]+p_player[4]);
// show=string(name)+"|"+string(dispo[1])+"|"+string(dispo[2])+"|"+string(dispo[3])+"|"+string(dispo[4]);
// show=string(p_problem[1,1])+"|"+string(p_timer[1,1]);
// show=string(p_tyranids[1])+"|"+string(p_tyranids[2])+"|"+string(p_tyranids[3])+"|"+string(p_tyranids[4]);
// if (global.cheat_debug=true) then show=string(name)+"#"+string(p_problem[1,1])+string(p_problem[2,1])+string(p_problem[3,1])+string(p_problem[4,1])+"#"+string(p_problem[1,2])+string(p_problem[2,2])+string(p_problem[3,2])+string(p_problem[4,2]);
if (global.cheat_debug=true) then show=string(name)+"#"+string(p_problem[1,1])+":"+string(p_timer[1,1])+"#"+string(p_problem[1,2])+":"+string(p_timer[1,2])+"#"+string(p_problem[1,3])+":"+string(p_timer[1,3]);
// if (space_hulk=1) then show="Space Hulk|"+string(p_owner[1]);
// show=string(name)+"|"+string(p_player[1]+p_player[2]+p_player[3]+p_player[4]);
// show=string(name)+"|"+string(p_player[1]+p_player[2]+p_player[3]+p_player[4])+"|"+string(p_problem[1,1])+string(p_problem[2,1])+string(p_problem[3,1])+string(p_problem[4,1]);
// show=string(p_eldar[1]+p_eldar[2]+p_eldar[3]+p_eldar[4])+" | H:"+string(p_heresy[1]+p_heresy[2]+p_heresy[3]+p_heresy[4]);
// show=string(p_tyranids[1]+p_tyranids[2]+p_tyranids[3]+p_tyranids[4]);
// show=string(present_fleet[1]+present_fleet[2]+present_fleet[3]+present_fleet[4]+present_fleet[6]+present_fleet[8]+present_fleet[9]+present_fleet[10]+present_fleet[13])+", O:"+string(present_fleet[7]);
// show=string(name)+" "+string(present_fleet[6]);
// show=string(name)+" ("+string(p_feature[2])+")";
// show=string(instance_number(obj_star_select));
// show=string(obj_controller.cooldown);
// show=string(present_fleet[20]);


draw_set_color(c_white);
draw_set_alpha(0.25);
if (x2!=0) then draw_line(x,y,x2,y2);
if (craftworld=0) and (vision=1) then draw_self();
if (craftworld=1) then draw_sprite_ext(spr_craftworld,0,x,y,1,1,point_direction(x,y,room_width/2,room_height/2)+90,c_white,1);
if (space_hulk=1) then draw_sprite_ext(spr_star_hulk,0,x,y,1,1,0,c_white,1);

if (storm&gt;0) then draw_sprite_ext(spr_warp_storm,storm_image,x,y,0.75,0.75,0,c_white,1);


// if (vision=1) then draw_set_alpha(0.5);
// if (vision=0) then draw_set_alpha(0.3);

draw_set_halign(fa_center);
draw_set_font(fnt_menu);
draw_set_color(38144);
if (owner=1) then draw_set_color(c_white);
if (owner=2) then draw_set_color(c_gray);
if (owner=3) then draw_set_color(16512);
if (owner=5) then draw_set_color(c_white);
if (owner=6) then draw_set_color(33023);
if (owner=7) then draw_set_color(38144);
if (owner=8) then draw_set_color(117758);
if (owner=9) then draw_set_color(7492269);
if (owner=10) then draw_set_color(c_purple);
if (owner=13) then draw_set_color(65408);
if (space_hulk=1) then draw_set_color(255);
// if (explored=0){draw_set_color(38144);show="????";}


if (owner!=1){
    draw_set_alpha(0.5);
    if (obj_controller.zoomed=0) then draw_text_transformed(x,y+16,string(show),1.3,1.3,0);
    if (obj_controller.zoomed=1) then draw_text_transformed(x,y+16,string(show),2,2,0);// was 1.65
}
if (owner=1){
    var siz;draw_set_alpha(1);
    if (obj_controller.zoomed=0) then siz=1.3;
    if (obj_controller.zoomed=1) then siz=2;
    
    draw_set_color(c_blue);
    draw_text_transformed(x-1,y+15,show,siz,siz,0);
    draw_text_transformed(x+1,y+17,show,siz,siz,0);
    draw_set_color(c_white);
    draw_text_transformed(x,y+16,show,siz,siz,0);
}
/*if (owner=13){
    var siz;draw_set_alpha(1);
    if (obj_controller.zoomed=0) then siz=0.75;
    if (obj_controller.zoomed=1) then siz=1.5;
    
    draw_set_color(65408);
    draw_text_transformed(x-1,y+15,show,siz,siz,0);
    draw_text_transformed(x+1,y+17,show,siz,siz,0);
    draw_set_color(c_black);
    draw_text_transformed(x,y+16,show,siz,siz,0);
}*/

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>38,36</point>
    <point>38,38</point>
  </PhysicsShapePoints>
</object>
