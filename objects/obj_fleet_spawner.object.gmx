<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
owner=0;
height=0;
number=0;

alarm[0]=1;

var i,t;i=-1;t=0;
repeat(11){i+=1;
    en_column[i]="";en_width[i]=0;
    en_height[i]=0;en_num[i]=0;
    en_size[i]=0;
}

instance_activate_object(obj_img);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if (owner=2) or (owner=6){// This is an orderly Imperial ship formation
    var xx,yy,i, temp1, x2, man;
    xx=0;yy=0;i=0;temp1=0;x2=0;man=0;
    
    if (obj_fleet.enemy_status[number]&lt;0) then x2=1200;
    if (obj_fleet.enemy_status[number]&gt;0) then x2=-300;
    
    var fuck;fuck=0;
    
    if (obj_fleet.enemy_status[number]&lt;0) then fuck=5;
    if (obj_fleet.enemy_status[number]&gt;0) then fuck=0;
    
    repeat(4){
        if (obj_fleet.enemy_status[number]&lt;0) then fuck-=1;
        if (obj_fleet.enemy_status[number]&gt;0) then fuck+=1;
    
        yy=y-((en_height[fuck]*en_num[fuck])/2);
        if (en_num[fuck]&gt;0){
            yy+=(en_height[fuck]/2);
            repeat(en_num[fuck]){
                if (en_size[fuck]&lt;3){
                    if (obj_fleet.enemy_status[number]&lt;0){man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[fuck];man.class=en_column[fuck];man.owner=owner;man.size=en_size[fuck];}
                    if (obj_fleet.enemy_status[number]&gt;0){man=instance_create(x2,yy,obj_al_cruiser);yy+=en_height[fuck];man.class=en_column[fuck];man.owner=owner;man.size=en_size[fuck];}
                }
                if (en_size[fuck]&gt;=3){
                    if (obj_fleet.enemy_status[number]&lt;0){man=instance_create(x2,yy,obj_en_capital);yy+=en_height[fuck];man.class=en_column[fuck];man.owner=owner;man.size=en_size[fuck];}
                    if (obj_fleet.enemy_status[number]&gt;0){man=instance_create(x2,yy,obj_al_capital);yy+=en_height[fuck];man.class=en_column[fuck];man.owner=owner;man.size=en_size[fuck];}
                }
            }
            x2+=en_width[fuck];
        }
    }
    
    
    
    /*
    if (en_num[4]&gt;0){
        yy=y-((en_height[4]*en_num[4])/2);
        yy+=(en_height[4]/2);
        repeat(en_num[4]){
            man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[4];man.class=en_column[4];man.owner=owner;
        }
        x2+=en_width[4];
    }
    if (en_num[3]&gt;0){
        yy=y-((en_height[3]*en_num[3])/2);
        yy+=(en_height[3]/2);
        repeat(en_num[3]){
            man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[3];man.class=en_column[3];man.owner=owner;
        }
        x2+=en_width[3];
    }
    if (en_num[2]&gt;0){
        yy=y-((en_height[2]*en_num[2])/2);
        yy+=(en_height[2]/2);
        repeat(en_num[2]){
            man=instance_create(x2,yy,obj_en_capital);yy+=en_height[2];man.class=en_column[2];man.owner=owner;
        }
        x2+=en_width[2];
    }
    if (en_num[1]&gt;0){
        yy=256;
        repeat(en_num[1]){
            man=instance_create(x2,yy,obj_en_capital);yy+=en_height[1];man.class=en_column[1];man.owner=owner;
            yy+=(en_height[1]);
        }
    }*/
}






/*
if (en_escort&gt;0){en_column[4]="Aconite";en_num[4]=max(1,floor(en_escort/2));en_size[4]=1;}
if (en_escort&gt;1){en_column[3]="Hellebore";en_num[3]=max(1,floor(en_escort/2));en_size[3]=1;}
if (en_frigate&gt;0){en_column[2]="Shadow Class";en_num[2]=en_frigate;en_size[2]=2;}
if (en_capital&gt;0){en_column[1]="Void Stalker";en_num[1]=en_capital;en_size[1]=3;}
*/


/*
if (owner=6){// This is an orderly Eldar ship formation
    var xx,yy,i, temp1, x2, man;
    xx=0;yy=0;i=0;temp1=0;x2=1200;man=0;
    
    if (en_num[4]&gt;0){
        yy=128;
        repeat(en_num[4]){
            man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[4];man.class=en_column[4];man.owner=owner;
        }
    }
    if (en_num[3]&gt;0){
        yy=room_height-128;
        repeat(en_num[3]){
            man=instance_create(x2,yy,obj_en_cruiser);yy-=en_height[3];man.class=en_column[3];man.owner=owner;
        }
    }
    x2+=max(en_width[3],en_width[4]);
    
    if (en_num[2]&gt;0){
        yy=y-((en_height[2]*en_num[2])/2);
        yy+=(en_height[2]/2);
        repeat(en_num[2]){
            man=instance_create(x2,yy,obj_en_capital);yy+=en_height[2];man.class=en_column[2];man.owner=owner;
        }
        x2+=en_width[2];
    }
    if (en_num[1]&gt;0){
        yy=256;
        repeat(en_num[1]){
            man=instance_create(x2,yy,obj_en_capital);yy+=en_height[1];man.class=en_column[1];man.owner=owner;
            yy+=(en_height[1]);
        }
    }
}*/






if (owner=7) or (owner=10){// This is spew out random ships without regard for formations
    var xx,yy,dist,targ,numb,man;
    xx=0;yy=0;dist=0;target=0;numb=0;man=0;
    
    var i;i=0;
    
    repeat(5){
    
        i+=1;
    
        if (en_column[i]!="") then for(s = 0; s &lt; en_num[i]; s += 1){
            if (en_size[i]&gt;1) then man=instance_create(random_range(1200,1400),round(random_range(y,y+height)+50),obj_en_capital);
            if (en_size[i]=1) then man=instance_create(random_range(1200,1400),round(random_range(y,y+height)+50),obj_en_cruiser);
            man.class=en_column[i];man.owner=owner;man.size=en_size[i];
        }
    
    
    }
}







if (owner=8){// This is an orderly Tau ship formation
    var xx,yy,i, temp1, x2, man;
    xx=0;yy=0;i=0;temp1=0;x2=1200;man=0;
    
    yy=y-((en_height[5]*en_num[5])/2);
    yy+=(en_height[5]/2);
    repeat(en_num[5]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[5];man.class="Warden";man.owner=owner;man.size=en_size[5];
    }
    x2+=en_width[5];
    
    yy=y-((en_height[2]*en_num[2])/2)-((en_height[3]*en_num[3])/2);
    yy+=(en_height[2]/2);yy+=(en_height[3]/2);
    repeat(en_num[2]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[2];man.class="Emissary";man.owner=owner;man.size=en_size[2];
    }
    repeat(en_num[3]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[3];man.class="Protector";man.owner=owner;man.size=en_size[3];
    }
    x2+=max(en_width[2],en_width[3]);
    
    yy=y-((en_height[4]*en_num[4])/2);
    yy+=(en_height[4]/2);
    repeat(en_num[4]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[4];man.class="Castellan";man.owner=owner;man.size=en_size[4];
    }
    x2+=en_width[4];
    
    yy=y-((en_height[1]*en_num[1])/2);
    yy+=(en_height[1]/2);
    repeat(en_num[1]){
        man=instance_create(x2,yy,obj_en_capital);yy+=en_height[1];man.class="Custodian";man.owner=owner;man.size=en_size[1];
    }

}




if (owner=9){// This is an orderly Tyranid ship formation
    var xx,yy,i, temp1, x2, man;
    xx=0;yy=0;i=0;temp1=0;x2=1200;man=0;
    
    yy=y-((en_height[4]*en_num[4])/2);
    yy+=(en_height[4]/2);
    repeat(en_num[4]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[4];man.class="Prowler";man.owner=owner;man.size=en_size[4];
    }
    x2+=en_width[4];
    
    yy=y-((en_height[3]*en_num[3])/2);
    yy+=(en_height[3]/2);
    repeat(en_num[3]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[3];man.class="Razorfiend";man.owner=owner;man.size=en_size[3];
    }
    x2+=en_width[3];
    
    yy=y-((en_height[2]*en_num[2])/2);
    yy+=(en_height[2]/2);
    repeat(en_num[2]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[2];man.class="Stalker";man.owner=owner;man.size=en_size[2];
    }
    x2+=en_width[2];
    
    yy=y-((en_height[1]*en_num[1])/2);
    yy+=(en_height[1]/2);
    repeat(en_num[1]){
        man=instance_create(x2,yy,obj_en_capital);yy+=en_height[1];man.class="Leviathan";man.owner=owner;man.size=en_size[1];
    }

}




if (owner=13){// This is an orderly Necron ship formation
    var xx,yy,i, temp1, x2, man;
    xx=0;yy=0;i=0;temp1=0;x2=1200;man=0;
    
    yy=y-((en_height[4]*en_num[4])/2);
    yy+=(en_height[4]/2);
    repeat(en_num[4]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[4];man.class="Dirge Class";man.owner=owner;man.size=en_size[4];
    }
    x2+=en_width[4];
    
    yy=y-((en_height[3]*en_num[3])/2);
    yy+=(en_height[3]/2);
    repeat(en_num[3]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[3];man.class="Jackal Class";man.owner=owner;man.size=en_size[3];
    }
    x2+=en_width[3];
    
    yy=y-((en_height[2]*en_num[2])/2);
    yy+=(en_height[2]/2);
    repeat(en_num[2]){
        man=instance_create(x2,yy,obj_en_cruiser);yy+=en_height[2];man.class="Shroud Class";man.owner=owner;man.size=en_size[2];
    }
    x2+=en_width[2];
    
    yy=y-((en_height[1]*en_num[1])/2);
    yy+=(en_height[1]/2);
    repeat(en_num[1]){
        man=instance_create(x2,yy,obj_en_capital);yy+=en_height[1];man.class="Reaper Class";man.owner=owner;man.size=en_size[1];
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>



if (number=1){
    // create blocks of infantry
    
    
    var i, k, col, temp1, temp2, x2, hei, man, sizz;
    i=0;k=0;col=5;temp1=0;temp2=0;x2=224;hei=0;man=0;sizz=0;
    
    
    
    
    
    repeat(100){// This determines the number of ships in each column
        k+=1;
        
        
        if (obj_fleet.fighting[k]=1){
            if ((obj_fleet.column[col]="Capital") and (obj_fleet.ship_size[k]=3)) then obj_fleet.column_num[col]+=1;
            if ((obj_fleet.column[col-1]="Capital") and (obj_fleet.ship_size[k]=3)) then obj_fleet.column_num[col-1]+=1;
            if ((obj_fleet.column[col-2]="Capital") and (obj_fleet.ship_size[k]=3)) then obj_fleet.column_num[col-2]+=1;
            if ((obj_fleet.column[col-3]="Capital") and (obj_fleet.ship_size[k]=3)) then obj_fleet.column_num[col-3]+=1;
            if ((obj_fleet.column[col-4]="Capital") and (obj_fleet.ship_size[k]=3)) then obj_fleet.column_num[col-4]+=1;
        
            if (obj_fleet.ship_class[k]=obj_fleet.column[col]) then obj_fleet.column_num[col]+=1;
            if (obj_fleet.ship_class[k]=obj_fleet.column[col-1]) then obj_fleet.column_num[col-1]+=1;
            if (obj_fleet.ship_class[k]=obj_fleet.column[col-2]) then obj_fleet.column_num[col-2]+=1;
            if (obj_fleet.ship_class[k]=obj_fleet.column[col-3]) then obj_fleet.column_num[col-3]+=1;
            if (obj_fleet.ship_class[k]=obj_fleet.column[col-4]) then obj_fleet.column_num[col-4]+=1;
            
            if ((obj_fleet.column[col]="Escort") and (obj_fleet.ship_size[k]=1)) then obj_fleet.column_num[col]+=1;
            if ((obj_fleet.column[col-1]="Escort") and (obj_fleet.ship_size[k]=1)) then obj_fleet.column_num[col-1]+=1;
            if ((obj_fleet.column[col-2]="Escort") and (obj_fleet.ship_size[k]=1)) then obj_fleet.column_num[col-2]+=1;
            if ((obj_fleet.column[col-3]="Escort") and (obj_fleet.ship_size[k]=1)) then obj_fleet.column_num[col-3]+=1;
            if ((obj_fleet.column[col-4]="Escort") and (obj_fleet.ship_size[k]=1)) then obj_fleet.column_num[col-4]+=1;
        }
        
        
    }
    
    
    
    col=6;
    repeat(5){// Start repeat
        temp1=0;temp2=0;
    
        col-=1;
        if (col&lt;5) then x2-=obj_fleet.column_width[col];
        
    
        if (obj_fleet.column_num[col]&gt;0){// Start ship creation
            if (obj_fleet.column[col]="Capital"){hei=160;sizz=3;}
            // if (column[col]="Slaughtersong"){hei=200;sizz=3;}
            
            if (obj_fleet.column[col]=string(obj_img.ship[1,2])){hei=96;sizz=2;}
            
            if (obj_fleet.column[col]="Gladius"){hei=64;sizz=1;}
            if (obj_fleet.column[col]="Hunter"){hei=64;sizz=1;}
            if (obj_fleet.column[col]="Escort"){hei=64;sizz=1;}
        
            temp1=obj_fleet.column_num[col]*hei;
            // temp2=((y-(height/2))-(temp1/2))+64;
            temp2=y-(temp1/2)+64;
            if (obj_fleet.column_num[col]=1) then temp2+=20;
            
            // show_message(string(column_num[col])+" "+string(column[col])+" X:"+string(x2));
            
            k=0;
            repeat(100){k+=1;
                if (obj_fleet.ship_class[k]=obj_fleet.column[col]) or ((obj_fleet.column[col]="Escort") and (obj_fleet.ship_size[k]=1)) or ((obj_fleet.column[col]="Capital") and (obj_fleet.ship_size[k]=3)){
                    if (sizz=3) and (obj_fleet.ship_class[k]!="") and (obj_fleet.fighting[k]=1){man=instance_create(x2,temp2,obj_p_capital);man.ship_id=k;man.class=obj_fleet.column[col];temp2+=hei;}
                    if (sizz=2) and (obj_fleet.ship_class[k]!="") and (obj_fleet.fighting[k]=1){man=instance_create(x2,temp2,obj_p_cruiser);man.ship_id=k;man.class=obj_fleet.column[col];temp2+=hei;}
                    if (sizz=1) and (obj_fleet.ship_class[k]!="") and (obj_fleet.fighting[k]=1){man=instance_create(x2,temp2,obj_p_escort);man.ship_id=k;man.class=obj_fleet.column[col];temp2+=hei;}
                }
            }
            
        
        }// End ship creation
    
    
    
    
    }// End repeat













    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (number&gt;0) and (owner!=1){

    en_escort=obj_fleet.en_escort[number];
    en_frigate=obj_fleet.en_frigate[number];
    en_capital=obj_fleet.en_capital[number];

    
    if (owner=2){
        if (en_escort&gt;0){en_column[4]="Sword Class Frigate";en_num[4]=en_escort;en_size[4]=1;}
        
        if (en_frigate&gt;0){en_column[3]="Avenger Class Grand Cruiser";en_num[3]=en_frigate;en_size[3]=2;}
            
        var i;i=0;i=en_capital;
        if (i&gt;0){
            en_column[2]="Apocalypse Class Battleship";en_num[2]=floor(random(i))+1;
            if (en_num[2]&lt;(en_capital*0.6)) then en_num[2]=round(en_capital*0.6);
            i-=en_num[2];en_size[2]=3;
        }
        
        if (i&gt;0){en_column[1]="Nemesis Class Fleet Carrier";en_num[1]=i;i-=en_num[1];en_size[1]=3;}
    }
    
    
    
    if (owner=6){
        if (en_escort&gt;0){en_column[4]="Aconite";en_num[4]=max(1,floor(en_escort/2));en_size[4]=1;}
        if (en_escort&gt;1){en_column[3]="Hellebore";en_num[3]=max(1,floor(en_escort/2));en_size[3]=1;}
        if (en_frigate&gt;0){en_column[2]="Shadow Class";en_num[2]=en_frigate;en_size[2]=2;}
        if (en_capital&gt;0){en_column[1]="Void Stalker";en_num[1]=en_capital;en_size[1]=3;}
    }
    
    
    
    
    if (owner=7){
        var i;i=0;i=en_capital;
        
        if (i&gt;0){en_column[1]="Dethdeala";en_num[1]=floor(random(i))+1;i-=en_num[1];en_size[1]=3;}
        
        if (i&gt;0){en_column[2]="Gorbag's Revenge";en_num[2]=floor(random(i))+1;i-=en_num[2];en_size[2]=3;}// en_num[2]+=en_num[1]+1;
        
        if (i&gt;0){en_column[3]="Kroolboy";en_num[3]=i;i-=en_num[3];en_size[3]=3;}// en_num[3]+=en_num[2]+1;
        
        if (en_frigate&gt;0){en_column[4]="Battlekroozer";en_num[4]=en_frigate;en_size[4]=2;}// en_num[4]+=en_num[3]+1;
        
        if (en_escort&gt;0){en_column[5]="Ravager";en_num[5]=en_escort;en_size[5]=1;}// en_num[5]+=en_num[4]+1;
    }
    
    if (owner=8){
        var i;i=0;i=en_frigate;
        
        if (en_capital&gt;0){en_column[1]="Custodian";en_num[1]=en_capital;en_size[1]=3;}
        
        if (i&gt;0){en_column[2]="Emissary";en_num[2]=1;i-=en_num[2];en_size[2]=2;}
        
        if (i&gt;0){en_column[3]="Protector";en_num[3]=i;i-=en_num[3];en_size[3]=2;}// en_num[3]+=en_num[2]+1;
        
        if (en_escort&gt;0){en_column[4]="Castellan";en_num[4]=round((en_escort/3)*2);en_size[4]=1;}
        
        if (en_escort&gt;2){en_column[5]="Warden";en_num[5]=en_escort-en_num[5];en_size[5]=1;}
    }
    
    if (owner=9){
        var i;i=0;i=en_escort;
        
        if (en_capital&gt;0){en_column[1]="Leviathan";en_num[1]=en_capital;en_size[1]=3;}
        
        if (i&gt;0){en_column[2]="Stalker";en_num[2]=floor(i/3)+1;i-=en_num[2];en_size[2]=1;}
        
        if (en_frigate&gt;0){en_column[3]="Razorfiend";en_num[3]=en_frigate;en_size[3]=2;}// en_num[2]+=en_num[1]+1;
        
        if (i&gt;0){en_column[4]="Prowler";en_num[4]=i;en_size[4]=1;}// en_num[5]+=en_num[4]+1;
    }
    
    if (owner=10){
        var i;i=0;i=en_frigate;
        
        if (en_capital&gt;0){en_column[1]="Desecrator";en_num[1]=en_capital;en_size[1]=3;}
        
        if (i&gt;0){en_column[2]="Avenger";en_num[2]=floor(random(i))+1;i-=en_num[2];en_size[2]=2;}
        
        if (i&gt;0){en_column[3]="Carnage";en_num[3]=floor(random(i))+1;i-=en_num[3];en_size[3]=2;}// en_num[2]+=en_num[1]+1;
        
        if (i&gt;0){en_column[4]="Daemon";en_num[4]=i;i-=en_num[4];en_size[4]=2;}// en_num[3]+=en_num[2]+1;
        
        if (en_escort&gt;0){en_column[5]="Iconoclast";en_num[5]=en_escort;en_size[5]=1;}// en_num[5]+=en_num[4]+1;
    }
    
    if (owner=13){
        var i;i=0;i=en_escort;
        
        if (en_capital&gt;0){en_column[1]="Reaper Class";en_num[1]=en_capital;en_size[1]=3;}
        // Cairn Class Tombship are very rare
        
        if (i&gt;0){en_column[2]="Shroud Class";en_num[2]=en_frigate;en_size[2]=2;}
        
        if (i&gt;0){en_column[3]="Jackal Class";en_num[3]=round(i/2);i-=en_num[3];en_size[3]=1;}
        if (en_escort&gt;0){en_column[4]="Dirge Class";en_num[4]=i;en_size[4]=1;}
    }
    
    
    
    
    var i;i=0;
    repeat(5){i+=1;
        if (en_column[i]="Avenger Class Grand Cruiser"){en_width[i]=196;en_height[i]=96;}
        if (en_column[i]="Apocalypse Class Battleship"){en_width[i]=272;en_height[i]=128;}
        if (en_column[i]="Nemesis Class Fleet Carrier"){en_width[i]=272;en_height[i]=128;}
        if (en_column[i]="Sword Class Frigate"){en_width[i]=96;en_height[i]=64;}
        
        if (en_column[i]="Void Stalker"){en_width[i]=260;en_height[i]=192;}
        if (en_column[i]="Shadow Class"){en_width[i]=212;en_height[i]=160;}
        if (en_column[i]="Hellebore"){en_width[i]=160;en_height[i]=64;}
        if (en_column[i]="Aconite"){en_width[i]=128;en_height[i]=64;}
        
        if (en_column[i]="Deathdeala"){en_width[i]=196;en_height[i]=128;}
        if (en_column[i]="Gorbag's Revenge"){en_width[i]=196;en_height[i]=128;}
        if (en_column[i]="Kroolboy"){en_width[i]=196;en_height[i]=128;}
        if (en_column[i]="Slamblasta"){en_width[i]=196;en_height[i]=128;}
        if (en_column[i]="Battlekroozer"){en_width[i]=160;en_height[i]=96;}
        if (en_column[i]="Ravager"){en_width[i]=128;en_height[i]=64;}
        
        if (en_column[i]="Desecrator"){en_width[i]=196;en_height[i]=128;}
        if (en_column[i]="Avenger"){en_width[i]=160;en_height[i]=96;}
        if (en_column[i]="Carnage"){en_width[i]=160;en_height[i]=96;}
        if (en_column[i]="Daemon"){en_width[i]=160;en_height[i]=96;}
        if (en_column[i]="Iconoclast"){en_width[i]=128;en_height[i]=64;}
        
        if (en_column[i]="Custodian"){en_width[i]=128;en_height[i]=256;}
        if (en_column[i]="Emissary"){en_width[i]=160;en_height[i]=96;}
        if (en_column[i]="Protector"){en_width[i]=64;en_height[i]=180;}
        if (en_column[i]="Castellan"){en_width[i]=48;en_height[i]=96;}
        if (en_column[i]="Warden"){en_width[i]=48;en_height[i]=80;}
        
        if (en_column[i]="Leviathan"){en_width[i]=200;en_height[i]=128;}
        if (en_column[i]="Razorfiend"){en_width[i]=160;en_height[i]=128;}
        if (en_column[i]="Stalker"){en_width[i]=96;en_height[i]=64;}
        if (en_column[i]="Prowler"){en_width[i]=80;en_height[i]=64;}
        
        if (en_column[i]="Cairn Class Tombship"){en_width[i]=256;en_height[i]=224;}
        if (en_column[i]="Reaper Class"){en_width[i]=286;en_height[i]=161;}
        if (en_column[i]="Shroud Class"){en_width[i]=200;en_height[i]=150;}
        if (en_column[i]="Jackal Class"){en_width[i]=99;en_height[i]=123;}
        if (en_column[i]="Dirge Class"){en_width[i]=100;en_height[i]=91;}
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

exit;

var y1,y2;
y1=y-(height/2);
y2=y+(height/2);

draw_set_color(38144);draw_set_alpha(1);

if (x&lt;800) then draw_rectangle(-300,y1,300,y2,0);
if (x&gt;800) then draw_rectangle((room_width)-300,y1,room_width+300,y2,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
