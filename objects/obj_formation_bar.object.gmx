<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_formation_bars</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1005</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
dragging=false;
rel_mousex=0;
rel_mousey=0;
old_x=0;
old_y=0;

unit_type="";
unit_id=0;

size=0;
col_parent=0;
col_target=0;
above_neighbor=0;
nearest_col=0;
nobar=false;

height=0;
width=0;
text_xscale=1.25;
image_speed=0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (instance_exists(obj_temp8)){
    with(obj_temp8){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

/*

dragging=false;
rel_mousex=0;
rel_mousey=0;
old_x=0;
old_y=0;

unit_type="";
unit_id=0;

size=0;
col_parent=0;
col_target=0;
above_neighbor=0;
nearest_col=0;

height=0;
width=0;
text_xscale=1.25;
image_speed=0;



*/


if (dragging=true){
    x=mouse_x+rel_mousex;y=mouse_y+rel_mousey;obj_cursor.image_index=3;
    col_target=instance_nearest(x,view_yview[0]+224,obj_temp8);
    nearest_col=instance_nearest(col_target.x,col_target.y,obj_formation_bar);
    nobar=false;if (point_distance(col_target.x,col_target.y,nearest_col.x,nearest_col.y)&gt;2) then nobar=true;
}
if (dragging=false){
    rel_mousex=0;rel_mousey=0;old_x=0;old_y=0;
    col_parent=0;col_target=0;above_neighbor=0;
    nearest_col=0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

var mah_target;mah_target=0;
/*if (dragging=true) and (nobar=true) then mah_target=col_target;
if (dragging=true) and (nobar=false) then mah_target=nearest_col;*/


mah_target=col_target;


if (dragging=true) and (instance_exists(mah_target)){
    if (mah_target.col_parent=col_parent){
        obj_controller.click=1;obj_controller.cooldown=20;x=old_x;y=old_y;
        rel_mousex=0;rel_mousey=0;old_x=0;old_y=0;col_target=0;nearest_col=0;nobar=false;
        obj_cursor.dragging=0;obj_cursor.image_index=0;dragging=false;exit;
    }
}

if (dragging=true) and (instance_exists(mah_target)){
    if (x&gt;=mah_target.x-5) and (x&lt;=mah_target.x+42) and (mouse_y&gt;=view_yview[0]+222) and (mouse_y&lt;=view_yview[0]+688){
        var himcol,te;himcol=mah_target.col_parent;te=0;
        te=4800+himcol;nexti=false;
        
        if (obj_controller.temp[te]+size&lt;=10){
            obj_controller.temp[4800+col_parent]-=size;
            obj_controller.click=1;obj_controller.cooldown=20;
            if (unit_id=1) then obj_controller.bat_comm_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=2) then obj_controller.bat_hono_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=3) then obj_controller.bat_libr_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=4) then obj_controller.bat_tech_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=5) then obj_controller.bat_term_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=6) then obj_controller.bat_vete_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=7) then obj_controller.bat_tact_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=8) then obj_controller.bat_deva_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=9) then obj_controller.bat_assa_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=10) then obj_controller.bat_scou_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=11) then obj_controller.bat_drea_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=12) then obj_controller.bat_hire_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=13) then obj_controller.bat_rhin_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=14) then obj_controller.bat_pred_for[obj_controller.formating]=mah_target.col_parent;
            if (unit_id=15) then obj_controller.bat_land_for[obj_controller.formating]=mah_target.col_parent;
            obj_cursor.dragging=0;obj_cursor.image_index=0;
            
            // show_message("-&gt; slot "+string(mah_target.col_parent)+", now "+string(obj_controller.temp[te]+size)+"/10 full, old slot is "+string(obj_controller.temp[4800+col_parent])+"/10");
            
            with(obj_temp8){instance_destroy();}
            with(obj_controller){scr_ui_formation_bars();}
            exit;
        }
        if (obj_controller.temp[te]+size&gt;10){
            dragging=false;x=old_x;y=old_y;obj_controller.cooldown=20;obj_cursor.dragging=0;obj_cursor.image_index=0;
            if (obj_controller.master_volume&gt;0) and (obj_controller.effect_volume&gt;0){audio_play_sound(snd_error,-80,0);audio_sound_gain(snd_error,1*obj_controller.master_volume*obj_controller.effect_volume,0);}
        }
    }
    if (instance_exists(mah_target)){
        if (x&lt;mah_target.x-5) or (x&gt;mah_target.x+42) or (mouse_y&lt;view_yview[0]+222) or (mouse_y&gt;view_yview[0]+688){
            dragging=false;x=old_x;y=old_y;obj_controller.cooldown=20;obj_cursor.dragging=0;obj_cursor.image_index=0;
            if (obj_controller.master_volume&gt;0) and (obj_controller.effect_volume&gt;0){audio_play_sound(snd_error,-80,0);audio_sound_gain(snd_error,1*obj_controller.master_volume*obj_controller.effect_volume,0);}
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (obj_cursor.dragging=0) and (obj_controller.cooldown&lt;=0){
    obj_cursor.dragging=1;dragging=true;
    obj_controller.cooldown=9999;
    obj_controller.click=1;
    
    // save crap
    rel_mousex=x-mouse_x;
    rel_mousey=y-mouse_y-1000;
    old_x=x;old_y=y;
    
    // Establish drop areas
    /*with(obj_temp8){instance_destroy();}
    with(obj_formation_bar){
        if (y&lt;=view_yview[0]+230) then instance_create(x,y,obj_temp8);
    }*/
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

/*var tist;tist=true;
if (tist=true){
    if (nobar=true) then draw_set_alpha(0.5);
    draw_set_color(c_purple);draw_set_alpha(1);
    if (instance_exists(col_parent)) and (!instance_exists(col_target)){draw_line_width(mouse_x,mouse_y,col_parent.x,col_parent.y,2);}
    if (instance_exists(col_target)){draw_line_width(mouse_x,mouse_y,col_target.x,col_target.y,5);}
}*/draw_set_alpha(1);





if (dragging=false) then draw_sprite_ext(spr_formation_bars,image_index,x,y,image_xscale,image_yscale,0,c_white,1);
if (dragging=true) then draw_sprite_ext(spr_formation_bars,image_index,x,y+1000,image_xscale,image_yscale,0,c_white,1);




draw_set_alpha(1);
draw_set_color(0);
draw_set_font(fnt_40k_14b);
draw_set_halign(fa_center);

var max_hi,actual_hi;
max_hi=height-4;
actual_hi=0;

actual_hi=string_width(unit_type)*text_xscale;
if (actual_hi&gt;max_hi) then repeat(10){
    actual_hi=string_width(unit_type)*text_xscale;
    if (actual_hi&gt;max_hi) then text_xscale-=0.05;
}

if (dragging=false) then draw_text_transformed(x+28,y+(height/2),string(unit_type),text_xscale,text_xscale,270);
if (dragging=true) then draw_text_transformed(x+28,y+(height/2)+1000,string(unit_type),text_xscale,text_xscale,270);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>141,141</point>
  </PhysicsShapePoints>
</object>
