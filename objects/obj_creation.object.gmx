<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-49</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
keyboard_string="";

ini_open("saves.ini");
master_volume=ini_read_real("Settings","master_volume",1);
effect_volume=ini_read_real("Settings","effect_volume",1);
music_volume=ini_read_real("Settings","music_volume",1);
large_text=ini_read_real("Settings","large_text",0);
settings_heresy=ini_read_real("Settings","settings_heresy",0);
settings_fullscreen=ini_read_real("Settings","fullscreen",1);
settings_window_data=ini_read_string("Settings","window_data","fullscreen");
ini_close();

window_data=string(window_get_x())+"|"+string(window_get_y())+"|"+string(window_get_width())+"|"+string(window_get_height())+"|";
window_old=window_data;if (window_get_fullscreen()=1){window_old="fullscreen";window_data="fullscreen";}
restarted=0;custom_icon=0;


audio_stop_all();
audio_play_sound(snd_diboz,0,true);
audio_sound_gain(snd_diboz, 0, 0);
var nope;nope=0;if (master_volume=0) or (music_volume=0) then nope=1;
if (nope!=1){audio_sound_gain(snd_diboz,0.25*master_volume*music_volume,2000);}

global.load=0;

skip=false;
premades=true;

fade_in=50;
slate1=80;
slate2=0;
slate3=-2;
slate4=0;
slate5=0;
slate6=0;
mouse_left=0;
mouse_right=0;
change_slide=0;
goto_slide=1;
highlight=0;
highlighting=0;
old_highlight=0;
slide=1;
slide_show=1;
cooldown=0;
name_bad=0;
heheh=0;
icons_top=1;
icons_max=0;

scrollbar_engaged=0;

text_selected="none";
text_bar=0;
tooltip="";
tooltip2="";
popup="";
temp=0;
target_gear=0;
tab=0;
role_names_all="";

// 
chapter="Unnamed";
chapter_string="Unnamed";
chapter_year=0;
icon=1;icon_name="da";custom=0;
founding=1;
chapter_tooltip="";
points=0;maxpoints=100;
fleet_type=1;
strength=5;cooperation=5;
purity=5;stability=5;
var i;i=-1;repeat(6){i+=1;adv[i]="";adv_num[i]=0;dis[i]="";dis_num[i]=0;}
homeworld="Temperate";homeworld_name=scr_star_name();
recruiting="Death";recruiting_name=scr_star_name();
flagship_name=scr_ship_name("imperial");
recruiting_exists=1;
homeworld_exists=1;
homeworld_rule=1;
aspirant_trial="Blood Duel";
discipline="default";

battle_cry="For the "+string(obj_img.king_title);

main_color=1;secondary_color=1;trim_color=1;
pauldron2_color=1;pauldron_color=1;// Left/Right pauldron
lens_color=1;weapon_color=1;col_special=0;trim=1;
skin_color=0;

color_to_main="";
color_to_secondary="";
color_to_trim="";
color_to_pauldron="";
color_to_pauldron2="";
color_to_lens="";
color_to_weapon="";

hapothecary=scr_marine_name();
hchaplain=scr_marine_name();
clibrarian=scr_marine_name();
fmaster=scr_marine_name();
recruiter=scr_marine_name();
admiral=scr_marine_name();

equal_specialists=0;
load_to_ships=2;

successors=0;

mutations=0;mutations_selected=0;
preomnor=0;voice=0;doomed=0;lyman=0;omophagea=0;ossmodula=0;membrane=0;
zygote=0;betchers=0;catalepsean=0;secretions=0;occulobe=0;mucranoid=0;

disposition[0]=0;
disposition[1]=0;// Prog
disposition[2]=0;// Imp
disposition[3]=0;// Mech
disposition[4]=0;// Inq
disposition[5]=0;// Ecclesiarchy
disposition[6]=0;// Astartes
disposition[7]=0;// Reserved

chapter_master_name=scr_marine_name();
chapter_master_melee=1;
chapter_master_ranged=1;
chapter_master_specialty=2;


var i;i=-1;
repeat(60){i+=1;chapter_id[i]="";chapter_tooltip[i]="Error: The tooltip is missing.";company_title[i]="";}
chapter_id[1]=string(obj_img.d[1]);
chapter_tooltip[1]=string(obj_img.d_tooltip[1]);

chapter_id[2]=string(obj_img.d[2]);
chapter_tooltip[2]=string(obj_img.d_tooltip[2]);

chapter_id[3]=string(obj_img.d[3]);
chapter_tooltip[3]=string(obj_img.d_tooltip[3]);

chapter_id[4]=string(obj_img.d[4]);
chapter_tooltip[4]=string(obj_img.d_tooltip[4]);

chapter_id[5]=string(obj_img.d[5]);
chapter_tooltip[5]=string(obj_img.d_tooltip[5]);

chapter_id[6]=string(obj_img.d[6]);
chapter_tooltip[6]=string(obj_img.d_tooltip[6]);

chapter_id[7]=string(obj_img.d[7]);
chapter_tooltip[7]=string(obj_img.d_tooltip[7]);

chapter_id[8]=string(obj_img.d[8]);
chapter_tooltip[8]=string(obj_img.d_tooltip[8]);

chapter_id[9]=string(obj_img.d[9]);
chapter_tooltip[9]=string(obj_img.d_tooltip[9]);

chapter_id[10]=string(obj_img.d[10]);
chapter_tooltip[10]=string(obj_img.d_tooltip[10]);

chapter_id[11]=string(obj_img.d[11]);
chapter_tooltip[11]=string(obj_img.d_tooltip[11]);

chapter_id[12]=string(obj_img.d[12]);
chapter_tooltip[12]=string(obj_img.d_tooltip[12]);

chapter_id[13]=string(obj_img.d[13]);
chapter_tooltip[13]=string(obj_img.d_tooltip[13]);

chapter_id[14]=string(obj_img.d[14]);
chapter_tooltip[14]=string(obj_img.d_tooltip[14]);

chapter_id[15]=string(obj_img.d[15]);
chapter_tooltip[15]=string(obj_img.d_tooltip[15]);

chapter_id[16]=string(obj_img.d[16]);


chapter_id[17]=string(obj_img.d[17]);
chapter_tooltip[17]=string(obj_img.d_tooltip[17]);

chapter_id[18]=string(obj_img.d[18]);
chapter_tooltip[18]=string(obj_img.d_tooltip[18]);

chapter_id[19]=string(obj_img.d[19]);
chapter_tooltip[19]=string(obj_img.d_tooltip[19]);

chapter_id[20]=string(obj_img.d[20]);
chapter_tooltip[20]=string(obj_img.d_tooltip[20]);

i=-1;
repeat(61){i+=1;advantage[i]="";advantage_tooltip[i]="";disadvantage[i]="";dis_tooltip[i]="";}

i=1;
advantage[i]="Ambushers";advantage_tooltip[i]="Your "+string(obj_img.player_army)+" is especially trained with ambushing foes; they have a bonus to attack during the start of a battle.";i+=1;
advantage[i]="Battle Cousins";advantage_tooltip[i]="NOT IMPLEMENTED YET.";i+=1;
advantage[i]="Boarders";advantage_tooltip[i]="Boarding other ships is routine for the "+string(obj_img.player_army)+".  Your infantry have a bonus to attack when boarding ships.";i+=1;
advantage[i]=string(obj_img.gyro)+" Drilling";advantage_tooltip[i]=string(obj_img.gyro)+" drills are sacred to your "+string(obj_img.player_army)+"; all "+string(obj_img.faction_dudes[1])+" have increased attack with "+string(obj_img.gyro)+" weaponry.";i+=1;
advantage[i]="Brothers, All";advantage_tooltip[i]="Your "+string(obj_img.player_army)+" places great emphasis on camradery and loyalty.  You start with well-equip "+string(obj_img.unit[1,2])+"s.";i+=1;
advantage[i]="Comrades in Arms";advantage_tooltip[i]="NOT IMPLEMENTED YET.";i+=1;
advantage[i]="Crafters";advantage_tooltip[i]="Your "+string(obj_img.player_army)+" views artifacts as sacred; you start with better gear and maintain all equipment with more ease.";i+=1;
advantage[i]=string(obj_img.demon_formal)+" Binders";advantage_tooltip[i]="Powers are replaced with a more powerful Witchfire variant.  Perils are also less likely to occur but are more disasterous when they do.";i+=1;
advantage[i]="Enemy: "+string(obj_img.faction[6]);advantage_tooltip[i]=string(obj_img.faction[6])+" are particularly hated by your "+string(obj_img.player_army)+".  When fighting "+string(obj_img.faction[6])+" damage is increased.";i+=1;
advantage[i]="Enemy: Fallen";advantage_tooltip[i]=string(obj_img.faction_dudes_formal[11])+" are particularly hated by your "+string(obj_img.player_army)+".  When fighting the "+string(obj_img.faction_dudes[11])+" damage is increased.";i+=1;
advantage[i]="Enemy: "+string(obj_img.faction[13]);advantage_tooltip[i]="NOT IMPLEMENTED YET.";i+=1;
advantage[i]="Enemy: "+string(obj_img.faction[7]);advantage_tooltip[i]=string(obj_img.faction_dudes_formal[7])+" are particularly hated by your "+string(obj_img.player_army)+".  When fighting "+string(obj_img.faction_dudes_formal[7])+" damage is increased.";i+=1;
advantage[i]="Enemy: "+string(obj_img.faction[8]);advantage_tooltip[i]=string(obj_img.faction_dudes_formal[8])+" are particularly hated by your "+string(obj_img.player_army)+".  When fighting "+string(obj_img.faction_dudes_formal[8])+" damage is increased.";i+=1;
advantage[i]="Enemy: "+string(obj_img.faction[9]);advantage_tooltip[i]=string(obj_img.faction_dudes_formal[9])+" are particularly hated by your "+string(obj_img.player_army)+".  When fighting "+string(obj_img.faction_dudes_formal[9])+" damage is increased.";i+=1;
advantage[i]="Kings of Space";advantage_tooltip[i]="Veterans of naval combat, your ships have bonus offense, defense, and may always be controlled regardless of whether or not the "+string(obj_img.faction_title[1])+" is present.";i+=1;
advantage[i]="Lightning Warriors";advantage_tooltip[i]="Your "+string(obj_img.faction_dudes[1])+" only concern in battle is dealing the maximum amount of damage.  Infantry have boosted attack but less defense.";i+=1;
advantage[i]="Paragon";advantage_tooltip[i]="You are a pale shadow of the primarchs.  Larger, stronger, faster, your "+string(obj_img.faction_title[1])+" is on a higher level than most, gaining additional health and combat effectiveness.";i+=1;
advantage[i]=string(obj_img.magic_men)+" Abundance";advantage_tooltip[i]="The "+string(obj_img.magic_men)+" mutation runs rampant in your "+string(obj_img.player_army)+".  "+string(obj_img.unit[1,17])+"s train in 60% the normal time and recieve bonus experience.";i+=1;
advantage[i]="Reverent Guardians";advantage_tooltip[i]="Your "+string(obj_img.player_army)+" places great faith in the "+string(obj_img.church)+"; you start with more "+string(obj_img.unit[1,14])+"s and any "+string(obj_img.faction[5])+" disposition increases are enhanced.";i+=1;
advantage[i]="Tech-Brothers";advantage_tooltip[i]="Your "+string(obj_img.player_army)+" has better ties to the "+string(obj_img.faction[3])+"; you have more tech"+string(obj_img.faction_dudes[1])+" and higher mechanicus disposition.";i+=1;
advantage[i]="Scavengers";advantage_tooltip[i]="Your "+string(obj_img.faction_dudes_formal[1])+" have a knack for finding what has been lost.  Items and wargear are periodically found and added to the "+string(obj_img.hq_forge)+".";i+=1;
advantage[i]="Siege Masters";advantage_tooltip[i]="Your "+string(obj_img.player_army)+" is familiar with the ins-and-outs of fortresses.  They are better at defending and attacking fortifications.";i+=1;
advantage[i]="Slow and Purposeful";advantage_tooltip[i]="Careful and steady is your "+string(obj_img.player_army)+"s doctrine; all infantry have slightly less attack but boosted defenses.";i+=1;
advantage[i]="Melee Enthusiasts";advantage_tooltip[i]="Rip and tear!  Your "+string(obj_img.faction_dudes[1])+" and "+string(obj_img.unit[1,6])+"s have boosted attack with melee weapons.";i+=1;
i+=1;
advantage[i]="Cancel";advantage_tooltip[i]="";

i=1;
disadvantage[i]="Black Rage";dis_tooltip[i]="Your "+string(obj_img.faction_dudes[1])+" are successible to Black Rage, having a chance each battle to become "+string(obj_img.unit[1,23])+".  These units are locked as "+string(obj_img.unit[1,10])+"s and are fairly suicidal.";i+=1;
disadvantage[i]="Blood Debt";dis_tooltip[i]="Prevents your "+string(obj_img.player_army)+" from recruiting new "+string(obj_img.faction_dudes_formal[1])+" until enough of your "+string(obj_img.faction_dudes[1])+", or enemies, have been killed.  Incompatible with Penitent "+string(obj_img.player_army)+" types.";i+=1;
// disadvantage[i]="Embargo";dis_tooltip[i]="NOT IMPLEMENTED YET.";i+=1;// Greatly increases the cost of common wargear and disallows advanced items.
// disadvantage[i]="First In, Last Out";dis_tooltip[i]="NOT IMPLEMENTED YET.";i+=1;
disadvantage[i]="Fresh Blood";dis_tooltip[i]="Due to being newly created your "+string(obj_img.player_army)+" has little special wargear or "+string(obj_img.magic_men_plural)+".";i+=1;
disadvantage[i]="Never Forgive";dis_tooltip[i]="In the past traitors broke off from your "+string(obj_img.player_army)+".  They harbor incriminating secrets or heritical beliefs, and as thus, must be hunted down whenever possible.";i+=1;
disadvantage[i]=string(obj_img.magic_men)+" Intolerant";dis_tooltip[i]=string(obj_img.magic_men_plural)+" are hated by your "+string(obj_img.player_army)+".  You cannot create "+string(obj_img.unit[17])+"s but gain a little bonus attack against "+string(obj_img.magic_men_plural)+".";i+=1;
// disadvantage[i]="Rival Brotherhood";dis_tooltip[i]="NOT IMPLEMENTED YET.";i+=1;
disadvantage[i]="Shitty Luck";dis_tooltip[i]="This is actually really helpful and beneficial for your "+string(obj_img.player_army)+".  Trust me.";i+=1;
disadvantage[i]="Sieged";dis_tooltip[i]="A recent siege has reduced the number of your "+string(obj_img.faction_dudes[1])+" greatly.  You retain a normal amount of equipment but some is damaged.";i+=1;
disadvantage[i]="Splintered";dis_tooltip[i]="Your "+string(obj_img.faction_dudes[1])+" are unorganized and splintered.  You require greater time to respond to threats en masse.";i+=1;
disadvantage[i]="Suspicious";dis_tooltip[i]="Some of your "+string(obj_img.player_army)+"'s past actions or current practices make the "+string(obj_img.faction[4])+" suspicious.  Their disposition is lowered.";i+=1;
disadvantage[i]="Tech-Heresy";dis_tooltip[i]="Your "+string(obj_img.player_army)+" does things that makes the "+string(obj_img.faction[4])+" upset.  "+string(obj_img.faction_short[3])+" disposition is lowered and you have less "+string(obj_img.unit[1,16])+"s.";i+=1;
disadvantage[i]="Tolerant";dis_tooltip[i]="Your "+string(obj_img.player_army)+" is more lenient with xenos.  All xeno disposition is slightly increased and all "+string(obj_img.kingdom_title_shortest)+" disposition is lowered.";i+=1;
disadvantage[i]=string(obj_img.travel)+" Touched";dis_tooltip[i]=string(obj_img.demons_formal)+" seem attracted to your "+string(obj_img.player_army)+"; perils of the "+string(obj_img.magic_world)+" happen more frequently and with more disasterous results.";i+=1;
i+=1;
disadvantage[i]="Cancel";dis_tooltip[i]="";

// Default Marine Loadouts
var ye,i;
ye=99;i=-1;repeat(51){i+=1;
    race[ye,i]=1;loc[ye,i]="";role[ye,i]="";wep1[ye,i]="";wep2[ye,i]="";armor[ye,i]="";gear[ye,i]="";mobi[ye,i]="";experience[ye,i]=0;
}
ye=100;i=-1;repeat(51){i+=1;
    race[ye,i]=1;loc[ye,i]="";role[ye,i]="";wep1[ye,i]="";wep2[ye,i]="";armor[ye,i]="";gear[ye,i]="";mobi[ye,i]="";experience[ye,i]=0;
}
ye=101;i=-1;repeat(51){i+=1;
    race[ye,i]=1;loc[ye,i]="";role[ye,i]="";wep1[ye,i]="";wep2[ye,i]="";armor[ye,i]="";gear[ye,i]="";mobi[ye,i]="";experience[ye,i]=0;
}
ye=102;i=-1;repeat(51){i+=1;
    race[ye,i]=1;loc[ye,i]="";role[ye,i]="";wep1[ye,i]="";wep2[ye,i]="";armor[ye,i]="";gear[ye,i]="";mobi[ye,i]="";experience[ye,i]=0;
}
ye=103;i=-1;repeat(51){i+=1;
    race[ye,i]=1;loc[ye,i]="";role[ye,i]="";wep1[ye,i]="";wep2[ye,i]="";armor[ye,i]="";gear[ye,i]="";mobi[ye,i]="";experience[ye,i]=0;
}



i=99;
repeat(3){i+=1;// First is for the correct slot, second is for default
    race[i,2]=1;role[i,2]=obj_img.unit[1,2];wep1[i,2]="Power Sword";wep2[i,2]=string(obj_img.gyro);armor[i,2]="Power Armor";
    race[i,3]=1;role[i,3]=obj_img.unit[1,3];wep1[i,3]=string(obj_img.blade)+"sword";wep2[i,3]=string(obj_img.gyro);armor[i,3]="Power Armor";
    race[i,4]=1;role[i,4]=obj_img.unit[1,4];wep1[i,4]="Power Fist";wep2[i,4]="Storm "+string(obj_img.gyro);armor[i,4]=string(obj_img.battlesuit);
    race[i,5]=1;role[i,5]=obj_img.unit[1,5];wep1[i,5]="Power Fist";wep2[i,5]=string(obj_img.gyro_adj)+" Pistol";armor[i,5]="Power Armor";gear[i,5]="";
    race[i,6]=1;role[i,6]=obj_img.unit[1,6];wep1[i,6]="Close Combat Weapon";wep2[i,6]=string(obj_img.laser)+"cannon";armor[i,6]=obj_img.unit[1,6];
    race[i,7]=1;role[i,7]=obj_img.unit[1,7];wep1[i,7]="Power Sword";wep2[i,7]="Storm Shield";armor[i,7]="Power Armor";
    race[i,8]=1;role[i,8]=obj_img.unit[1,8];wep1[i,8]=string(obj_img.gyro);wep2[i,8]=string(obj_img.blade)+"sword";armor[i,8]="Power Armor";
    race[i,9]=1;role[i,9]=obj_img.unit[1,9];wep1[i,9]="Heavy Ranged";wep2[i,9]=string(obj_img.gyro_adj)+" Pistol";armor[i,9]="Power Armor";
    race[i,10]=1;role[i,10]=obj_img.unit[1,10];wep1[i,10]=string(obj_img.blade)+"sword";wep2[i,10]=string(obj_img.gyro_adj)+" Pistol";armor[i,10]="Power Armor";mobi[i,10]="Jump Pack";
    race[i,12]=1;role[i,12]=obj_img.unit[1,12];wep1[i,12]="Sniper Rifle";wep2[i,12]=string(obj_img.blade)+"sword";armor[i,12]="Scout Armor";
    race[i,14]=1;role[i,14]=obj_img.unit[1,14];wep1[i,14]="Power Sword";wep2[i,14]="Storm "+string(obj_img.gyro);armor[i,14]="Power Armor";gear[i,14]="Rosarius";
    race[i,15]=1;role[i,15]=obj_img.unit[1,15];wep1[i,15]="Power Sword";wep2[i,15]="Storm "+string(obj_img.gyro);armor[i,15]="Power Armor";gear[i,15]="Narthecium";
    race[i,16]=1;role[i,16]=obj_img.unit[1,16];wep1[i,16]="Power Axe";wep2[i,16]="Storm "+string(obj_img.gyro);armor[i,16]="Power Armor";gear[i,16]="Servo Arms";
    race[i,17]=1;role[i,17]=obj_img.unit[1,17];wep1[i,17]="Force Weapon";wep2[i,17]="Storm "+string(obj_img.gyro);armor[i,17]="Power Armor";gear[i,17]="Psychic Hood";
}



if (global.restart&gt;0){
    fade_in=-1;
    slate1=-1;
    slate=21;
    slate3=21;
    slate4=50;
    
    change_slide=0;
    slide=2;
    slide_show=2;
    
    scr_restart_variables(4);
    with(obj_restart_vars){instance_destroy();}
    global.restart=0;
}


if (skip=true){
    fade_in=-1;
    slate1=-1;
    slate=21;
    slate3=21;
    slate4=50;
    global.version=500;
    
    change_slide=0;
    slide=6;
    slide_show=slide;
    
    icon_name="ih";
    icon=6;founding=6;
    
    chapter="Sons of Duke";
    custom=2;
    battle_cry="The flesh is weak!  The flesh is weak!  The flesh is weak!  The flesh is weak!  The flesh is weak";
    
    purity=5;
    
    /*main_color=5;secondary_color=5;trim_color=2;
    pauldron2_color=5;// Left pauldron
    pauldron_color=5;// Right pauldron
    lens_color=7;weapon_color=2;col_special=0;*/
    
    main_color=7;secondary_color=5;trim_color=5;
    pauldron2_color=5;// Left pauldron
    pauldron_color=5;// Right pauldron
    lens_color=6;weapon_color=4;col_special=0;
    
    scr_chapter_new("Doom Benefactors");
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Shader</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

scr_colors_initialize();


colour_to_find1 = shader_get_uniform(sReplaceColor, "f_Colour1");
colour_to_set1 = shader_get_uniform(sReplaceColor, "f_Replace1");
sourceR1 = 0/255;
sourceG1 = 0/255;
sourceB1 = 255/255;
targetR1 = col_r[main_color]/255;
targetG1 = col_g[main_color]/255;
targetB1 = col_b[main_color]/255;

colour_to_find2 = shader_get_uniform(sReplaceColor, "f_Colour2");
colour_to_set2 = shader_get_uniform(sReplaceColor, "f_Replace2");
sourceR2 = 255/255;
sourceG2 = 0/255;
sourceB2 = 0/255;
targetR2 = col_r[secondary_color]/255;
targetG2 = col_g[secondary_color]/255;
targetB2 = col_b[secondary_color]/255;

colour_to_find3 = shader_get_uniform(sReplaceColor, "f_Colour3");
colour_to_set3 = shader_get_uniform(sReplaceColor, "f_Replace3");
sourceR3 = 255/255;
sourceG3 = 255/255;
sourceB3 = 0/255;
targetR3 = col_r[pauldron_color]/255;
targetG3 = col_g[pauldron_color]/255;
targetB3 = col_b[pauldron_color]/255;

colour_to_find4 = shader_get_uniform(sReplaceColor, "f_Colour4");
colour_to_set4 = shader_get_uniform(sReplaceColor, "f_Replace4");
sourceR4 = 0/255;
sourceG4 = 255/255;
sourceB4 = 0/255;
targetR4 = col_r[lens_color]/255;
targetG4 = col_g[lens_color]/255;
targetB4 = col_b[lens_color]/255;

colour_to_find5 = shader_get_uniform(sReplaceColor, "f_Colour5");
colour_to_set5 = shader_get_uniform(sReplaceColor, "f_Replace5");
sourceR5 = 255/255;
sourceG5 = 0/255;
sourceB5 = 255/255;
targetR5 = col_r[trim_color]/255;
targetG5 = col_g[trim_color]/255;
targetB5 = col_b[trim_color]/255;

colour_to_find6 = shader_get_uniform(sReplaceColor, "f_Colour6");
colour_to_set6 = shader_get_uniform(sReplaceColor, "f_Replace6");
sourceR6 = 250/255;
sourceG6 = 250/255;
sourceB6 = 250/255;
targetR6 = col_r[pauldron2_color]/255;
targetG6 = col_g[pauldron2_color]/255;
targetB6 = col_b[pauldron2_color]/255;

colour_to_find7 = shader_get_uniform(sReplaceColor, "f_Colour7");
colour_to_set7 = shader_get_uniform(sReplaceColor, "f_Replace7");
sourceR7 = 0/255;
sourceG7 = 255/255;
sourceB7 = 255/255;
targetR7 = col_r[weapon_color]/255;
targetG7 = col_g[weapon_color]/255;
targetB7 = col_b[weapon_color]/255;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
window_old=window_data;
window_data=string(window_get_x())+"|"+string(window_get_y())+"|"+string(window_get_width())+"|"+string(window_get_height())+"|";
if (window_get_fullscreen()=1){window_old="fullscreen";window_data="fullscreen";}

if (window_data!="fullscreen") and (window_get_fullscreen()=0){
    if (window_data!=window_old){
        ini_open("saves.ini");
        ini_write_string("Settings","window_data",string(window_get_x())+"|"+string(window_get_y())+"|"+string(window_get_width())+"|"+string(window_get_height())+"|");
        ini_close();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
shader_reset();

colour_to_find1 = shader_get_uniform(sReplaceColor, "f_Colour1");
colour_to_set1 = shader_get_uniform(sReplaceColor, "f_Replace1");
sourceR1 = 0/255;
sourceG1 = 0/255;
sourceB1 = 255/255;
targetR1 = col_r[main_color]/255;
targetG1 = col_g[main_color]/255;
targetB1 = col_b[main_color]/255;

colour_to_find2 = shader_get_uniform(sReplaceColor, "f_Colour2");
colour_to_set2 = shader_get_uniform(sReplaceColor, "f_Replace2");
sourceR2 = 255/255;
sourceG2 = 0/255;
sourceB2 = 0/255;
targetR2 = col_r[secondary_color]/255;
targetG2 = col_g[secondary_color]/255;
targetB2 = col_b[secondary_color]/255;

colour_to_find3 = shader_get_uniform(sReplaceColor, "f_Colour3");
colour_to_set3 = shader_get_uniform(sReplaceColor, "f_Replace3");
sourceR3 = 255/255;
sourceG3 = 255/255;
sourceB3 = 0/255;
targetR3 = col_r[pauldron_color]/255;
targetG3 = col_g[pauldron_color]/255;
targetB3 = col_b[pauldron_color]/255;

colour_to_find4 = shader_get_uniform(sReplaceColor, "f_Colour4");
colour_to_set4 = shader_get_uniform(sReplaceColor, "f_Replace4");
sourceR4 = 0/255;
sourceG4 = 255/255;
sourceB4 = 0/255;
targetR4 = col_r[lens_color]/255;
targetG4 = col_g[lens_color]/255;
targetB4 = col_b[lens_color]/255;

colour_to_find5 = shader_get_uniform(sReplaceColor, "f_Colour5");
colour_to_set5 = shader_get_uniform(sReplaceColor, "f_Replace5");
sourceR5 = 255/255;
sourceG5 = 0/255;
sourceB5 = 255/255;
targetR5 = col_r[trim_color]/255;
targetG5 = col_g[trim_color]/255;
targetB5 = col_b[trim_color]/255;

colour_to_find6 = shader_get_uniform(sReplaceColor, "f_Colour6");
colour_to_set6 = shader_get_uniform(sReplaceColor, "f_Replace6");
sourceR6 = 250/255;
sourceG6 = 250/255;
sourceB6 = 250/255;
targetR6 = col_r[pauldron2_color]/255;
targetG6 = col_g[pauldron2_color]/255;
targetB6 = col_b[pauldron2_color]/255;

colour_to_find7 = shader_get_uniform(sReplaceColor, "f_Colour7");
colour_to_set7 = shader_get_uniform(sReplaceColor, "f_Replace7");
sourceR7 = 0/255;
sourceG7 = 255/255;
sourceB7 = 255/255;
targetR7 = col_r[weapon_color]/255;
targetG7 = col_g[weapon_color]/255;
targetB7 = col_b[weapon_color]/255;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if (slide=2) and (scrollbar_engaged&gt;0){
    var x1,x2,x3,x4,x5,x6,y1,y2,y3,y4,y5,y6,bs,see_size,total_max,current,top;
    x1=1111;y1=245;x2=1131;y2=671;bs=245;
    
    total_max=77+global.custom_icons;
    see_size=(671-245)/total_max;
    
    // bounds of the solid area
    x3=1111;x4=1131;
    current=icons_top;
    top=current*see_size;
    y3=top;y4=y3+(24*see_size)-see_size;
    
    
    y5=mouse_y-(scrollbar_engaged)-245;
    y6=round(y5/see_size/6)*6;
    
    icons_top=y6;
    if (icons_top&lt;1) then icons_top=1;
    if (icons_top&gt;(total_max-24)) then icons_top=total_max-24;
    
}




if (slide=1){
    if (keyboard_string="137"){highlight=18;
        cooldown=8000;chapter="Doom Benefactors";scr_chapter_new(chapter);keyboard_string="";
        if (chapter!="nopw_nopw"){icon=25;custom=0;change_slide=1;goto_slide=2;chapter_string=chapter;}
        scr_creation(2);scr_creation(3.5);scr_creation(4);
        scr_creation(5);scr_creation(6);
    }
}


if (slate5=1) or (slate6=1){
    if (master_volume&gt;0) and (effect_volume&gt;0){
        audio_play_sound(snd_buzz,0,0);audio_sound_gain(snd_buzz,1*master_volume*effect_volume,0);
    }
}


if (fade_in&gt;0) then fade_in-=1;
if (fade_in&lt;=0) and (slate1&gt;0) then slate1-=1;
if (slate1&lt;=0) and (slate2&lt;20) then slate2+=1;
if (slate1&lt;=0) and (slate3&lt;20) then slate3+=1;

if (slate2&gt;=7) and (slate4&lt;30) then slate4+=1;

if (slate5&gt;=1) and (slate5&lt;=60) then slate5+=1;if (slate5=61) then slate5=0;
if (slate6&gt;=1) and (slate6&lt;=60) then slate6+=1;if (slate6=61) then slate6=0;

if (slate4&gt;=30){
    if (floor(random(660))=5) and (slate5&lt;=0) then slate5=1;
    if (floor(random(660))=6) and (slate6&lt;=0) then slate6=1;
}


if (change_slide&gt;0){change_slide+=1;}
if (change_slide&gt;0){change_slide+=1;}
if (change_slide&gt;=100) then change_slide=-1;
if (change_slide&gt;=100) then change_slide=-1;

if (change_slide=35) or (change_slide=36) or (chapter="Doom Benefactors") or (chapter_string="Doom Benefactors"){
    // if (goto_slide&gt;1) and ((chapter="Doom Benefactors") or (chapter_string="Doom Benefactors")){change_slide=50;slide=goto_slide;slide_show=goto_slide;}

    if (goto_slide=1){
        mouse_left=0;mouse_right=0;
        highlight=0;highlighting=0;old_highlight=0;
        
        text_selected="none";text_bar=0;
        tooltip="";tooltip2="";popup="";
        temp=0;target_gear=0;tab=0;
        
        chapter="Unnamed";chapter_string="Unnamed";
        icon=1;icon_name="da";custom=0;founding=1;
        points=0;maxpoints=100;fleet_type=1;strength=5;
        cooperation=5;purity=5;stability=5;
        var i;i=-1;repeat(6){i+=1;adv[i]="";adv_num[i]=0;dis[i]="";dis_num[i]=0;}
        homeworld="Temperate";homeworld_name=scr_star_name();
        recruiting="Death";recruiting_name=scr_star_name();
        flagship_name=scr_ship_name("imperial");
        recruiting_exists=1;homeworld_exists=1;homeworld_rule=1;
        aspirant_trial="Blood Duel";discipline="default";
        battle_cry="For the "+string(obj_img.king_title);
        main_color=1;secondary_color=1;trim_color=1;
        pauldron2_color=1;pauldron_color=1;// Left/Right pauldron
        lens_color=1;weapon_color=1;col_special=0;
        color_to_main="";color_to_secondary="";color_to_trim="";
        color_to_pauldron="";color_to_pauldron2="";color_to_lens="";
        color_to_weapon="";trim=1;
        hapothecary=scr_marine_name();hchaplain=scr_marine_name();clibrarian=scr_marine_name();
        fmaster=scr_marine_name();recruiter=scr_marine_name();admiral=scr_marine_name();
        equal_specialists=0;load_to_ships=2;successors=0;
        mutations=0;mutations_selected=0;
        preomnor=0;voice=0;doomed=0;lyman=0;omophagea=0;ossmodula=0;membrane=0;
        zygote=0;betchers=0;catalepsean=0;secretions=0;occulobe=0;mucranoid=0;
        
        disposition[0]=0;
        disposition[1]=0;// Prog
        disposition[2]=0;// Imp
        disposition[3]=0;// Mech
        disposition[4]=0;// Inq
        disposition[5]=0;// Ecclesiarchy
        disposition[6]=0;// Astartes
        disposition[7]=0;// Reserved
        
        chapter_master_name=scr_marine_name();chapter_master_melee=1;
        chapter_master_ranged=1;chapter_master_specialty=2;
    }
    slide=goto_slide;slide_show=goto_slide;
}


if (text_selected!="") and (text_selected!="none") then text_bar+=1;
if (text_bar&gt;60) then text_bar=1;

if (cooldown&gt;0) and (cooldown&lt;=5000) then cooldown-=1;


if (custom=2){
    name_bad=0;
    if (chapter="") then name_bad=1;
    if (chapter="Dark Angels") then name_bad=1;
    if (chapter="White Scars") then name_bad=1;
    if (chapter="Space Wolves") then name_bad=1;
    if (chapter="Imperial Fists") then name_bad=1;
    if (chapter="Blood Angels") then name_bad=1;
    if (chapter="Iron Hands") then name_bad=1;
    if (chapter="Ultramarines") then name_bad=1;
    if (chapter="Salamanders") then name_bad=1;
    if (chapter="Raven Guard") then name_bad=1;
    if (chapter="Blood Ravens") then name_bad=1;
    if (chapter="Doom Benefactors") then name_bad=1;
}


if (color_to_main!=""){var q,good;q=0;good=0;repeat(30){q+=1;if (color_to_main=col[q]) and (good=0){good=q;color_to_main="";main_color=q;}}}
if (color_to_secondary!=""){var q,good;q=0;good=0;repeat(30){q+=1;if (color_to_secondary=col[q]) and (good=0){good=q;color_to_secondary="";secondary_color=q;}}}
if (color_to_trim!=""){var q,good;q=0;good=0;repeat(30){q+=1;if (color_to_trim=col[q]) and (good=0){good=q;color_to_trim="";trim_color=q;}}}
if (color_to_pauldron!=""){var q,good;q=0;good=0;repeat(30){q+=1;if (color_to_pauldron=col[q]) and (good=0){good=q;color_to_pauldron="";pauldron_color=q;}}}
if (color_to_pauldron2!=""){var q,good;q=0;good=0;repeat(30){q+=1;if (color_to_pauldron2=col[q]) and (good=0){good=q;color_to_pauldron2="";pauldron2_color=q;}}}
if (color_to_lens!=""){var q,good;q=0;good=0;repeat(30){q+=1;if (color_to_lens=col[q]) and (good=0){good=q;color_to_lens="";lens_color=q;}}}
if (color_to_weapon!=""){var q,good;q=0;good=0;repeat(30){q+=1;if (color_to_weapon=col[q]) and (good=0){good=q;color_to_weapon="";weapon_color=q;}}}


// on left mouse release, if greater than 5000 and less than 9000, set cooldown to 0
// if &gt;=9000 then don't decrease at all
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (slide=2) and (popup="icons"){
    if (icons_top&lt;(77+global.custom_icons)-24){icons_top+=6;if (icons_top&gt;(77+global.custom_icons-24)) then icons_top=77+global.custom_icons-24;cooldown=2;}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (slide=2) and (popup="icons"){
    if ((icons_top/6)&gt;1){icons_top-=6;if (icons_top&lt;1) then icons_top=1;cooldown=2;}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>9000</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_right</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>9000</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_left</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>scrollbar_engaged</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrollbar_engaged</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_right</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_left</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Start</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

// 850,860

var xx,yy;
xx=375;yy=10;

tooltip="";tooltip2="";
draw_set_alpha(1);
// draw_sprite(spr_creation_slate,0,xx,yy);
scr_image("slate",0,xx,yy,850,860);
draw_set_alpha(1-(slate1/30));
// draw_sprite(spr_creation_slate,1,xx,yy);
scr_image("slate",1,xx,yy,850,860);

draw_set_color(5998382);
if (slate2&gt;0){
    if (slate2&lt;=10) then draw_set_alpha(slate2/10);
    if (slate2&gt;10) then draw_set_alpha(1-((slate2-10)/10));
    draw_line(xx+30,yy+70+(slate2*36),xx+790,yy+70+(slate2*36));
}
if (slate3&gt;0){
    if (slate3&lt;=10) then draw_set_alpha(slate3/10);
    if (slate3&gt;10) then draw_set_alpha(1-((slate3-10)/10));
    draw_line(xx+30,yy+70+(slate3*36),xx+790,yy+70+(slate3*36));
}



draw_set_alpha(slate4/30);
if (slate4&gt;0){
    if (slide=1){
        draw_set_color(38144);
        draw_set_font(fnt_40k_30b);
        draw_set_halign(fa_center);
        draw_text(800,80,"Select "+string(obj_img.player_army));
        
        draw_set_font(fnt_40k_30b);
        draw_set_halign(fa_left);
        draw_text_transformed(440,133,"Founding "+string(obj_img.player_army)+"s",0.75,0.75,0);
        draw_text_transformed(440,363,"Existing "+string(obj_img.player_army)+"s",0.75,0.75,0);
        draw_text_transformed(440,593,"Other",0.75,0.75,0);
        
        var x2,y2,i,new_hover,tool;
        x2=441;y2=167;i=1;new_hover=highlight;tool=0;
        
        repeat(9){
            
            draw_sprite(spr_creation_icon,0,x2,167);
            scr_image("creation",i,x2,167,48,48);
            // draw_sprite_stretched(spr_icon,i,x2,167,48,48);
            
            if (mouse_x&gt;=x2) and (mouse_y&gt;=167) and (mouse_x&lt;x2+48) and (mouse_y&lt;167+48) and (slate4&gt;=30){
                if (old_highlight!=highlight) and (highlight!=i) and (goto_slide!=2){old_highlight=highlight;highlighting=1;}
                if (goto_slide!=2){highlight=i;tool=1;}
                draw_set_alpha(0.1);draw_set_color(c_white);
                draw_rectangle(x2,167,x2+48,167+48,0);
                draw_set_alpha(slate4/30);
                if (mouse_left&gt;=1) and (cooldown&lt;=0) and (change_slide&lt;=0) and (premades=true){
                    cooldown=8000;chapter=chapter_id[i];scr_chapter_new(chapter);
                    if (chapter!="nopw_nopw"){icon=i;custom=0;change_slide=1;goto_slide=2;chapter_string=chapter;}
                }
            }
            i+=1;x2+=53;
        }
        
        x2=441;y2=397;i=10;new_hover=highlight;
        repeat(7){
        
            draw_sprite(spr_creation_icon,0,x2,397);
            // draw_sprite_stretched(spr_icon,i,x2,397,48,48);
            scr_image("creation",i,x2,397,48,48);
            
            if (mouse_x&gt;=x2) and (mouse_y&gt;=397) and (mouse_x&lt;x2+48) and (mouse_y&lt;397+48) and (slate4&gt;=30){
                if (old_highlight!=highlight) and (highlight!=i) and (goto_slide!=2){old_highlight=highlight;highlighting=1;}
                if (goto_slide!=2){highlight=i;tool=1;}
                draw_set_alpha(0.1);draw_set_color(c_white);
                draw_rectangle(x2,397,x2+48,397+48,0);
                draw_set_alpha(slate4/30);
                if (mouse_left&gt;=1) and (cooldown&lt;=0) and (change_slide&lt;=0) and (premades=true){
                    cooldown=8000;chapter=chapter_id[i];scr_chapter_new(chapter);
                    if (chapter!="nopw_nopw"){icon=i;custom=0;change_slide=1;goto_slide=2;chapter_string=chapter;}
                }
            }
            i+=1;x2+=53;
        }
        
        x2=441;y2=627;i=17;new_hover=highlight;
        repeat(4){
        
            draw_sprite(spr_creation_icon,0,x2,y2);
            // draw_sprite_stretched(spr_icon,i,x2,y2,48,48);
            scr_image("creation",i,x2,y2,48,48);
            
            if (mouse_x&gt;=x2) and (mouse_y&gt;=y2) and (mouse_x&lt;x2+48) and (mouse_y&lt;y2+48) and (slate4&gt;=30){
                if (old_highlight!=highlight) and (highlight!=i) and (goto_slide!=2){old_highlight=highlight;highlighting=1;}
                if (goto_slide!=2){highlight=i;tool=1;}
                draw_set_alpha(0.1);draw_set_color(c_white);
                draw_rectangle(x2,y2,x2+48,y2+48,0);
                draw_set_alpha(slate4/30);
                if (mouse_left&gt;=1) and (cooldown&lt;=0) and (change_slide&lt;=0) and (premades=true){
                    cooldown=8000;chapter=chapter_id[i];scr_chapter_new(chapter);
                    if (chapter!="nopw_nopw"){icon=i;custom=0;change_slide=1;goto_slide=2;chapter_string=chapter;}
                }
            }
            i+=1;x2+=53;
        }
        
        x2+=53;i=1001;
        repeat(2){
        
            draw_sprite(spr_creation_icon,0,x2,y2);
            draw_sprite_stretched(spr_icon_other,i-1001,x2,y2,48,48);
            
            if (mouse_x&gt;=x2) and (mouse_y&gt;=y2) and (mouse_x&lt;x2+48) and (mouse_y&lt;y2+48) and (slate4&gt;=30){
                if (old_highlight!=highlight) and (highlight!=i) and (goto_slide!=2){old_highlight=highlight;highlighting=1;}
                if (goto_slide!=2){highlight=i;tool=1;}
                draw_set_alpha(0.1);draw_set_color(c_white);
                draw_rectangle(x2,y2,x2+48,y2+48,0);
                draw_set_alpha(slate4/30);
                if (mouse_left&gt;=1) and (cooldown&lt;=0) and (change_slide&lt;=0){
                    cooldown=8000;icon=1;icon_name="da";change_slide=1;goto_slide=2;
                    if (i=1001){custom=2;scr_chapter_random(0);}
                    if (i=1002){custom=1;scr_chapter_random(1);}
                }
            }
            i+=1;x2+=53;
        }
        
        if (tool=1) and (highlighting&lt;30) then highlighting+=1;
        if (tool=0) and (highlighting&gt;0) then highlighting-=1;
        // if (new_hover=0) then highlight=0;
        
        if ((highlight&gt;0) and (highlighting&gt;0)) or ((change_slide&gt;0) and (goto_slide!=1)){
            draw_set_alpha(min(slate4/30,highlighting/30));
            if (change_slide&gt;0) then draw_set_alpha(1);
            
            
            if (highlight&lt;=9) then scr_image("main_splash",highlight-1,0,68,374,713);
            if (highlight&gt;9) and (highlight&lt;=16) and (highlight!=15) then scr_image("existing_splash",highlight-10,0,68,374,713);
            if (highlight=15) then scr_image("other_splash",6,0,68,374,713);
            if (highlight=17) then scr_image("other_splash",0,0,68,374,713);
            if (highlight=18) then scr_image("other_splash",6,0,68,374,713);
            if (highlight=19) then scr_image("other_splash",2,0,68,374,713);
            if (highlight=20) then scr_image("other_splash",6,0,68,374,713);
            
            if (highlight=1001) then scr_image("other_splash",4,0,68,374,713);
            if (highlight=1002) then scr_image("other_splash",5,0,68,374,713);
            
            /*if (highlight&lt;=9) then draw_sprite(spr_creation_founding,highlight-1,0,68);
            if (highlight&gt;9) and (highlight&lt;=16) and (highlight!=15) then draw_sprite(spr_creation_existing,highlight-10,0,68);
            if (highlight=15) then draw_sprite(spr_creation_nosplash,0,0,68);
            if (highlight=17) then draw_sprite(spr_creation_other,0,0,68);
            if (highlight=18) then draw_sprite(spr_creation_nosplash,0,0,68);
            if (highlight=19) then draw_sprite(spr_creation_other,2,0,68);
            if (highlight=20) then draw_sprite(spr_creation_nosplash,0,0,68);
            
            if (highlight=1001) then draw_sprite(spr_creation_other,4,0,68);
            if (highlight=1002) then draw_sprite(spr_creation_other,5,0,68);*/
            
            draw_set_alpha(slate4/30);
            draw_set_color(38144);
            draw_rectangle(0,68,374,781,1);
        }
        draw_set_alpha(slate4/30);
        
        
        
        
        if (instance_exists(obj_cursor)){obj_cursor.image_index=0;}
        if (tool=1) and (change_slide&lt;=0){
            if (instance_exists(obj_cursor)){obj_cursor.image_index=1;}
            
            draw_set_alpha(1);
            draw_set_color(0);
            draw_set_halign(fa_left);
            
            if (highlight&lt;=25){
                tooltip=chapter_id[highlight];
                tooltip2=chapter_tooltip[highlight];
            }
            if (highlight=1001) then tooltip="Custom";
            if (highlight=1002) then tooltip="Randomize";
            if (highlight=1001) then tooltip2="Create your own customized "+string(obj_img.player_army)+", deciding the origins, strength, and weaknesses.  Custom "+string(obj_img.player_army)+"s are weaker than Founding "+string(obj_img.player_army)+"s.";
            if (highlight=1002) then tooltip2="Randomly generate a "+string(obj_img.player_army)+" to play.  The origins, strength, and weaknesses are all random.  Random "+string(obj_img.player_army)+"s are normally weaker than Founding "+string(obj_img.player_army)+"s. ";
        }
        
        
        
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var yar;yar=0;


if (slide&gt;=2){
    tooltip="";tooltip2="";
    
    if (goto_slide!=1){
    
        /*if (icon&lt;=9) then draw_sprite(spr_creation_founding,icon-1,0,68);
        if (icon&gt;9) and (icon&lt;=16) and (icon!=15) then draw_sprite(spr_creation_existing,icon-10,0,68);
        if (icon=15) then draw_sprite(spr_creation_nosplash,0,0,68);
        if (icon=17) then draw_sprite(spr_creation_other,0,0,68);
        if (icon=18) then draw_sprite(spr_creation_nosplash,0,0,68);
        if (icon=19) then draw_sprite(spr_creation_other,2,0,68);
        if (icon=20) then draw_sprite(spr_creation_nosplash,0,0,68);
        
        if (custom=2) then draw_sprite(spr_creation_other,4,0,68);
        if (custom=1) then draw_sprite(spr_creation_other,5,0,68);*/
        
        if (icon&lt;=9) then scr_image("main_splash",icon-1,0,68,374,713);
        if (icon&gt;9) and (icon&lt;=16) and (icon!=15) then scr_image("existing_splash",icon-10,0,68,374,713);
        if (icon=15) then scr_image("other_splash",6,0,68,374,713);
        if (icon=17) then scr_image("other_splash",0,0,68,374,713);
        if (icon=18) then scr_image("other_splash",6,0,68,374,713);
        if (icon=19) then scr_image("other_splash",2,0,68,374,713);
        if (icon=20) then scr_image("other_splash",6,0,68,374,713);
        
        if (custom=2) then scr_image("other_splash",4,0,68,374,713);
        if (custom=1) then scr_image("other_splash",5,0,68,374,713);
        
        draw_set_color(38144);
        draw_rectangle(0,68,374,781,1);
    }
    
    draw_set_color(0);
    draw_rectangle(436,74,436+128,74+128,0);
    // if (icon&lt;=20) then draw_sprite_stretched(spr_icon,icon,436,74,128,128);
    if (icon&lt;=20) then scr_image("creation",icon,436,74,128,128);
    if (icon&gt;20) then draw_sprite_stretched(spr_icon_other,icon-19,436,74,128,128);
    
    obj_cursor.image_index=0;
    if (scr_hit(436,74,436+128,74+128)=true) and (popup=""){obj_cursor.image_index=1;
        tooltip=string(obj_img.player_army)+" Icon";tooltip2="Your "+string(obj_img.player_army)+"'s icon.  Click to edit.";
        
        /*if (cooldown&lt;=0) and (mouse_left=1){
            popup="icons";cooldown=8000;
        }*/
    }
    
    var i;i=0;
    repeat(290){i+=1;
        if (icon_name="custom"+string(i)) and (obj_cuicons.spr_custom[i]&gt;0){
            if (sprite_exists(obj_cuicons.spr_custom_icon[i])){
                draw_sprite_stretched(obj_cuicons.spr_custom_icon[i],0,436,74,128,128);
                
                
                // obj_cuicons.spr_custom_icon[ic-78]
            }
        }
    }
    
    // draw_set_color(c_orange);
    // draw_text(436+64,74-30,string(icon_name));
    
    
    if (slide=2){
        /*if (scr_hit(548,149,584,193)=true){obj_cursor.image_index=1;
            if (cooldown&lt;=0) and (mouse_left&gt;=1){cooldown=8000;scr_icon("-");}
        }
        if (scr_hit(595,149,634,193)=true){obj_cursor.image_index=1;
            if (cooldown&lt;=0) and (mouse_left&gt;=1){cooldown=8000;scr_icon("+");}
        }*/
        
        
        if (founding!=0){
            draw_set_font(fnt_40k_30b);
            // draw_text_transformed(
        
            draw_set_alpha(0.33);
            // if (founding&lt;10) then draw_sprite_stretched(spr_icon,founding,1164-128,74,128,128);
            if (founding&lt;10) then scr_image("creation",founding,1164-128,74,128,128);
            if (founding=10) then draw_sprite_stretched(spr_icon_other,0,1164-128,74,128,128);
            draw_set_alpha(1);
            
            if (scr_hit(1164-128,74,1164,74+128)=true){tooltip="Founding "+string(obj_img.player_army);tooltip2="The parent "+string(obj_img.player_army)+" whos "+string(obj_img.organics)+" your own originates from.";}
            
            if (custom&gt;1){
                draw_sprite_stretched(spr_creation_arrow,0,1164-194,160,32,32);
                draw_sprite_stretched(spr_creation_arrow,1,1164-144,160,32,32);
                
                if (scr_hit(1164-194,149,1164-162,193)=true){obj_cursor.image_index=1;
                    if (cooldown&lt;=0) and (mouse_left&gt;=1){cooldown=8000;founding-=1;if (founding=0) then founding=10;}
                }
                if (scr_hit(1164-144,149,1164-112,193)=true){obj_cursor.image_index=1;
                    if (cooldown&lt;=0) and (mouse_left&gt;=1){cooldown=8000;founding+=1;if (founding=11) then founding=1;}
                }
            }
            
            
        }
        
        
        
    }
    
    
}


if (slide=2){
    draw_set_color(38144);
    draw_set_font(fnt_40k_30b);
    draw_set_halign(fa_center);
    
    obj_cursor.image_index=0;
    
    if (name_bad=1) then draw_set_color(c_red);
    if (text_selected!="chapter") or (custom!=2) then draw_text(800,80,string(chapter));
    if (custom=2){
        if (text_selected="chapter") and (text_bar&gt;30) then draw_text(800,80,string(chapter));
        if (text_selected="chapter") and (text_bar&lt;=30) then draw_text(805,80,string(chapter)+"|");
        if (scr_text_hit(800,80,true,chapter)=true){
            obj_cursor.image_index=2;
            if (cooldown&lt;=0) and (mouse_left&gt;=1){text_selected="chapter";cooldown=8000;keyboard_string=chapter;}
        }
        if (text_selected="chapter") then chapter=keyboard_string;
        draw_set_alpha(0.75);draw_rectangle(580,80,1020,118,1);draw_set_alpha(1);
    }
    
    draw_set_color(38144);
    draw_text_transformed(800,120,"Points: "+string(points)+"/"+string(maxpoints),0.6,0.6,0);
    
    
    obj_cursor.image_index=0;
    if (custom&gt;0) and (restarted=0){
        if (scr_hit(436,74,436+128,74+128)=true) and (popup=""){obj_cursor.image_index=1;
            if (cooldown&lt;=0) and (mouse_left=1){
                popup="icons";cooldown=8000;
            }
        }
    }
    
    /*if (custom&gt;0) and (restarted=0){
        draw_sprite_stretched(spr_creation_arrow,0,550,160,32,32);
        draw_sprite_stretched(spr_creation_arrow,1,597,160,32,32);
    }*/
    
    draw_set_color(38144);
    draw_line(445,200,1125,200);
    draw_line(445,201,1125,201);
    draw_line(445,202,1125,202);
    
    if (popup=""){
        if (custom&lt;2) then draw_set_alpha(0.5);
        draw_text_transformed(800,211,string(obj_img.player_army)+" Type",0.6,0.6,0);
        draw_set_halign(fa_left);
        
        if (scr_hit(516,242,674,266)=true){tooltip="Homeworld";tooltip2="Your "+string(obj_img.player_army)+" has a homeworld that they base on.  Contained upon it is a massive "+string(obj_img.hq_ground)+", which provides high levels of defense and automated weapons.";}
        if (scr_hit(768,242,866,266)=true){tooltip="Fleet Based";tooltip2="Rather than a homeworld your "+string(obj_img.player_army)+" begins near their recruiting world.  The fleet includes a "+string(obj_img.ship[1,1])+", which serves as a mobile base, and powerful ship.";}
        if (scr_hit(952,242,1084,266)=true){tooltip="Penitent";tooltip2="As with Fleet Based, but you must crusade and fight until your penitence meter runs out.  Note that recruiting is disabled until then.";}// Avoiding fights will result in excomunicatus traitorus.
        
        if (custom&lt;2) then draw_set_alpha(0.5);
        yar=0;if (fleet_type=1) then yar=1;draw_sprite(spr_creation_check,yar,519,239);yar=0;
        if (scr_hit(519,239,519+32,239+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom=2){cooldown=8000;
            if (points+20&lt;=maxpoints) and (fleet_type=3){points+=20;fleet_type=1;}
            if (fleet_type=2){fleet_type=1;}
        }
        draw_text_transformed(551,239,"Homeworld",0.6,0.6,0);
        
        yar=0;if (fleet_type=2) then yar=1;draw_sprite(spr_creation_check,yar,771,239);yar=0;
        if (scr_hit(771,239,771+32,239+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom=2){cooldown=8000;
            if (points+20&lt;=maxpoints) and (fleet_type=3){points+=20;fleet_type=2;}
            if (fleet_type=1){fleet_type=2;}
        }
        draw_text_transformed(804,239,"Fleet Based",0.6,0.6,0);
        
        yar=0;if (fleet_type=3) then yar=1;draw_sprite(spr_creation_check,yar,958,239);yar=0;
        if (scr_hit(958,239,958+32,239+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom=2){if (fleet_type!=3) then points-=20;fleet_type=3;cooldown=8000;}
        draw_text_transformed(990,239,"Penitent",0.6,0.6,0);
        draw_set_alpha(1);
        
        draw_line(445,289,1125,289);
        draw_line(445,290,1125,290);
        draw_line(445,291,1125,291);
        
        draw_set_halign(fa_center);
        draw_text_transformed(800,301,string(obj_img.player_army)+" Stats",0.6,0.6,0);
        draw_set_halign(fa_right);
        
        draw_text_transformed(617,332,"Strength ("+string(strength)+")",0.5,0.5,0);
        draw_text_transformed(617,387,"Cooperation ("+string(cooperation)+")",0.5,0.5,0);
        draw_text_transformed(617,442,string_letters(obj_img.organics)+" Purity ("+string(purity)+")",0.5,0.5,0);
        draw_text_transformed(617,497,string_letters(obj_img.organics)+" Stability ("+string(stability)+")",0.5,0.5,0);
        
        if (custom=2) then draw_sprite_stretched(spr_arrow,0,625,325,32,32);
        if (scr_hit(625,325,657,357)=true){obj_cursor.image_index=1;if (cooldown&lt;=0) and (custom=2) and (strength&gt;1) and (mouse_left&gt;=1){strength-=1;points-=10;cooldown=8000;}}
        if (custom=2) then draw_sprite_stretched(spr_arrow,0,625,380,32,32);
        if (scr_hit(625,380,657,412)=true){obj_cursor.image_index=1;if (cooldown&lt;=0) and (custom=2) and (cooperation&gt;1) and (mouse_left&gt;=1){cooperation-=1;points-=10;cooldown=8000;}}
        if (custom=2) then draw_sprite_stretched(spr_arrow,0,625,435,32,32);
        if (scr_hit(625,435,657,467)=true){obj_cursor.image_index=1;if (cooldown&lt;=0) and (custom=2) and (purity&gt;1) and (mouse_left&gt;=1){purity-=1;points-=10;cooldown=8000;}}
        if (custom=2) then draw_sprite_stretched(spr_arrow,0,625,490,32,32);
        if (scr_hit(625,490,657,522)=true){obj_cursor.image_index=1;if (cooldown&lt;=0) and (custom=2) and (stability&gt;1) and (mouse_left&gt;=1){stability-=1;points-=10;cooldown=8000;}}
        
        if (custom=2) then draw_sprite_stretched(spr_arrow,1,1135,325,32,32);
        if (scr_hit(1135,325,1167,357)=true){obj_cursor.image_index=1;if (cooldown&lt;=0) and (custom=2) and (strength&lt;10) and (points+10&lt;=maxpoints) and (mouse_left&gt;=1){strength+=1;points+=10;cooldown=8000;}}
        if (custom=2) then draw_sprite_stretched(spr_arrow,1,1135,380,32,32);
        if (scr_hit(1135,380,1167,412)=true){obj_cursor.image_index=1;if (cooldown&lt;=0) and (custom=2) and (cooperation&lt;10) and (points+10&lt;=maxpoints) and (mouse_left&gt;=1){cooperation+=1;points+=10;cooldown=8000;}}
        if (custom=2) then draw_sprite_stretched(spr_arrow,1,1135,435,32,32);
        if (scr_hit(1135,435,1167,467)=true){obj_cursor.image_index=1;if (cooldown&lt;=0) and (custom=2) and (purity&lt;10) and (points+10&lt;=maxpoints) and (mouse_left&gt;=1){purity+=1;points+=10;cooldown=8000;}}
        if (custom=2) then draw_sprite_stretched(spr_arrow,1,1135,490,32,32);
        if (scr_hit(1135,490,1167,522)=true){obj_cursor.image_index=1;if (cooldown&lt;=0) and (custom=2) and (stability&lt;10) and (points+10&lt;=maxpoints) and (mouse_left&gt;=1){stability+=1;points+=10;cooldown=8000;}}
        
        if (scr_hit(532,325,1166,357)=true){tooltip="Strength";tooltip2="How many companies your "+string(obj_img.player_army)+" begins with.  For every score below five a company will be removed; conversely, each score higher grants 50 additional astartes.";}
        if (scr_hit(486,380,1166,412)=true){tooltip="Cooperation";tooltip2="How diplomatic your "+string(obj_img.player_army)+" is.  A low score will lower starting dispositions of Imperial factions and make disposition increases less likely to occur.";}
        if (scr_hit(442,435,1166,467)=true){tooltip="Purity";tooltip2="A measure of how pure and mutation-free your "+string(obj_img.player_army)+"'s "+string(obj_img.organics)+" is.  A perfect score means no mutations must be chosen.  The lower the score, the more mutations.";}
        if (scr_hit(423,490,1166,522)=true){tooltip="Stability";tooltip2="A measure of how easily new mutations and corruption can occur with your "+string(obj_img.player_army)+" "+string(obj_img.organics)+".  A perfect score makes the "+string(obj_img.organics)+" almost perfectly stable.";}
        
        draw_rectangle(668,330,1125,351,1);
        draw_rectangle(668,330,668+(strength*45.7),351,0);
        draw_rectangle(668,385,1125,406,1);
        draw_rectangle(668,385,668+(cooperation*45.7),406,0);
        draw_rectangle(668,440,1125,461,1);
        draw_rectangle(668,440,668+(purity*45.7),461,0);
        draw_rectangle(668,495,1125,516,1);
        draw_rectangle(668,495,668+(stability*45.7),516,0);
    }
    
    if (popup!="icons"){
        draw_line(445,551,1125,551);
        draw_line(445,552,1125,552);
        draw_line(445,553,1125,553);
    }
    
    if (popup!="") or (custom&lt;2) then draw_set_alpha(0.5);
    
    
    if (popup!="icons"){
        draw_set_halign(fa_left);draw_set_font(fnt_40k_30b);
        draw_text_transformed(436,564,string(obj_img.player_army)+" Advantages",0.5,0.5,0);draw_set_font(fnt_40k_14);
        if (adv_num[1]=0) then draw_text(436,590,"[+]");if (adv_num[1]&gt;0) then draw_text(436,590,"[-] "+string(adv[1]));
        if (adv_num[2]=0) and (adv_num[1]&gt;0) then draw_text(436,610,"[+]");if (adv_num[2]&gt;0) then draw_text(436,610,"[-] "+string(adv[2]));
        if (adv_num[3]=0) and (adv_num[2]&gt;0) then draw_text(436,630,"[+]");if (adv_num[3]&gt;0) then draw_text(436,630,"[-] "+string(adv[3]));
        if (adv_num[4]=0) and (adv_num[3]&gt;0) then draw_text(436,650,"[+]");if (adv_num[4]&gt;0) then draw_text(436,650,"[-] "+string(adv[4]));
        
        draw_set_font(fnt_40k_30b);draw_text_transformed(810,564,string(obj_img.player_army)+" Disadvantages",0.5,0.5,0);draw_set_font(fnt_40k_14);
        if (dis_num[1]=0) then draw_text(810,590,"[+]");if (dis_num[1]&gt;0) then draw_text(810,590,"[-] "+string(dis[1]));
        if (dis_num[2]=0) and (dis_num[1]&gt;0) then draw_text(810,610,"[+]");if (dis_num[2]&gt;0) then draw_text(810,610,"[-] "+string(dis[2]));
        if (dis_num[3]=0) and (dis_num[2]&gt;0) then draw_text(810,630,"[+]");if (dis_num[3]&gt;0) then draw_text(810,630,"[-] "+string(dis[3]));
        if (dis_num[4]=0) and (dis_num[3]&gt;0) then draw_text(810,650,"[+]");if (dis_num[4]&gt;0) then draw_text(810,650,"[-] "+string(dis[4]));
        
        if (scr_hit(436,564,631,583)=true){tooltip=string(obj_img.player_army)+" Advantages";tooltip2="Advantages cost 20 points, and improve the performance of your "+string(obj_img.player_army)+" in a specific domain.";}
        if (scr_hit(810,564,1030,583)=true){tooltip=string(obj_img.player_army)+" Disadvantages";tooltip2="Disadvantages Grant 20 additional points, and penalize the performance of your "+string(obj_img.player_army)+".";}
    }
    
    if (popup!="icons"){
        if (scr_hit(436,590,640,619)=true){
            if (adv_num[1]!=0){tooltip=advantage[adv_num[1]];tooltip2=advantage_tooltip[adv_num[1]];}
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (points+20&lt;=maxpoints) and (adv_num[1]=0) and (popup="") and (custom&gt;1){popup="advantages";cooldown=8000;temp=1;}
            if (mouse_left&gt;=1) and (mouse_x&lt;=456) and (adv_num[1]&gt;0) and (adv_num[2]=0) and (cooldown&lt;=0) and (custom&gt;1){points-=20;adv[1]="";adv_num[1]=0;cooldown=8000;}
        }
        if (scr_hit(436,610,640,639)=true){
            if (adv_num[2]!=0){tooltip=advantage[adv_num[2]];tooltip2=advantage_tooltip[adv_num[2]];}
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (points+20&lt;=maxpoints) and (adv_num[2]=0) and (adv_num[1]!=0) and (popup="") and (custom&gt;1){popup="advantages";cooldown=8000;temp=2;}
            if (mouse_left&gt;=1) and (mouse_x&lt;=456) and (adv_num[2]&gt;0) and (adv_num[3]=0) and (cooldown&lt;=0) and (custom&gt;1){points-=20;adv[2]="";adv_num[2]=0;cooldown=8000;}
        }
        if (scr_hit(436,630,640,659)=true){
            if (adv_num[3]!=0){tooltip=advantage[adv_num[3]];tooltip2=advantage_tooltip[adv_num[3]];}
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (points+20&lt;=maxpoints) and (adv_num[3]=0) and (adv_num[2]!=0) and (popup="") and (custom&gt;1){popup="advantages";cooldown=8000;temp=3;}
            if (mouse_left&gt;=1) and (mouse_x&lt;=456) and (adv_num[3]&gt;0) and (adv_num[4]=0) and (cooldown&lt;=0) and (custom&gt;1){points-=20;adv[3]="";adv_num[3]=0;cooldown=8000;}
        }
        if (scr_hit(436,650,640,679)=true){
            if (adv_num[4]!=0){tooltip=advantage[adv_num[4]];tooltip2=advantage_tooltip[adv_num[4]];}
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (points+20&lt;=maxpoints) and (adv_num[4]=0) and (adv_num[3]!=0) and (popup="") and (custom&gt;1){popup="advantages";cooldown=8000;temp=4;}
            if (mouse_left&gt;=1) and (mouse_x&lt;=456) and (adv_num[4]&gt;0) and (cooldown&lt;=0) and (custom&gt;1){points-=20;adv[4]="";adv_num[4]=0;cooldown=8000;}
        }
        
        if (scr_hit(810,590,1014,619)=true){
            if (dis_num[1]!=0){tooltip=disadvantage[dis_num[1]];tooltip2=dis_tooltip[dis_num[1]];}
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (dis_num[1]=0) and (dis_num[2]=0) and (popup="") and (custom&gt;1){popup="disadvantages";cooldown=8000;temp=1;}
            if (mouse_left&gt;=1) and (mouse_x&lt;=830) and (dis_num[1]&gt;0) and (dis_num[2]=0) and (cooldown&lt;=0) and (points+20&lt;=maxpoints) and (custom&gt;1){points+=20;dis[1]="";dis_num[1]=0;cooldown=8000;}
        }
        if (scr_hit(810,610,1014,639)=true){
            if (dis_num[2]!=0){tooltip=disadvantage[dis_num[2]];tooltip2=dis_tooltip[dis_num[2]];}
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (dis_num[2]=0) and (dis_num[3]=0) and (dis_num[1]&gt;0) and (popup="") and (custom&gt;1){popup="disadvantages";cooldown=8000;temp=2;}
            if (mouse_left&gt;=1) and (mouse_x&lt;=830) and (dis_num[2]&gt;0) and (dis_num[3]=0) and (cooldown&lt;=0) and (points+20&lt;=maxpoints) and (custom&gt;1){points+=20;dis[2]="";dis_num[2]=0;cooldown=8000;}
        }
        if (scr_hit(810,630,1014,659)=true){
            if (dis_num[3]!=0){tooltip=disadvantage[dis_num[3]];tooltip2=dis_tooltip[dis_num[3]];}
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (dis_num[3]=0) and (dis_num[4]=0) and (dis_num[2]&gt;0) and (popup="") and (custom&gt;1){popup="disadvantages";cooldown=8000;temp=3;}
            if (mouse_left&gt;=1) and (mouse_x&lt;=830) and (dis_num[3]&gt;0) and (dis_num[4]=0) and (cooldown&lt;=0) and (points+20&lt;=maxpoints) and (custom&gt;1){points+=20;dis[3]="";dis_num[3]=0;cooldown=8000;}
        }
        if (scr_hit(810,650,1014,679)=true){
            if (dis_num[4]!=0){tooltip=disadvantage[dis_num[4]];tooltip2=dis_tooltip[dis_num[4]];}
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (dis_num[4]=0) and (popup="") and (dis_num[3]&gt;0) and (custom&gt;1){popup="disadvantages";cooldown=8000;temp=4;}
            if (mouse_left&gt;=1) and (mouse_x&lt;=830) and (dis_num[4]&gt;0) and (cooldown&lt;=0) and (points+20&lt;=maxpoints) and (custom&gt;1){points+=20;dis[4]="";dis_num[4]=0;cooldown=8000;}
        }
        
        draw_set_alpha(1);
    }
    
    
    
    if (popup="icons"){
        draw_set_alpha(1);
        draw_set_color(0);
        draw_rectangle(450,206,1144,711,0);
        
        draw_set_color(38144);
        draw_line(445,727,1125,727);
        draw_line(445,728,1125,728);
        draw_line(445,729,1125,729);
        
        draw_set_font(fnt_40k_30b);draw_set_halign(fa_center);
        draw_text_transformed(800,211,"Select an Icon",0.6,0.6,0);
        draw_text_transformed(800,687,"Cancel",0.6,0.6,0);
        
        var cw,ch;
        cw=string_width("Cancel")*0.6;
        ch=string_height("Cancel")*0.6;
        
        if (scr_hit(800,687,800+cw,687+ch)=true){
            draw_set_color(c_white);draw_set_alpha(0.25);
            draw_text_transformed(800,687,"Cancel",0.6,0.6,0);
            draw_set_color(38144);draw_set_alpha(1);
            
            if (mouse_left=1) and (cooldown&lt;=0){
                cooldown=8000;popup="";
            }
        }
        
        draw_set_font(fnt_40k_14b);draw_set_halign(fa_left);
        
        // repeat here
        
        var i,ic,x3,y3,row;
        i=0;ic=icons_top-1;x3=445-110;y3=245;row=0;
        
        repeat(24){
            i+=1;ic+=1;row+=1;
            
            if (row=7){
                row=1;x3=445-110;y3+=110;
            }
            
            x3+=110;
            
            if (ic&lt;=(76+global.custom_icons)){
                // if (ic=21) then ic=23;
                
                // draw_rectangle(x3,y3,x3+96,y3+96,0);
                // if (ic&lt;=20) then draw_sprite_stretched(spr_icon,ic,x3,y3,96,96);
                if (ic&lt;=20) then scr_image("creation",ic,x3,y3,96,96);
                if (ic&gt;20) and (ic&lt;=76) then draw_sprite_stretched(spr_icon_other,ic-19,x3,y3,96,96);
                if (ic&gt;76) and (obj_cuicons.spr_custom[ic-76]&gt;0) and (obj_cuicons.spr_custom_icon[ic-76]!=-1){
                    draw_sprite_stretched(obj_cuicons.spr_custom_icon[ic-76],0,x3,y3,96,96);
                }
                
                if (scr_hit(x3,y3,x3+96,y3+96)=true){
                    draw_set_blend_mode(bm_add);draw_set_alpha(0.25);draw_set_color(16119285);
                    // if (ic&lt;=20) then draw_sprite_stretched(spr_icon,ic,x3,y3,96,96);
                    if (ic&lt;=20) then scr_image("creation",ic,x3,y3,96,96);
                    if (ic&gt;20) and (ic&lt;=76) then draw_sprite_stretched(spr_icon_other,ic-19,x3,y3,96,96);
                    if (ic&gt;76) and (obj_cuicons.spr_custom[ic-76]&gt;0) and (obj_cuicons.spr_custom_icon[ic-76]!=-1){
                        draw_sprite_stretched(obj_cuicons.spr_custom_icon[ic-76],0,x3,y3,96,96);
                    }
                    draw_set_blend_mode(bm_normal);
                    draw_set_alpha(1);draw_set_color(38144);
                    
                    if (mouse_left=1) and (cooldown&lt;=0){
                        cooldown=8000;popup="";icon=ic;icon_name="";scr_icon("");
                        if (ic&gt;76) then custom_icon=ic-76;
                        // show_message(string(icon_name));
                    }
                    
                }
                
                // draw_set_color(c_orange);
                // draw_text(x3+48,y3+64,string(ic));
                draw_set_color(38144);
            }
            
        }
        
        
        var x1,x2,x3,x4,x5,x6,y1,y2,y3,y4,y5,y6,bs,see_size,total_max,current,top;
        
        x1=1111;y1=245;x2=1131;y2=671;bs=245;
        draw_rectangle(x1,y1,x2,y2,1);
        
        total_max=77+global.custom_icons;
        see_size=(671-245)/total_max;
        
        x3=1111;x4=1131;
        current=icons_top;
        top=current*see_size;
        y3=top;y4=y3+(24*see_size)-see_size;
        
        
        if (scrollbar_engaged=0) then draw_rectangle(x3,y3+bs,x4,y4+bs,0);
        
        if (scrollbar_engaged&gt;0){
            y3=mouse_y-scrollbar_engaged;
            // y3=mouse_y-scrollbar_engaged
            y4=y3+(24*see_size);
            
            if (y3&lt;y1){y3=y1;y4=y3+(24*see_size);}
            if (y4&gt;y2){y4=y2;y3=y2-(24*see_size);}
            
            draw_rectangle(x3,y3,x4,y4,0);
        }
        
        
        if (scr_hit(x3,y3+bs,x4,y4+bs)=true) and (cooldown&lt;=0) and (scrollbar_engaged&lt;=0) and (mouse_left=1){// Click within the scrollbar grip area
            scrollbar_engaged=mouse_y-(y3+bs);cooldown=8000;
        }
        
        
        
    }
    
    
    
    
    if (popup="advantages"){
        draw_set_font(fnt_40k_30b);draw_set_halign(fa_center);
        draw_text_transformed(800,211,"Select an Advantage",0.6,0.6,0);
        draw_set_font(fnt_40k_14b);draw_set_halign(fa_left);
        
        var i,ha,ha2,disable;i=0;ha=string(adv[1])+string(adv[2])+string(adv[3])+string(adv[4]);ha2=string(dis[1])+string(dis[2])+string(dis[3])+string(dis[4]);
        repeat(14){i+=1;disable=0;
            if (advantage[i]!=""){
                draw_set_color(38144);draw_set_alpha(1);if (string_count(advantage[i],ha)&gt;0) then draw_set_alpha(0.5);
                
                if (advantage[i]=string(obj_img.magic_men)+" Abundance") and (string_count(string(obj_img.magic_men)+" Intolerant",ha2)&gt;0){disable=1;draw_set_alpha(0.5);} 
                if (advantage[i]="Reverent Guardians") and (string_count("Suspicious",ha2)&gt;0){disable=1;draw_set_alpha(0.5);} 
                if (advantage[i]="Tech-Brothers") and (string_count("Tech-Heresy",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                
                draw_text(436,230+(i*20),advantage[i]);
                
                if (scr_hit(436,230+(i*20),436+string_width(advantage[i]),249+(i*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (advantage[i]="Cancel"){
                    cooldown=8000;popup="";
                }
                if (scr_hit(436,230+(i*20),436+string_width(advantage[i]),249+(i*20))=true){tooltip=advantage[i];tooltip2=advantage_tooltip[i];draw_set_color(c_white);draw_set_alpha(0.2);draw_text(436,230+(i*20),advantage[i]);}
                if (scr_hit(436,230+(i*20),436+string_width(advantage[i]),249+(i*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (string_count(advantage[i],ha)=0){
                    if (disable=0){cooldown=8000;adv[temp]=advantage[i];adv_num[temp]=i;popup="";points+=20;}
        }}}
        repeat(14){i+=1;disable=0;
            if (advantage[i]!=""){
                draw_set_color(38144);draw_set_alpha(1);if (string_count(advantage[i],ha)&gt;0) then draw_set_alpha(0.5);
                
                if (advantage[i]=string(obj_img.magic_men)+" Abundance") and (string_count(string(obj_img.magic_men)+" Intolerant",ha2)&gt;0){disable=1;draw_set_alpha(0.5);} 
                if (advantage[i]="Reverent Guardians") and (string_count("Suspicious",ha2)&gt;0){disable=1;draw_set_alpha(0.5);} 
                if (advantage[i]="Tech-Brothers") and (string_count("Tech-Heresy",ha2)&gt;0){disable=1;draw_set_alpha(0.5);} 
                
                draw_text(670,230+((i-14)*20),advantage[i]);
                
                if (scr_hit(670,230+((i-14)*20),670+string_width(advantage[i]),249+((i-14)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (advantage[i]="Cancel"){
                    cooldown=8000;popup="";
                }
                if (scr_hit(670,230+((i-14)*20),670+string_width(advantage[i]),249+((i-14)*20))=true){tooltip=advantage[i];tooltip2=advantage_tooltip[i];draw_set_color(c_white);draw_set_alpha(0.2);draw_text(670,230+((i-14)*20),advantage[i]);}
                if (scr_hit(670,230+((i-14)*20),670+string_width(advantage[i]),249+((i-14)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (string_count(advantage[i],ha)=0){
                    if (disable=0){cooldown=8000;adv[temp]=advantage[i];adv_num[temp]=i;popup="";points+=20;}
        }}}
        repeat(14){i+=1;disable=0;
            if (advantage[i]!=""){
                draw_set_color(38144);draw_set_alpha(1);if (string_count(advantage[i],ha)&gt;0) then draw_set_alpha(0.5);
                
                if (advantage[i]=string(obj_img.magic_men)+" Abundance") and (string_count(string(obj_img.magic_men)+" Intolerant",ha2)&gt;0){disable=1;draw_set_alpha(0.5);} 
                if (advantage[i]="Reverent Guardians") and (string_count("Suspicious",ha2)&gt;0){disable=1;draw_set_alpha(0.5);} 
                if (advantage[i]="Tech-Brothers") and (string_count("Tech-Heresy",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                
                draw_text(904,230+((i-28)*20),advantage[i]);
                
                if (scr_hit(904,230+((i-28)*20),904+string_width(advantage[i]),249+((i-28)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (advantage[i]="Cancel"){
                    cooldown=8000;popup="";
                }
                if (scr_hit(904,230+((i-28)*20),904+string_width(advantage[i]),249+((i-28)*20))=true){tooltip=advantage[i];tooltip2=advantage_tooltip[i];draw_set_color(c_white);draw_set_alpha(0.2);draw_text(904,230+((i-28)*20),advantage[i]);}
                if (scr_hit(904,230+((i-28)*20),904+string_width(advantage[i]),249+((i-28)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (string_count(advantage[i],ha)&gt;0){
                    if (disable=0){cooldown=8000;adv[temp]=advantage[i];adv_num[temp]=i;popup="";points+=20;}
        }}}
    }
    /*if (popup="advantages"){
        draw_set_font(fnt_40k_30b);draw_set_halign(fa_center);
        draw_text_transformed(800,211,"Select an Advantage",0.6,0.6,0);
        draw_set_font(fnt_40k_14b);draw_set_halign(fa_left);
        
        var i;i=0;
        repeat(14){i+=1;
            if (advantage[i]!=""){
                draw_text(436,230+(i*20),advantage[i]);
                if (scr_hit(436,230+(i*20),436+string_width(advantage[i]),249+(i*20))=true){tooltip=advantage[i];tooltip2=advantage_tooltip[i];}
                if (scr_hit(436,230+(i*20),436+string_width(advantage[i]),249+(i*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1){
                    cooldown=8000;adv[temp]=advantage[i];adv_num[temp]=i;popup="";points+=20;
        }}}
        repeat(14){i+=1;
            if (advantage[i]!=""){
                draw_text(670,230+((i-14)*20),advantage[i]);
                if (scr_hit(670,230+((i-14)*20),670+string_width(advantage[i]),249+((i-14)*20))=true){tooltip=advantage[i];tooltip2=advantage_tooltip[i];}
                if (scr_hit(670,230+((i-14)*20),670+string_width(advantage[i]),249+((i-14)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1){
                    cooldown=8000;adv[temp]=advantage[i];adv_num[temp]=i;popup="";points+=20;
        }}}
        repeat(14){i+=1;
            if (advantage[i]!=""){
                draw_text(904,230+((i-28)*20),advantage[i]);
                if (scr_hit(904,230+((i-28)*20),904+string_width(advantage[i]),249+((i-28)*20))=true){tooltip=advantage[i];tooltip2=advantage_tooltip[i];}
                if (scr_hit(904,230+((i-28)*20),904+string_width(advantage[i]),249+((i-28)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1){
                    cooldown=8000;adv[temp]=advantage[i];adv_num[temp]=i;popup="";points+=20;
        }}}
    }*/
    if (popup="disadvantages"){
        draw_set_font(fnt_40k_30b);draw_set_halign(fa_center);
        draw_text_transformed(800,211,"Select a Disadvantage",0.6,0.6,0);
        draw_set_font(fnt_40k_14b);draw_set_halign(fa_left);
        
        var i,ha,ha2,disable;i=0;ha=string(dis[1])+string(dis[2])+string(dis[3])+string(dis[4]);ha2=string(adv[1])+string(adv[2])+string(adv[3])+string(adv[4]);
        repeat(14){i+=1;disable=0;
            if (disadvantage[i]!=""){
                draw_set_color(38144);draw_set_alpha(1);if (string_count(disadvantage[i],ha)&gt;0) then draw_set_alpha(0.5);
                
                if (disadvantage[i]=string(obj_img.magic_men)+" Intolerant") and (string_count(string(obj_img.magic_men)+" Abundance",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                if (disadvantage[i]="Suspicious") and (string_count("Reverent Guardians",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                if (disadvantage[i]="Tech-Heresy") and (string_count("Tech-Brothers",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                if (disadvantage[i]="Blood Debt") and (fleet_type=3){disable=1;draw_set_alpha(0.5);}
                
                draw_text(436,230+(i*20),disadvantage[i]);
                
                if (scr_hit(436,230+(i*20),436+string_width(disadvantage[i]),249+(i*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (disadvantage[i]="Cancel"){
                    cooldown=8000;popup="";
                }
                if (scr_hit(436,230+(i*20),436+string_width(disadvantage[i]),249+(i*20))=true){tooltip=disadvantage[i];tooltip2=dis_tooltip[i];draw_set_color(c_white);draw_set_alpha(0.2);draw_text(436,230+(i*20),disadvantage[i]);}
                if (scr_hit(436,230+(i*20),436+string_width(disadvantage[i]),249+(i*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (string_count(disadvantage[i],ha)=0){
                    if (disable=0){cooldown=8000;dis[temp]=disadvantage[i];dis_num[temp]=i;popup="";points-=20;}
        }}}
        repeat(14){i+=1;disable=0;
            if (disadvantage[i]!=""){
                draw_set_color(38144);draw_set_alpha(1);if (string_count(disadvantage[i],ha)&gt;0) then draw_set_alpha(0.5);
                
                if (disadvantage[i]=string(obj_img.magic_men)+" Intolerant") and (string_count(string(obj_img.magic_men)+" Abundance",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                if (disadvantage[i]="Suspicious") and (string_count("Reverent Guardians",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                if (disadvantage[i]="Tech-Heresy") and (string_count("Tech-Brothers",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                if (disadvantage[i]="Blood Debt") and (fleet_type=3){disable=1;draw_set_alpha(0.5);}
                
                draw_text(670,230+((i-14)*20),disadvantage[i]);
                if (scr_hit(670,230+((i-14)*20),670+string_width(disadvantage[i]),249+((i-14)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (disadvantage[i]="Cancel"){
                    cooldown=8000;popup="";
                }
                if (scr_hit(670,230+((i-14)*20),670+string_width(disadvantage[i]),249+((i-14)*20))=true){tooltip=disadvantage[i];tooltip2=dis_tooltip[i];draw_set_color(c_white);draw_set_alpha(0.2);draw_text(670,230+((i-14)*20),disadvantage[i]);}
                if (scr_hit(670,230+((i-14)*20),670+string_width(disadvantage[i]),249+((i-14)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (string_count(disadvantage[i],ha)=0){
                    if (disable=0){cooldown=8000;dis[temp]=disadvantage[i];dis_num[temp]=i;popup="";points-=20;}
        }}}
        repeat(14){i+=1;disable=0;
            if (disadvantage[i]!=""){
                draw_set_color(38144);draw_set_alpha(1);if (string_count(disadvantage[i],ha)&gt;0) then draw_set_alpha(0.5);
                
                if (disadvantage[i]=string(obj_img.magic_men)+" Intolerant") and (string_count(string(obj_img.magic_men)+" Abundance",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                if (disadvantage[i]="Suspicious") and (string_count("Reverent Guardians",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                if (disadvantage[i]="Tech-Heresy") and (string_count("Tech-Brothers",ha2)&gt;0){disable=1;draw_set_alpha(0.5);}
                if (disadvantage[i]="Blood Debt") and (fleet_type=3){disable=1;draw_set_alpha(0.5);}
                
                draw_text(904,230+((i-28)*20),disadvantage[i]);
                if (scr_hit(904,230+((i-28)*20),904+string_width(disadvantage[i]),249+((i-28)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (disadvantage[i]="Cancel"){
                    cooldown=8000;popup="";
                }
                if (scr_hit(904,230+((i-28)*20),904+string_width(disadvantage[i]),249+((i-28)*20))=true){tooltip=disadvantage[i];tooltip2=dis_tooltip[i];draw_set_color(c_white);draw_set_alpha(0.2);draw_text(904,230+((i-28)*20),disadvantage[i]);}
                if (scr_hit(904,230+((i-28)*20),904+string_width(disadvantage[i]),249+((i-28)*20))=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (string_count(disadvantage[i],ha)=0){
                    if (disable=0){cooldown=8000;dis[temp]=disadvantage[i];dis_num[temp]=i;popup="";points-=20;}
        }}}
    }
    if (popup!="") and ((mouse_left&gt;=1) or (mouse_right=1)) and (cooldown&lt;=0){
        if ((mouse_x&lt;445) or (mouse_x&gt;1125) or (mouse_y&lt;200) or (mouse_y&gt;552)) and (popup!="icons"){
            cooldown=8000;popup="";
        }
        if ((mouse_x&lt;445) or (mouse_x&gt;1125) or (mouse_y&lt;200) or (mouse_y&gt;719)) and (popup="icons"){
            cooldown=8000;popup="";
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var yar;yar=0;

if (slide=3){
    draw_set_color(38144);
    draw_set_font(fnt_40k_30b);
    draw_set_halign(fa_center);
    
    tooltip="";tooltip2="";
    obj_cursor.image_index=0;
    
    draw_text(800,80,string(chapter));
    
    draw_set_color(38144);
    draw_line(445,200,1125,200);
    draw_line(445,201,1125,201);
    draw_line(445,202,1125,202);
    
    
    
    
    
    if (fleet_type=1) then draw_text_transformed(644,218,"Homeworld",0.6,0.6,0);
    if (fleet_type!=1) then draw_text_transformed(644,218,"Flagship",0.6,0.6,0);
    var eh,eh2;eh=0;eh2=0;name_bad=0;
    
    if (homeworld="Lava") then eh=0;
    if (homeworld="Desert") then eh=2;
    if (homeworld="Forge") then eh=3;
    if (homeworld="Hive") then eh=4;
    if (homeworld="Death") then eh=5;
    if (homeworld="Agri") then eh=6;
    if (homeworld="Feudal") then eh=7;
    if (homeworld="Temperate") then eh=8;
    if (homeworld="Ice") then eh=9;
    if (homeworld="Dead") then eh=10;
    if (homeworld="Shrine") then eh=16;
    if (fleet_type!=1) then eh=15;
    
    if (fleet_type=1){
        scr_image("planet",eh,580,244,128,128);
        // draw_sprite(spr_planet_splash,eh,580,244);
        
        draw_text_transformed(644,378,string(homeworld),0.5,0.5,0);
        // draw_text_transformed(644,398,string(homeworld_name),0.5,0.5,0);
        if (text_selected!="home_name") or (custom&lt;2) then draw_text_transformed(644,398,string(homeworld_name),0.5,0.5,0);
        if (custom&gt;1){
            if (text_selected="home_name") and (text_bar&gt;30) then draw_text_transformed(644,398,string(homeworld_name),0.5,0.5,0);
            if (text_selected="home_name") and (text_bar&lt;=30) then draw_text_transformed(644,398,string(homeworld_name)+"|",0.5,0.5,0);
            if (scr_text_hit(644,398,true,homeworld_name)=true){
                obj_cursor.image_index=2;
                if (cooldown&lt;=0) and (mouse_left&gt;=1){text_selected="home_name";cooldown=8000;keyboard_string=homeworld_name;}
            }
            if (text_selected="home_name") then homeworld_name=keyboard_string;
            draw_set_alpha(0.75);draw_rectangle(525,398,760,418,1);draw_set_alpha(1);
        }
        
        if (custom&gt;1) then draw_sprite_stretched(spr_creation_arrow,0,525,285,32,32);// Left Arrow
        if (scr_hit(525,285,525+32,285+32)=true) and (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){
            var onceh;onceh=0;cooldown=8000;
            if (homeworld="Dead") and (onceh=0){homeworld="Ice";onceh=1;}
            if (homeworld="Ice") and (onceh=0){homeworld="Temperate";onceh=1;}
            if (homeworld="Temperate") and (onceh=0){homeworld="Feudal";onceh=1;}
            if (homeworld="Feudal") and (onceh=0){homeworld="Shrine";onceh=1;}
            if (homeworld="Shrine") and (onceh=0){homeworld="Agri";onceh=1;}
            if (homeworld="Agri") and (onceh=0){homeworld="Death";onceh=1;}
            if (homeworld="Death") and (onceh=0){homeworld="Hive";onceh=1;}
            if (homeworld="Hive") and (onceh=0){homeworld="Forge";onceh=1;}
            if (homeworld="Forge") and (onceh=0){homeworld="Desert";onceh=1;}
            if (homeworld="Desert") and (onceh=0){homeworld="Lava";onceh=1;}
            if (homeworld="Lava") and (onceh=0){homeworld="Dead";onceh=1;}
        }
        if (custom&gt;1) then draw_sprite_stretched(spr_creation_arrow,1,725,285,32,32);// Right Arrow
        if (scr_hit(725,285,725+32,285+32)=true) and (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){
            var onceh;onceh=0;cooldown=8000;
            if (homeworld="Lava") and (onceh=0){homeworld="Desert";onceh=1;}
            if (homeworld="Desert") and (onceh=0){homeworld="Forge";onceh=1;}
            if (homeworld="Forge") and (onceh=0){homeworld="Hive";onceh=1;}
            if (homeworld="Hive") and (onceh=0){homeworld="Death";onceh=1;}
            if (homeworld="Death") and (onceh=0){homeworld="Agri";onceh=1;}
            if (homeworld="Agri") and (onceh=0){homeworld="Shrine";onceh=1;}
            if (homeworld="Shrine") and (onceh=0){homeworld="Feudal";onceh=1;}
            if (homeworld="Feudal") and (onceh=0){homeworld="Temperate";onceh=1;}
            if (homeworld="Temperate") and (onceh=0){homeworld="Ice";onceh=1;}
            if (homeworld="Ice") and (onceh=0){homeworld="Dead";onceh=1;}
            if (homeworld="Dead") and (onceh=0){homeworld="Lava";onceh=1;}
        }
    }
    if (fleet_type!=1){
        // draw_sprite(spr_planet_splash,eh,580,244);
        scr_image("planet",eh,580,244,128,128);
        
        draw_text_transformed(644,378,string(obj_img.ship[1,1]),0.5,0.5,0);
        // draw_text_transformed(644,398,string(homeworld_name),0.5,0.5,0);
        if (text_selected!="flagship_name") or (custom=0) then draw_text_transformed(644,398,string(flagship_name),0.5,0.5,0);
        if (custom&gt;1){
            if (text_selected="flagship_name") and (text_bar&gt;30) then draw_text_transformed(644,398,string(flagship_name),0.5,0.5,0);
            if (text_selected="flagship_name") and (text_bar&lt;=30) then draw_text_transformed(644,398,string(flagship_name)+"|",0.5,0.5,0);
            if (scr_text_hit(644,398,true,flagship_name)=true){
                obj_cursor.image_index=2;
                if (cooldown&lt;=0) and (mouse_left&gt;=1){text_selected="flagship_name";cooldown=8000;keyboard_string=flagship_name;}
            }
            if (text_selected="flagship_name") then flagship_name=keyboard_string;
            draw_set_alpha(0.75);draw_rectangle(525,398,760,418,1);draw_set_alpha(1);
        }
    }
    
    
    
    
    
    if (fleet_type!=3){
        if (fleet_type!=1) or (custom&lt;2) then draw_set_alpha(0.5);
        yar=0;if (recruiting_exists=1) then yar=1;draw_sprite(spr_creation_check,yar,858,221);yar=0;
        if (scr_hit(858,221,858+32,221+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (fleet_type=1){cooldown=8000;var onceh;onceh=0;
            if (recruiting_exists=1) and (onceh=0){recruiting_exists=0;onceh=1;}
            if (recruiting_exists=0) and (onceh=0){recruiting_exists=1;onceh=1;}
        }
        draw_set_alpha(1);draw_text_transformed(644+333,218,"Recruiting World",0.6,0.6,0);
        
        if (recruiting_exists=1){
            if (recruiting="Lava") then eh2=0;
            if (recruiting="Desert") then eh2=2;
            if (recruiting="Forge") then eh2=3;
            if (recruiting="Hive") then eh2=4;
            if (recruiting="Death") then eh2=5;
            if (recruiting="Agri") then eh2=6;
            if (recruiting="Feudal") then eh2=7;
            if (recruiting="Temperate") then eh2=8;
            if (recruiting="Ice") then eh2=9;
            if (recruiting="Dead") then eh2=10;
            if (recruiting="Shrine") then eh2=16;
            
            if (custom&gt;1) then draw_sprite_stretched(spr_creation_arrow,0,865,285,32,32);// Left Arrow
            if (scr_hit(865,285,865+32,285+32)=true) and (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){
                var onceh;onceh=0;cooldown=8000;
                if (recruiting="Dead") and (onceh=0){recruiting="Ice";onceh=1;}
                if (recruiting="Ice") and (onceh=0){recruiting="Temperate";onceh=1;}
                if (recruiting="Temperate") and (onceh=0){recruiting="Feudal";onceh=1;}
                if (recruiting="Feudal") and (onceh=0){recruiting="Shrine";onceh=1;}
                if (recruiting="Shrine") and (onceh=0){recruiting="Agri";onceh=1;}
                if (recruiting="Agri") and (onceh=0){recruiting="Death";onceh=1;}
                if (recruiting="Death") and (onceh=0){recruiting="Hive";onceh=1;}
                if (recruiting="Hive") and (onceh=0){recruiting="Forge";onceh=1;}
                if (recruiting="Forge") and (onceh=0){recruiting="Desert";onceh=1;}
                if (recruiting="Desert") and (onceh=0){recruiting="Lava";onceh=1;}
                if (recruiting="Lava") and (onceh=0){recruiting="Dead";onceh=1;}
            }
            if (custom&gt;1) then draw_sprite_stretched(spr_creation_arrow,1,1055,285,32,32);// Right Arrow
            if (scr_hit(1055,285,1055+32,285+32)=true) and (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){
                var onceh;onceh=0;cooldown=8000;
                if (recruiting="Dead") and (onceh=0){recruiting="Lava";onceh=1;}
                if (recruiting="Lava") and (onceh=0){recruiting="Desert";onceh=1;}
                if (recruiting="Desert") and (onceh=0){recruiting="Forge";onceh=1;}
                if (recruiting="Forge") and (onceh=0){recruiting="Hive";onceh=1;}
                if (recruiting="Hive") and (onceh=0){recruiting="Death";onceh=1;}
                if (recruiting="Death") and (onceh=0){recruiting="Agri";onceh=1;}
                if (recruiting="Agri") and (onceh=0){recruiting="Shrine";onceh=1;}
                if (recruiting="Shrine") and (onceh=0){recruiting="Feudal";onceh=1;}
                if (recruiting="Feudal") and (onceh=0){recruiting="Temperate";onceh=1;}
                if (recruiting="Temperate") and (onceh=0){recruiting="Ice";onceh=1;}
                if (recruiting="Ice") and (onceh=0){recruiting="Dead";onceh=1;}
            }
            
            // draw_sprite(spr_planet_splash,eh2,580+333,244);
            scr_image("planet",eh2,580+333,244,128,128);
            
            draw_text_transformed(644+333,378,string(recruiting),0.5,0.5,0);
            // draw_text_transformed(644+333,398,string(recruiting_name),0.5,0.5,0);
            
            if (fleet_type=1) and (homeworld_name=recruiting_name) then name_bad=1;
            
            if (name_bad=1) then draw_set_color(c_red);
            if (text_selected!="recruiting_name") or (custom&lt;2) then draw_text_transformed(644+333,398,string(recruiting_name),0.5,0.5,0);
            if (custom&gt;1){
                if (text_selected="recruiting_name") and (text_bar&gt;30) then draw_text_transformed(644+333,398,string(recruiting_name),0.5,0.5,0);
                if (text_selected="recruiting_name") and (text_bar&lt;=30) then draw_text_transformed(644+333,398,string(recruiting_name)+"|",0.5,0.5,0);
                if (scr_text_hit(644+333,398,true,recruiting_name)=true){
                    obj_cursor.image_index=2;
                    if (cooldown&lt;=0) and (mouse_left&gt;=1){text_selected="recruiting_name";cooldown=8000;keyboard_string=recruiting_name;}
                }
                if (text_selected="recruiting_name") then recruiting_name=keyboard_string;
                draw_set_alpha(0.75);draw_rectangle(525+333,398,760+333,418,1);draw_set_alpha(1);
            }
        }
    }
    
    if (recruiting_exists=0) and (homeworld_exists=1){
        // draw_sprite(spr_planet_splash,eh,580+333,244);
        scr_image("planet",eh,580+333,244,128,128);
        
        draw_set_alpha(0.5);
        draw_text_transformed(644+333,378,string(homeworld),0.5,0.5,0);
        draw_text_transformed(644+333,398,string(homeworld_name),0.5,0.5,0);
        draw_set_alpha(1);
    }
    
    
    if (scr_hit(575,216,710,242)=true){
        if (fleet_type!=1){tooltip=string(obj_img.ship[1,1]);tooltip2="The name of your Flagship "+string(obj_img.ship[1,1])+".";}
        if (fleet_type=1){tooltip="Homeworld";tooltip2="The world that your "+string(obj_img.player_army)+"'s "+string(obj_img.hq_ground)+" is located upon.  More civilized worlds are more easily defensible but the citizens may pose a risk or be a nuisance.";}
    }
    if (scr_hit(895,216,1075,242)=true){
        tooltip="Recruiting World";tooltip2="The world that your "+string(obj_img.player_army)+" selects recruits from.  More harsh worlds provide recruits with more grit and warrior mentality.  If you are a homeworld-based "+string(obj_img.player_army)+", you may uncheck 'Recruiting World' to recruit from your homeworld instead.";
    }
    
    draw_line(445,455,1125,455);
    draw_line(445,456,1125,456);
    draw_line(445,457,1125,457);
    
    // homeworld_rule=0;
    // aspirant_trial="Blood Duel";
    
    draw_set_halign(fa_left);
    
    if (fleet_type=1){
        if (custom&lt;2) then draw_set_alpha(0.5);
        draw_text_transformed(445,480,"Homeworld Rule",0.6,0.6,0);
        draw_text_transformed(485,512,"Planetary Governer",0.5,0.5,0);
        draw_text_transformed(485,544,"Passive Supervision",0.5,0.5,0);
        draw_text_transformed(485,576,"Personal Rule",0.5,0.5,0);
        
        yar=0;if (homeworld_rule=1) then yar=1;draw_sprite(spr_creation_check,yar,445,512);yar=0;
        if (scr_hit(445,512,445+32,512+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (homeworld_rule!=1){cooldown=8000;homeworld_rule=1;}
        if (scr_hit(445,512,670,512+32)=true){tooltip="Planetary Governer";tooltip2="Your "+string(obj_img.player_army)+"'s homeworld is ruled by a single Planetary Governer, who does with the planet mostly as they see fit.  While heavily influenced by your Astartes the planet is sovereign.";}
        
        yar=0;if (homeworld_rule=2) then yar=1;draw_sprite(spr_creation_check,yar,445,544);yar=0;
        if (scr_hit(445,544,445+32,544+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (homeworld_rule!=2){cooldown=8000;homeworld_rule=2;}
        if (scr_hit(445,544,620,544+32)=true){tooltip="Passive Supervision";tooltip2="Instead of a Planetary Governer the planet is broken up into many countries or clans.  The people are less united but happier, and see your illusive "+string(obj_img.faction_dudes_formal[1])+" as semi-divine beings.";}
        
        yar=0;if (homeworld_rule=3) then yar=1;draw_sprite(spr_creation_check,yar,445,576);yar=0;
        if (scr_hit(445,576,445+32,576+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (homeworld_rule!=3){cooldown=8000;homeworld_rule=3;}
        if (scr_hit(445,576,670,576+32)=true){tooltip="Planetary Governer";tooltip2="You personally take the rule of the Planetary Governer, ruling over your homeworld with an iron fist.  Your every word and directive, be they good or bad, are absolute law.";}
    }
    
    
    draw_text_transformed(800,480,"Aspirant Trial",0.6,0.6,0);
    draw_text_transformed(830,512,string(aspirant_trial),0.5,0.5,0);
    
    var asp_info;asp_info="";
    if (aspirant_trial="Blood Duel") then asp_info="-Faster "+string(obj_img.recruit)+" Training#-Small Chance of Corruption";
    if (aspirant_trial="Hunting the Hunter") then asp_info="-Minor Bonus "+string(obj_img.recruit)+" Experience";
    if (aspirant_trial="Survival of the Fittest") then asp_info="-Faster "+string(obj_img.recruit)+" Training#-Small Chance of Corruption";
    if (aspirant_trial="Exposure") then asp_info="-Faster "+string(obj_img.recruit)+" Training#-Less Chance of Recruit Success";
    if (aspirant_trial="Knowledge of Self") then asp_info="-Greatly Faster "+string(obj_img.recruit)+" Training#-Much Less Chance of Recruit Success";
    if (aspirant_trial="Challenge") then asp_info="-Bonus "+string(obj_img.recruit)+" Experience#-Less Chance of Recruit Success";
    if (aspirant_trial="Apprenticeship") then asp_info="-Massive Bonus "+string(obj_img.recruit)+" Experience#-Vastly Slower "+string(obj_img.recruit)+" Training";
    draw_text_ext_transformed(850,544,string(asp_info),64,999,0.5,0.5,0);
    
    if (scr_hit(800,480,1000,510)=true){tooltip="Aspirant Trial";tooltip2="A special challenge is needed for Aspirants to be judged worthy of becoming "+string(obj_img.faction_dudes_formal[1])+".  After completing the Trial they then become a "+string(obj_img.recruit)+", beginning implantation and training.";}
    
    if (custom&gt;1) then draw_sprite_stretched(spr_creation_arrow,0,750,502,32,32);
    if (scr_hit(750,502,750+32,502+32)=true) and (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){
        var onceh;onceh=0;cooldown=8000;
        if (aspirant_trial="Apprenticeship") and (onceh=0){aspirant_trial="Challenge";onceh=1;}
        if (aspirant_trial="Challenge") and (onceh=0){aspirant_trial="Knowledge of Self";onceh=1;}
        if (aspirant_trial="Knowledge of Self") and (onceh=0){aspirant_trial="Exposure";onceh=1;}
        if (aspirant_trial="Exposure") and (onceh=0){aspirant_trial="Survival of the Fittest";onceh=1;}
        if (aspirant_trial="Survival of the Fittest") and (onceh=0){aspirant_trial="Hunting the Hunter";onceh=1;}
        if (aspirant_trial="Hunting the Hunter") and (onceh=0){aspirant_trial="Blood Duel";onceh=1;}
        if (aspirant_trial="Blood Duel") and (onceh=0){aspirant_trial="Apprenticeship";onceh=1;}
    }
    
    if (custom&gt;1) then draw_sprite_stretched(spr_creation_arrow,1,788,502,32,32);
    if (scr_hit(788,502,788+32,502+32)=true) and (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){
        var onceh;onceh=0;cooldown=8000;
        if (aspirant_trial="Blood Duel") and (onceh=0){aspirant_trial="Hunting the Hunter";onceh=1;}
        if (aspirant_trial="Hunting the Hunter") and (onceh=0){aspirant_trial="Survival of the Fittest";onceh=1;}
        if (aspirant_trial="Survival of the Fittest") and (onceh=0){aspirant_trial="Exposure";onceh=1;}
        if (aspirant_trial="Exposure") and (onceh=0){aspirant_trial="Knowledge of Self";onceh=1;}
        if (aspirant_trial="Knowledge of Self") and (onceh=0){aspirant_trial="Challenge";onceh=1;}
        if (aspirant_trial="Challenge") and (onceh=0){aspirant_trial="Apprenticeship";onceh=1;}
        if (aspirant_trial="Apprenticeship") and (onceh=0){aspirant_trial="Blood Duel";onceh=1;}
    }
    
    
    draw_line(445,640,1125,640);
    draw_line(445,641,1125,641);
    draw_line(445,642,1125,642);
    
    if (race[100,17]!=0){
        draw_text_transformed(445,665,"Psychic Discipline",0.6,0.6,0);
        if (scr_hit(445,665,620,690)=true){tooltip="Psychic Discipline";tooltip2="The Psychic Discipline that your "+string(obj_img.magic_men_plural)+" will use by default.";}
        
        var fug,fug2;fug=string_delete(discipline,2,string_length(discipline));
        fug2=string_delete(discipline,1,1);draw_text_transformed(513,697,string_upper(fug)+string(fug2),0.5,0.5,0);
        
        var psy_info;psy_info="";
        if (discipline="default") then psy_info="-Psychic Blasts and Barriers";
        if (discipline="biomancy") then psy_info="-Manipulates Biology to Buff or Heal";
        if (discipline="pyromancy") then psy_info="-Unleashes Blasts and Walls of Flame";
        if (discipline="telekinesis") then psy_info="-Manipulates Gravity to Throw or Shield";
        if (discipline="rune Magick") then psy_info="-Summons Deadly Elements and Feral Spirits";
        draw_text_transformed(533,729,string(psy_info),0.5,0.5,0);
        
        if (custom&lt;2) then draw_set_alpha(0.5);
        if (custom=2) then draw_sprite_stretched(spr_creation_arrow,0,437,688,32,32);
        if (custom=2) then draw_sprite_stretched(spr_creation_arrow,1,475,688,32,32);
        draw_set_alpha(1);
        
        if (scr_hit(437,688,437+32,688+32)=true) and (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){
            var onceh;onceh=0;cooldown=8000;
            if (discipline="default") and (onceh=0){discipline="rune Magick";onceh=1;}
            if (discipline="rune Magick") and (onceh=0){discipline="telekinesis";onceh=1;}
            if (discipline="telekinesis") and (onceh=0){discipline="pyromancy";onceh=1;}
            if (discipline="pyromancy") and (onceh=0){discipline="biomancy";onceh=1;}
            if (discipline="biomancy") and (onceh=0){discipline="default";onceh=1;}
        }
        if (scr_hit(475,688,475+32,688+32)=true) and (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){
            var onceh;onceh=0;cooldown=8000;
            if (discipline="default") and (onceh=0){discipline="biomancy";onceh=1;}
            if (discipline="biomancy") and (onceh=0){discipline="pyromancy";onceh=1;}
            if (discipline="pyromancy") and (onceh=0){discipline="telekinesis";onceh=1;}
            if (discipline="telekinesis") and (onceh=0){discipline="rune Magick";onceh=1;}
            if (discipline="rune Magick") and (onceh=0){discipline="default";onceh=1;}
        }
         
    }
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (slide=4){
    draw_set_color(38144);
    draw_set_font(fnt_40k_30b);
    draw_set_halign(fa_center);
    draw_set_alpha(1);
    
    tooltip="";tooltip2="";
    obj_cursor.image_index=0;
    
    draw_text(800,80,string(chapter));

    draw_rectangle(444,252,444+167,252+232,0);

    /*if( shader_is_compiled(sReplaceColor)){
        shader_set(sReplaceColor);
        
        shader_set_uniform_f(colour_to_find1, sourceR1,sourceG1,sourceB1 );       
        shader_set_uniform_f(colour_to_set1, targetR1,targetG1,targetB1 );
        shader_set_uniform_f(colour_to_find2, sourceR2,sourceG2,sourceB2 );       
        shader_set_uniform_f(colour_to_set2, targetR2,targetG2,targetB2 );
        shader_set_uniform_f(colour_to_find3, sourceR3,sourceG3,sourceB3 );       
        shader_set_uniform_f(colour_to_set3, targetR3,targetG3,targetB3 );
        shader_set_uniform_f(colour_to_find4, sourceR4,sourceG4,sourceB4 );       
        shader_set_uniform_f(colour_to_set4, targetR4,targetG4,targetB4 );
        shader_set_uniform_f(colour_to_find5, sourceR5,sourceG5,sourceB5 );
        shader_set_uniform_f(colour_to_set5, targetR5,targetG5,targetB5 );
        shader_set_uniform_f(colour_to_find6, sourceR6,sourceG6,sourceB6 );
        shader_set_uniform_f(colour_to_set6, targetR6,targetG6,targetB6 );
        shader_set_uniform_f(colour_to_find7, sourceR7,sourceG7,sourceB7 );
        shader_set_uniform_f(colour_to_set7, targetR7,targetG7,targetB7 );
        
        //Rejoice!
        
        if (col_special=0) then draw_sprite(spr_aquila_colors,10,444,252);
        if (col_special=1) then draw_sprite(spr_aquila_colors,11,444,252);
        if (col_special&gt;=2) then draw_sprite(spr_aquila_colors,12,444,252);
        
        draw_sprite(spr_aquila_colors,col_special,444,252);
        if (col_special&lt;=1){draw_sprite(spr_aquila_colors,6,444,252);draw_sprite(spr_aquila_colors,8,444,252);}
        if (col_special&gt;=2){draw_sprite(spr_aquila_colors,6,444,252);draw_sprite(spr_aquila_colors,9,444,252);}
        if (trim=0) and (col_special&lt;=1) then draw_sprite(spr_aquila_colors,4,444,252);
        if (trim=0) and (col_special&gt;=2) then draw_sprite(spr_aquila_colors,5,444,252);
        
        
        draw_sprite(spr_weapon_colors,0,444,252);
        shader_reset();
        
    }else{
        draw_text(444,252,"Color swap shader#did not compile");
    }*/
    
    draw_set_color(38144);draw_set_halign(fa_left);
    draw_text_transformed(580,118,"Battle Cry:",0.6,0.6,0);draw_set_font(fnt_40k_14b);
    if (text_selected!="battle_cry") or (custom&lt;2) then draw_text_ext(580,144,string(battle_cry)+"!",-1,580);
    if (custom&gt;1){
        if (text_selected="battle_cry") and (text_bar&gt;30) then draw_text_ext(580,144,string(battle_cry)+"!",-1,580);
        if (text_selected="battle_cry") and (text_bar&lt;=30) then draw_text_ext(580,144,string(battle_cry)+"|!",-1,580);
        var wid,hei;wid=max(580,string_width_ext(battle_cry,-1,580));hei=string_height_ext(battle_cry,-1,580);
        if (scr_hit(580-2,144-2,582+wid,146+hei)){obj_cursor.image_index=2;
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (!instance_exists(obj_creation_popup)){text_selected="battle_cry";cooldown=8000;keyboard_string=battle_cry;}
        }
        if (text_selected="battle_cry") then battle_cry=keyboard_string;
        draw_rectangle(580-2,144-2,582+580,146+hei,1);
    }
    
    
    
    
    draw_line(445,200,1125,200);
    draw_line(445,201,1125,201);
    draw_line(445,202,1125,202);
    
    draw_set_font(fnt_40k_30b);
    draw_text_transformed(444,215,"Livelry",0.6,0.6,0);
    var str,wid,hei,x8,y8;x8=0;y8=0;
    
    
    draw_set_color(38144);draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    str="Primary: "+string(col[main_color]);x8=620;y8=252;
    wid=(string_width(str)/2)+4;hei=(string_height(str)/2)+4;
    draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_color(0);
    draw_text_transformed(x8+2,y8+2,string(str),0.5,0.5,0);
    if (scr_hit(x8,y8,x8+wid,y8+hei)=true) and (!instance_exists(obj_creation_popup)){
        tooltip="Primary";tooltip2="The main color of your "+string(obj_img.faction_dudes_formal)+" and their vehicles.";
        draw_set_color(c_white);if (custom=2) then draw_set_alpha(0.2);if (custom&lt;2) then draw_set_alpha(0.1);draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_alpha(1);
        if (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){cooldown=8000;var pp;pp=instance_create(0,0,obj_creation_popup);pp.type=1;}
    }
    
    y8+=35;
    draw_set_color(38144);draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    str="Secondary: "+string(col[secondary_color]);
    wid=(string_width(str)/2)+4;hei=(string_height(str)/2)+4;
    draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_color(0);
    draw_text_transformed(x8+2,y8+2,string(str),0.5,0.5,0);
    if (scr_hit(x8,y8,x8+wid,y8+hei)=true) and (!instance_exists(obj_creation_popup)){
        tooltip="Secondary";tooltip2="The secondary color of your "+string(obj_img.faction_dudes_formal)+" and their vehicles.";
        draw_set_color(c_white);if (custom=2) then draw_set_alpha(0.2);if (custom&lt;2) then draw_set_alpha(0.1);draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_alpha(1);
        if (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){cooldown=8000;var pp;pp=instance_create(0,0,obj_creation_popup);pp.type=2;}
    }
    
    y8+=35;
    draw_set_color(38144);draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    str="Pauldron 1: "+string(col[pauldron2_color]);
    wid=(string_width(str)/2)+4;hei=(string_height(str)/2)+4;
    draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_color(0);
    draw_text_transformed(x8+2,y8+2,string(str),0.5,0.5,0);
    if (scr_hit(x8,y8,x8+wid,y8+hei)=true) and (!instance_exists(obj_creation_popup)){
        tooltip="First Pauldron";tooltip2="The color of your "+string(obj_img.faction_dudes_formal)+"' right Pauldron.  Normally this Pauldron displays their rank and designation.";
        draw_set_color(c_white);if (custom=2) then draw_set_alpha(0.2);if (custom&lt;2) then draw_set_alpha(0.1);draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_alpha(1);
        if (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){cooldown=8000;var pp;pp=instance_create(0,0,obj_creation_popup);pp.type=3;}
    }
    
    y8+=35;
    draw_set_color(38144);draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    str="Pauldron 2: "+string(col[pauldron_color]);
    wid=(string_width(str)/2)+4;hei=(string_height(str)/2)+4;
    draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_color(0);
    draw_text_transformed(x8+2,y8+2,string(str),0.5,0.5,0);
    if (scr_hit(x8,y8,x8+wid,y8+hei)=true) and (!instance_exists(obj_creation_popup)){
        tooltip="Second Pauldron";tooltip2="The color of your "+string(obj_img.faction_dudes_formal)+"' left Pauldron.  Normally this Pauldron contains the Chapter Insignia.";
        draw_set_color(c_white);if (custom=2) then draw_set_alpha(0.2);if (custom&lt;2) then draw_set_alpha(0.1);draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_alpha(1);
        if (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){cooldown=8000;var pp;pp=instance_create(0,0,obj_creation_popup);pp.type=4;}
    }
    
    y8+=35;
    draw_set_color(38144);draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    str="Trim: "+string(col[trim_color]);
    wid=(string_width(str)/2)+4;hei=(string_height(str)/2)+4;
    draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_color(0);
    draw_text_transformed(x8+2,y8+2,string(str),0.5,0.5,0);
    if (scr_hit(x8,y8,x8+wid,y8+hei)=true) and (!instance_exists(obj_creation_popup)){
        tooltip="Trim";tooltip2="The trim color that appears on the Pauldrons, armor plating, and any decorations.";
        draw_set_color(c_white);if (custom=2) then draw_set_alpha(0.2);if (custom&lt;2) then draw_set_alpha(0.1);draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_alpha(1);
        if (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){cooldown=8000;var pp;pp=instance_create(0,0,obj_creation_popup);pp.type=5;}
    }
    
    y8+=35;
    draw_set_color(38144);draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    str="Lens: "+string(col[lens_color]);
    wid=(string_width(str)/2)+4;hei=(string_height(str)/2)+4;
    draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_color(0);
    draw_text_transformed(x8+2,y8+2,string(str),0.5,0.5,0);
    if (scr_hit(x8,y8,x8+wid,y8+hei)=true) and (!instance_exists(obj_creation_popup)){
        tooltip="Lens";tooltip2="The color of your "+string(obj_img.faction_dudes_formal)+"' lenses.  Most of the time this will be the visor color.";
        draw_set_color(c_white);if (custom=2) then draw_set_alpha(0.2);if (custom&lt;2) then draw_set_alpha(0.1);draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_alpha(1);
        if (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){cooldown=8000;var pp;pp=instance_create(0,0,obj_creation_popup);pp.type=6;}
    }
    
    y8+=35;
    draw_set_color(38144);draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    str="Weapon: "+string(col[weapon_color]);
    wid=(string_width(str)/2)+4;hei=(string_height(str)/2)+4;
    draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_color(0);
    draw_text_transformed(x8+2,y8+2,string(str),0.5,0.5,0);
    if (scr_hit(x8,y8,x8+wid,y8+hei)=true) and (!instance_exists(obj_creation_popup)){
        tooltip="Weapon";tooltip2="The primary color of your "+string(obj_img.faction_dudes_formal)+"' weapons.";
        draw_set_color(c_white);if (custom=2) then draw_set_alpha(0.2);if (custom&lt;2) then draw_set_alpha(0.1);draw_rectangle(x8,y8,x8+wid,y8+hei,0);draw_set_alpha(1);
        if (mouse_left&gt;=1) and (cooldown&lt;=0) and (custom&gt;1){cooldown=8000;var pp;pp=instance_create(0,0,obj_creation_popup);pp.type=7;}
    }
    
    
    draw_set_color(38144);
    
    draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    yar=0;if (col_special=1) then yar=1;draw_sprite(spr_creation_check,yar,437,500);yar=0;
    if (scr_hit(437,500,437+32,500+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (col_special=1) and (onceh=0){col_special=0;onceh=1;}
        if (col_special!=1) and (onceh=0){col_special=1;onceh=1;}
    }draw_text_transformed(437+30,500+4,"Breastplate",0.4,0.4,0);
    
    draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    yar=0;if (col_special=2) then yar=1;draw_sprite(spr_creation_check,yar,554,500);yar=0;
    if (scr_hit(554,500,554+32,500+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (col_special=2) and (onceh=0){col_special=0;onceh=1;}
        if (col_special!=2) and (onceh=0){col_special=2;onceh=1;}
    }draw_text_transformed(554+30,500+4,"Vertical",0.4,0.4,0);
    
    draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    yar=0;if (col_special=3) then yar=1;draw_sprite(spr_creation_check,yar,662,500);yar=0;
    if (scr_hit(662,500,662+32,500+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (col_special=3) and (onceh=0){col_special=0;onceh=1;}
        if (col_special!=3) and (onceh=0){col_special=3;onceh=1;}
    }draw_text_transformed(662+30,500+4,"Quadrant",0.4,0.4,0);
    
    draw_set_alpha(1);if (custom&lt;2) then draw_set_alpha(0.5);
    yar=0;if (trim=1) then yar=1;draw_sprite(spr_creation_check,yar,770,500);yar=0;
    if (scr_hit(770,500,770+32,500+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (trim=1) and (onceh=0){trim=0;onceh=1;}
        if (trim=0) and (onceh=0){trim=1;onceh=1;}
    }draw_text_transformed(770+30,500+4,"Trim",0.4,0.4,0);
    draw_set_alpha(1);
    
    draw_line(844,204,844,740);
    draw_line(845,204,845,740);
    draw_line(846,204,846,740);
    draw_text_transformed(862,215,string(obj_img.faction_dudes_formal[1])+" Role Settings",0.6,0.6,0);
    draw_set_font(fnt_40k_14b);var c,ide,spacing;c=100;spacing=30;
    draw_set_halign(fa_left);var xxx,yyy;xxx=862;yyy=255-spacing;
    
    
    var derpaderp;
    derpaderp=0;
    
    repeat(13){derpaderp+=1;
        if (derpaderp=1) then ide=15;
        if (derpaderp=2) then ide=14;
        if (derpaderp=3) then ide=17;
        if (derpaderp=4) then ide=16;
        if (derpaderp=5) then ide=5;
        if (derpaderp=6) then ide=2;
        if (derpaderp=7) then ide=4;
        if (derpaderp=8) then ide=3;
        if (derpaderp=9) then ide=6;
        if (derpaderp=10) then ide=8;
        if (derpaderp=11) then ide=9;
        if (derpaderp=12) then ide=10;
        if (derpaderp=13) then ide=12;
        
        draw_set_alpha(1);
        if (race[c,ide]!=0){
            if (custom&lt;2) then draw_set_alpha(0.5);
            yyy+=spacing;draw_set_color(38144);draw_rectangle(xxx,yyy,1150,yyy+20,0);
            draw_set_color(0);draw_text(xxx,yyy,role[c,ide]);
            if (scr_hit(xxx,yyy,1150,yyy+20)=true) and (!instance_exists(obj_creation_popup)){if (custom=2) then draw_set_alpha(0.2);if (custom&lt;2) then draw_set_alpha(0.1);draw_set_color(c_white);draw_rectangle(xxx,yyy,1150,yyy+20,0);
                draw_set_alpha(1);tooltip=string(role[c,ide])+" Settings";tooltip2="Click to open the settings for this unit.";
                if (mouse_left&gt;=1) and (custom&gt;0) and (cooldown&lt;=0) and (custom=2){var pp;pp=instance_create(0,0,obj_creation_popup);pp.type=ide+100;cooldown=8000;}
            }
        }
    }

    
    
    
    
    draw_set_color(38144);draw_set_alpha(1);draw_set_font(fnt_40k_30b);
    
    
    if (custom&lt;2) then draw_set_alpha(0.5);
    yar=0;if (equal_specialists=1) then yar=1;draw_sprite(spr_creation_check,yar,860,680);yar=0;
    if (scr_hit(860,680,1150,700)=true) and (!instance_exists(obj_creation_popup)){tooltip="Specialist Distribution";tooltip2="Check if you wish for your Companies to be uniform and each contain "+string(role[100,10])+"s and "+string(role[100,9])+"s.";}
    if (scr_hit(860,680,860+32,680+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (equal_specialists=1) and (onceh=0){equal_specialists=0;onceh=1;}
        if (equal_specialists!=1) and (onceh=0){equal_specialists=1;onceh=1;}
    }draw_text_transformed(860+30,680+4,"Equal Specialist Distribution",0.4,0.4,0);
    draw_set_alpha(1);
    
    yar=0;if (load_to_ships=1) then yar=1;draw_sprite(spr_creation_check,yar,860,680+40);yar=0;
    if (scr_hit(860,680+40,1005,700+40)=true) and (!instance_exists(obj_creation_popup)){tooltip="Load to Ships";tooltip2="Check to have your Astartes automatically loaded into ships when the game starts.";}
    if (scr_hit(860,680+40,860+32,680+32+40)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (load_to_ships=1) and (onceh=0){load_to_ships=0;onceh=1;}
        if (load_to_ships!=1) and (onceh=0){load_to_ships=1;onceh=1;}
    }draw_text_transformed(860+30,680+4+40,"Load to Ships",0.4,0.4,0);
    
    yar=0;if (load_to_ships=2) then yar=1;draw_sprite(spr_creation_check,yar,1010,680+40);yar=0;
    if (scr_hit(1010,680+40,1150,700+40)=true) and (!instance_exists(obj_creation_popup)){tooltip="Load (Sans Escorts)";tooltip2="Check to have your Astartes automatically loaded into ships, except for Escorts, when the game starts.";}
    if (scr_hit(1010,680+40,1020+32,680+32+40)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (load_to_ships=2) and (onceh=0){load_to_ships=0;onceh=1;}
        if (load_to_ships!=2) and (onceh=0){load_to_ships=2;onceh=1;}
    }draw_text_transformed(1010+30,680+4+40,"Load (Sans Escorts)",0.4,0.4,0);
    
    
    
    
    draw_line(433,535,844,535);
    draw_line(433,536,844,536);
    draw_line(433,537,844,537);
    
    if (!instance_exists(obj_creation_popup)){
    
        if (scr_hit(540,547,800,725)=true){tooltip="Advisor Names";tooltip2="The names of your main Advisors.  They provide useful information and reports on the divisions of your Chapter.";}
    
        draw_text_transformed(444,550,"Advisor Names",0.6,0.6,0);
        draw_set_font(fnt_40k_14b);
        draw_set_halign(fa_right);
        if (race[100,15]!=0) then draw_text(594,575,string(obj_img.head_doctor)+": ");
        if (race[100,14]!=0) then draw_text(594,597,string(obj_img.head_chaplain)+": ");
        if (race[100,17]!=0) then draw_text(594,619,string(obj_img.head_magician)+": ");
        if (race[100,16]!=0) then draw_text(594,641,string(obj_img.head_mechanic)+": ");
        draw_text(594,663,"Master of Recruits: ");
        draw_text(594,685,string(obj_img.head_admiral)+": ");
        draw_set_halign(fa_left);
        
        if (race[100,15]!=0){
            draw_set_color(38144);if (hapothecary="") then draw_set_color(c_red);
            if (text_selected!="apoth") or (custom&lt;2) then draw_text_ext(600,575,string(hapothecary),-1,580);
            if (custom&gt;1){
                if (text_selected="capoth") and (text_bar&gt;30) then draw_text_ext(600,575,string(hapothecary),-1,580);
                if (text_selected="capoth") and (text_bar&lt;=30) then draw_text_ext(600,575,string(hapothecary)+"|",-1,580);
                var wid,hei;wid=0;hei=string_height_ext(hapothecary,-2,580);
                if (scr_hit(600,575,785,575+hei)){obj_cursor.image_index=2;
                    if (mouse_left&gt;=1) and (cooldown&lt;=0) and (!instance_exists(obj_creation_popup)){text_selected="capoth";cooldown=8000;keyboard_string=hapothecary;}
                }
                if (text_selected="capoth") then hapothecary=keyboard_string;
                draw_rectangle(600-1,575-1,785,575+hei,1);
            }
        }
        
        if (race[100,14]!=0){
            draw_set_color(38144);if (hchaplain="") then draw_set_color(c_red);
            if (text_selected!="chap") or (custom&lt;2) then draw_text_ext(600,597,string(hchaplain),-1,580);
            if (custom&gt;1){
                if (text_selected="chap") and (text_bar&gt;30) then draw_text_ext(600,597,string(hchaplain),-1,580);
                if (text_selected="chap") and (text_bar&lt;=30) then draw_text_ext(600,597,string(hchaplain)+"|",-1,580);
                var wid,hei;wid=0;hei=string_height_ext(hchaplain,-2,580);
                if (scr_hit(600,597,785,597+hei)){obj_cursor.image_index=2;
                    if (mouse_left&gt;=1) and (cooldown&lt;=0) and (!instance_exists(obj_creation_popup)){text_selected="chap";cooldown=8000;keyboard_string=hchaplain;}
                }
                if (text_selected="chap") then hchaplain=keyboard_string;
                draw_rectangle(600-1,597-1,785,597+hei,1);
            }
        }
        
        if (race[100,17]!=0){
            draw_set_color(38144);if (clibrarian="") then draw_set_color(c_red);
            if (text_selected!="libra") or (custom&lt;2) then draw_text_ext(600,619,string(clibrarian),-1,580);
            if (custom&gt;1){
                if (text_selected="libra") and (text_bar&gt;30) then draw_text_ext(600,619,string(clibrarian),-1,580);
                if (text_selected="libra") and (text_bar&lt;=30) then draw_text_ext(600,619,string(clibrarian)+"|",-1,580);
                var wid,hei;wid=0;hei=string_height_ext(clibrarian,-2,580);
                if (scr_hit(600,619,785,619+hei)){obj_cursor.image_index=2;
                    if (mouse_left&gt;=1) and (cooldown&lt;=0) and (!instance_exists(obj_creation_popup)){text_selected="libra";cooldown=8000;keyboard_string=clibrarian;}
                }
                if (text_selected="libra") then clibrarian=keyboard_string;
                draw_rectangle(600-1,619-1,785,619+hei,1);
            }
        }
        
        if (race[100,16]!=0){
            draw_set_color(38144);if (fmaster="") then draw_set_color(c_red);
            if (text_selected!="forge") or (custom&lt;2) then draw_text_ext(600,641,string(fmaster),-1,580);
            if (custom&gt;1){
                if (text_selected="forge") and (text_bar&gt;30) then draw_text_ext(600,641,string(fmaster),-1,580);
                if (text_selected="forge") and (text_bar&lt;=30) then draw_text_ext(600,641,string(fmaster)+"|",-1,580);
                var wid,hei;wid=0;hei=string_height_ext(fmaster,-2,580);
                if (scr_hit(600,641,785,641+hei)){obj_cursor.image_index=2;
                    if (mouse_left&gt;=1) and (cooldown&lt;=0) and (!instance_exists(obj_creation_popup)){text_selected="forge";cooldown=8000;keyboard_string=fmaster;}
                }
                if (text_selected="forge") then fmaster=keyboard_string;
                draw_rectangle(600-1,641-1,785,641+hei,1);
            }
        }
        
        draw_set_color(38144);if (recruiter="") then draw_set_color(c_red);
        if (text_selected!="recr") or (custom&lt;2) then draw_text_ext(600,663,string(recruiter),-1,580);
        if (custom&gt;1){
            if (text_selected="recr") and (text_bar&gt;30) then draw_text_ext(600,663,string(recruiter),-1,580);
            if (text_selected="recr") and (text_bar&lt;=30) then draw_text_ext(600,663,string(recruiter)+"|",-1,580);
            var wid,hei;wid=0;hei=string_height_ext(recruiter,-2,580);
            if (scr_hit(600,663,785,663+hei)){obj_cursor.image_index=2;
                if (mouse_left&gt;=1) and (cooldown&lt;=0) and (!instance_exists(obj_creation_popup)){text_selected="recr";cooldown=8000;keyboard_string=recruiter;}
            }
            if (text_selected="recr") then recruiter=keyboard_string;
            draw_rectangle(600-1,663-1,785,663+hei,1);
        }
        
        draw_set_color(38144);if (admiral="") then draw_set_color(c_red);
        if (text_selected!="admi") or (custom&lt;2) then draw_text_ext(600,685,string(admiral),-1,580);
        if (custom&gt;1){
            if (text_selected="admi") and (text_bar&gt;30) then draw_text_ext(600,685,string(admiral),-1,580);
            if (text_selected="admi") and (text_bar&lt;=30) then draw_text_ext(600,685,string(admiral)+"|",-1,580);
            var wid,hei;wid=0;hei=string_height_ext(admiral,-2,580);
            if (scr_hit(600,685,785,685+hei)){obj_cursor.image_index=2;
                if (mouse_left&gt;=1) and (cooldown&lt;=0) and (!instance_exists(obj_creation_popup)){text_selected="admi";cooldown=8000;keyboard_string=admiral;}
            }
            if (text_selected="admi") then admiral=keyboard_string;
            draw_rectangle(600-1,685-1,785,685+hei,1);
        }
        
        
    
    }
    
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>5</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (slide=5){
    draw_set_color(38144);
    draw_set_font(fnt_40k_30b);
    draw_set_halign(fa_center);
    draw_set_alpha(1);
    
    tooltip="";tooltip2="";
    obj_cursor.image_index=0;
    
    draw_text(800,80,string(chapter));


    draw_set_color(38144);draw_set_halign(fa_left);
    draw_text_transformed(580,118,"Successor "+string(obj_img.player_army)+"s: "+string(successors),0.6,0.6,0);
    draw_set_font(fnt_40k_14b);
    
    
    draw_line(445,200,1125,200);
    draw_line(445,201,1125,201);
    draw_line(445,202,1125,202);
    
    draw_set_font(fnt_40k_30b);
    draw_text_transformed(503,210,string(obj_img.organics)+" Mutations",0.6,0.6,0);
    if (mutations&gt;mutations_selected) then draw_text_transformed(585,230,"Select "+string(mutations-mutations_selected)+" More",0.5,0.5,0);
    
    var x1,y1,spac;spac=34;
    
    if (custom&lt;2) then draw_set_alpha(0.5);
    
    x1=450;y1=260;yar=0;if (preomnor=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (preomnor=1) and (onceh=0){preomnor=0;mutations_selected-=1;onceh=1;}
        if (preomnor!=1) and (onceh=0) and (mutations&gt;mutations_selected){preomnor=1;mutations_selected+=1;onceh=1;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[1]),0.4,0.4,0);
    if (scr_hit(x1,y1,700,y1+20)=true){tooltip=string(obj_img.mutation[1]);tooltip2=string(obj_img.mutation_description[1]);}
    
    y1+=spac;yar=0;if (voice=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (voice=1) and (onceh=0){voice=0;mutations_selected-=1;onceh=1;disposition[2]+=8;}
        if (voice!=1) and (onceh=0) and (mutations&gt;mutations_selected){voice=1;mutations_selected+=1;onceh=1;disposition[2]-=8;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[2]),0.4,0.4,0);
    if (scr_hit(x1,y1,700,y1+20)=true){tooltip=string(obj_img.mutation[2]);tooltip2=string(obj_img.mutation_description[2]);}
    
    y1+=spac;yar=0;if (doomed=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (doomed=1) and (onceh=0){doomed=0;mutations_selected-=4;onceh=1;disposition[1]+=8;disposition[6]-=8;}
        if (doomed!=1) and (onceh=0) and (mutations&gt;mutations_selected){doomed=1;mutations_selected+=4;onceh=1;disposition[1]-=8;disposition[6]+=8;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[3]),0.4,0.4,0);
    if (scr_hit(x1,y1,700,y1+20)=true){tooltip=string(obj_img.mutation[3]);tooltip2=string(obj_img.mutation_description[3]);}
    
    y1+=spac;yar=0;if (lyman=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (lyman=1) and (onceh=0){lyman=0;mutations_selected-=1;onceh=1;}
        if (lyman!=1) and (onceh=0) and (mutations&gt;mutations_selected){lyman=1;mutations_selected+=1;onceh=1;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[4]),0.4,0.4,0);
    if (scr_hit(x1,y1,700,y1+20)=true){tooltip=string(obj_img.mutation[4]);tooltip2=string(obj_img.mutation_description[4]);}
    
    y1+=spac;yar=0;if (omophagea=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (omophagea=1) and (onceh=0){omophagea=0;mutations_selected-=1;onceh=1;}
        if (omophagea!=1) and (onceh=0) and (mutations&gt;mutations_selected){omophagea=1;mutations_selected+=1;onceh=1;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[5]),0.4,0.4,0);
    if (scr_hit(x1,y1,700,y1+20)=true){tooltip=string(obj_img.mutation[5]);tooltip2=string(obj_img.mutation_description[5]);}
    
    y1+=spac;yar=0;if (ossmodula=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (ossmodula=1) and (onceh=0){ossmodula=0;mutations_selected-=1;onceh=1;}
        if (ossmodula!=1) and (onceh=0) and (mutations&gt;mutations_selected){ossmodula=1;mutations_selected+=1;onceh=1;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[6]),0.4,0.4,0);
    if (scr_hit(x1,y1,700,y1+20)=true){tooltip=string(obj_img.mutation[6]);tooltip2=string(obj_img.mutation_description[6]);}
    
    y1+=spac;yar=0;if (zygote=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (zygote=1) and (onceh=0){zygote=0;mutations_selected-=2;onceh=1;}
        if (zygote!=1) and (onceh=0) and (mutations&gt;mutations_selected){zygote=1;mutations_selected+=2;onceh=1;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[7]),0.4,0.4,0);
    if (scr_hit(x1,y1,700,y1+20)=true){tooltip=string(obj_img.mutation[7]);tooltip2=string(obj_img.mutation_description[7]);}
    
    x1=750;y1=260-spac;
    
    y1+=spac;yar=0;if (membrane=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (membrane=1) and (onceh=0){membrane=0;mutations_selected-=1;onceh=1;}
        if (membrane!=1) and (onceh=0) and (mutations&gt;mutations_selected){membrane=1;mutations_selected+=1;onceh=1;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[8]),0.4,0.4,0);
    if (scr_hit(x1,y1,1020,y1+20)=true){tooltip=string(obj_img.mutation[8]);string(obj_img.mutation_description[8]);}
    
    y1+=spac;yar=0;if (betchers=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (betchers=1) and (onceh=0){betchers=0;mutations_selected-=1;onceh=1;}
        if (betchers!=1) and (onceh=0) and (mutations&gt;mutations_selected){betchers=1;mutations_selected+=1;onceh=1;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[9]),0.4,0.4,0);
    if (scr_hit(x1,y1,1020,y1+20)=true){tooltip=string(obj_img.mutation[9]);tooltip2=string(obj_img.mutation_description[9]);}
    
    y1+=spac;yar=0;if (catalepsean=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (catalepsean=1) and (onceh=0){catalepsean=0;mutations_selected-=1;onceh=1;}
        if (catalepsean!=1) and (onceh=0) and (mutations&gt;mutations_selected){catalepsean=1;mutations_selected+=1;onceh=1;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[10]),0.4,0.4,0);
    if (scr_hit(x1,y1,1020,y1+20)=true){tooltip=string(obj_img.mutation[10]);tooltip2=string(obj_img.mutation_description[10]);}
    
    y1+=spac;yar=0;if (secretions=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (secretions=1) and (onceh=0){secretions=0;mutations_selected-=1;onceh=1;disposition[2]+=8;}
        if (secretions!=1) and (onceh=0) and (mutations&gt;mutations_selected){secretions=1;mutations_selected+=1;onceh=1;disposition[2]-=8;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[11]),0.4,0.4,0);
    if (scr_hit(x1,y1,1020,y1+20)=true){tooltip=string(obj_img.mutation[11]);tooltip2=string(obj_img.mutation_description[11]);}
    
    y1+=spac;yar=0;if (occulobe=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (occulobe=1) and (onceh=0){occulobe=0;mutations_selected-=1;onceh=1;}
        if (occulobe!=1) and (onceh=0) and (mutations&gt;mutations_selected){occulobe=1;mutations_selected+=1;onceh=1;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[12]),0.4,0.4,0);
    if (scr_hit(x1,y1,1020,y1+20)=true){tooltip=string(obj_img.mutation[12]);tooltip2=string(obj_img.mutation_description[12]);}
    
    y1+=spac;yar=0;if (mucranoid=1) then yar=1;draw_sprite(spr_creation_check,yar,x1,y1);yar=0;
    if (scr_hit(x1,y1,x1+32,y1+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (!instance_exists(obj_creation_popup)){
        cooldown=8000;var onceh;onceh=0;
        if (mucranoid=1) and (onceh=0){mucranoid=0;mutations_selected-=1;onceh=1;disposition[1]+=4;disposition[2]+=4;disposition[3]+=4;disposition[5]+=4;disposition[6]+=4;}
        if (mucranoid!=1) and (onceh=0) and (mutations&gt;mutations_selected){mucranoid=1;mutations_selected+=1;onceh=1;disposition[1]-=4;disposition[2]-=4;disposition[3]-=4;disposition[5]-=4;disposition[6]-=4;}
    }draw_text_transformed(x1+30,y1+4,string(obj_img.mutation[13]),0.4,0.4,0);
    if (scr_hit(x1,y1,1020,y1+20)=true){tooltip=string(obj_img.mutation[13]);tooltip2=string(obj_img.mutation_description[13]);}
    
    draw_set_alpha(1);
    
    draw_line(445,505,1125,505);
    draw_line(445,506,1125,505);
    draw_line(445,507,1125,507);
    
    draw_set_font(fnt_40k_30b);
    draw_text_transformed(444,515,"Starting Disposition",0.6,0.6,0);
    
    draw_set_font(fnt_40k_14b);
    draw_set_halign(fa_right);
    
    draw_text(650,550,string(obj_img.faction[2])+" ("+string(disposition[2])+")");
    draw_text(650,575,string(obj_img.faction[3])+" ("+string(disposition[3])+")");
    draw_text(650,600,string(obj_img.faction[5])+" ("+string(disposition[5])+")");
    draw_text(650,625,string(obj_img.faction[4])+" ("+string(disposition[4])+")");
    if (founding!=0) then draw_text(650,650,"Progenitor ("+string(disposition[1])+")");
    draw_text(650,675,string(obj_img.player_army)+"s ("+string(disposition[6])+")");
    
    draw_rectangle(655,552,1150,567,1);
    draw_rectangle(655,552+25,1150,567+25,1);
    draw_rectangle(655,552+50,1150,567+50,1);
    draw_rectangle(655,552+75,1150,567+75,1);
    if (founding!=0) then draw_rectangle(655,552+100,1150,567+100,1);
    draw_rectangle(655,552+125,1150,567+125,1);
    if (disposition[2]&gt;0) then draw_rectangle(655,552,655+(disposition[2]*4.95),567,0);
    if (disposition[3]&gt;0) then draw_rectangle(655,552+25,655+(disposition[3]*4.95),567+25,0);
    if (disposition[5]&gt;0) then draw_rectangle(655,552+50,655+(disposition[5]*4.95),567+50,0);
    if (disposition[4]&gt;0) then draw_rectangle(655,552+75,655+(disposition[4]*4.95),567+75,0);
    if (disposition[1]&gt;0) and (founding!=0) then draw_rectangle(655,552+100,655+(disposition[1]*4.95),567+100,0);
    if (disposition[6]&gt;0) then draw_rectangle(655,552+125,655+(disposition[6]*4.95),567+125,0);
    
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>6</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>








if (slide=6){
    draw_set_color(38144);
    draw_set_font(fnt_40k_30b);
    draw_set_halign(fa_center);
    draw_set_alpha(1);var yar;yar=0;
    
    tooltip="";tooltip2="";
    obj_cursor.image_index=0;
    
    draw_text(800,80,string(chapter));

    
    draw_set_color(38144);draw_set_halign(fa_left);
    draw_text_transformed(580,118,string(obj_img.faction_title[1])+" Name: ",0.6,0.6,0);draw_set_font(fnt_40k_14b);
    
    if (text_selected!="cm") or (custom=0) then draw_text_ext(580,144,string(chapter_master_name),-1,580);
    if (custom&gt;0) and (restarted=0){
        if (text_selected="cm") and (text_bar&gt;30) then draw_text(580,144,string(chapter_master_name));
        if (text_selected="cm") and (text_bar&lt;=30) then draw_text(580,144,string(chapter_master_name)+"|",);
        var wid,hei;wid=max(400,string_width(chapter_master_name));hei=string_height(chapter_master_name);
        if (scr_hit(580-2,144-2,582+wid,146+hei)){obj_cursor.image_index=2;
            if (mouse_left&gt;=1) and (cooldown&lt;=0) and (!instance_exists(obj_creation_popup)){text_selected="cm";cooldown=8000;keyboard_string=chapter_master_name;}
        }
        if (text_selected="cm") then chapter_master_name=keyboard_string;
        draw_rectangle(580-2,144-2,582+400,146+hei,1);
    }
    
    draw_line(445,200,1125,200);
    draw_line(445,201,1125,201);
    draw_line(445,202,1125,202);
    
    draw_set_font(fnt_40k_30b);
    draw_text_transformed(444,215,"Select Two Weapons",0.6,0.6,0);
    draw_text_transformed(444,240,"Melee",0.6,0.6,0);
    draw_text_transformed(800,240,"Ranged",0.6,0.6,0);
    
    
    var x6,y6,spac,h,it;
    x6=444;y6=265;spac=30;h=0;it="";
    if (custom=0) or (restarted&gt;0) then draw_set_alpha(0.5);
    
    repeat(7){h+=1;
        if (h=1) then it="Power Fists";
        if (h=2) then it="Relic Blade";
        if (h=3) then it="Master Crafted "+string(obj_img.hammer);
        if (h=4) then it="Master Crafted Power Sword";
        if (h=5) then it="Master Crafted Power Axe";
        if (h=6) then it="Master Crafted Eviscerator";
        if (h=7) then it="Master Crafted Force Weapon";
        
        yar=0;if (chapter_master_melee=h) then yar=1;draw_sprite(spr_creation_check,yar,x6,y6);yar=0;
        if (scr_hit(x6,y6,x6+32,y6+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;0) and (restarted=0) and (!instance_exists(obj_creation_popup)){
            cooldown=8000;var onceh;onceh=0;
            if (chapter_master_melee=h) and (onceh=0){chapter_master_melee=0;onceh=1;}
            if (chapter_master_melee!=h) and (onceh=0){chapter_master_melee=h;onceh=1;}
        }
        draw_text_transformed(x6+30,y6+4,it,0.4,0.4,0);
        y6+=spac;
    }
    
    x6=800;y6=265;h=0;it="";
    repeat(7){h+=1;
        if (h=1) then it="Integrated "+string(obj_img.gyro)+"s";
        if (h=2) then it="Infernus Pistol";
        if (h=3) then it="Plasma Pistol";
        if (h=4) then it="Plasma Gun";
        if (h=5) then it="Master Crafted Heavy "+string(obj_img.gyro);
        if (h=6) then it="Master Crafted Meltagun";
        if (h=7) then it="Storm Shield";
        
        yar=0;if (chapter_master_ranged=h) then yar=1;draw_sprite(spr_creation_check,yar,x6,y6);yar=0;
        if (scr_hit(x6,y6,x6+32,y6+32)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;0) and (restarted=0) and (!instance_exists(obj_creation_popup)){
            cooldown=8000;var onceh;onceh=0;
            if (chapter_master_ranged=h) and (onceh=0){chapter_master_ranged=0;onceh=1;}
            if (chapter_master_ranged!=h) and (onceh=0){chapter_master_ranged=h;onceh=1;}
        }
        draw_text_transformed(x6+30,y6+4,it,0.4,0.4,0);
        y6+=spac;
    }
    
    draw_set_alpha(1);
    
    draw_line(445,490,1125,490);
    draw_line(445,491,1125,491);
    draw_line(445,492,1125,492);
    
    draw_set_font(fnt_40k_30b);
    // draw_text_transformed(444,505,"Select Speciality",0.6,0.6,0);
    draw_set_halign(fa_center);
    
    var ha2;ha2=string(dis[1])+string(dis[2])+string(dis[3])+string(dis[4]);
    if (chapter_master_specialty=3) and ((race[100,17]=0) or (string_count(string(obj_img.magic_men)+" Intolerant",ha2)&gt;0)) then chapter_master_speciality=choose(1,2);
    x6=474;y6=500;h=0;it="";
    
    repeat(3){h+=1;
        draw_set_alpha(1);
        if ((race[100,17]=0) or (string_count(string(obj_img.magic_men)+" Intolerant",ha2)&gt;0)) and (h=3) then draw_set_alpha(0.5);
        if (custom&lt;2) or (restarted&gt;0) then draw_set_alpha(0.5);
        
        // draw_sprite(spr_cm_specialty,h-1,x6,y6);
        scr_image("commander",h-1,x6,y6,162,208);
        
        if (h=1) then draw_text_transformed(x6+81,y6+214,"Born Leader",0.5,0.5,0);
        if (h=2) then draw_text_transformed(x6+81,y6+214,"Champion",0.5,0.5,0);
        if (h=3) then draw_text_transformed(x6+81,y6+214,string(obj_img.magic_men),0.5,0.5,0);
        
        yar=0;if (chapter_master_specialty=h) then yar=1;draw_sprite(spr_creation_check,yar,x6,y6+214);yar=0;
        
        var nope;nope=0;if (h=3) and ((race[100,17]=0) or (string_count(string(obj_img.magic_men)+" Intolerant",ha2)&gt;0)) then nope=1;
        
        if (scr_hit(x6,y6+214,x6+32,y6+32+214)=true) and (cooldown&lt;=0) and (mouse_left&gt;=1) and (custom&gt;1) and (restarted=0) and (nope=0){
            cooldown=8000;var onceh;onceh=0;
            if (chapter_master_specialty!=h) and (onceh=0){chapter_master_specialty=h;onceh=1;}
        }
        if (scr_hit(x6,y6+214,x6+162,y6+234)=true) and (nope=0){
            if (h=1){tooltip="Born Leader";tooltip2="You always know the right words to inspire your men or strike doubt in the hearts of the enemy.  Increases Disposition and Grants a +10% Requisition Income Bonus.";}
            if (h=2){tooltip="Champion";tooltip2="Even before your rise to "+string(obj_img.faction_title[1])+" you were a renowned warrior, nearly without compare.  Increases "+string(obj_img.faction_title[1])+" Experience, Melee Damage, and Ranged Damage.";}
            if (h=3){tooltip=string(obj_img.magic_men);tooltip2="The impossible is nothing to you; despite being a "+string(obj_img.magic_men)+" you have slowly risen to lead a "+string(obj_img.player_army)+".  "+string(obj_img.faction_title[1])+" gains every Power within the chosen Discipline.";}
        }
        
        x6+=240;draw_set_alpha(1);
    }
    
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>End</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

// 850,860

var xx,yy;
xx=375;yy=10;


if (change_slide&gt;0){
    draw_set_color(c_black);
    if (change_slide=3){
        if (slate5&lt;=0) then slate5=1;
        if (slate5&gt;=5) and (slate6=0) then slate6=1;
    }
    if (change_slide&lt;=30) then draw_set_alpha(change_slide/30);
    if (change_slide&gt;40) then draw_set_alpha(2.33-(change_slide/30));
    draw_rectangle(430,66,702,750,0);
    draw_rectangle(703,80,1171,750,0);
    draw_rectangle(518,750,1075,820,0);
}


draw_set_color(5998382);
if (slate5&gt;0){
    if (slate5&lt;=30) then draw_set_alpha(slate5/30);
    if (slate5&gt;30) then draw_set_alpha(1-((slate5-30)/30));
    draw_line(xx+30,yy+70+(slate5*12),xx+790,yy+70+(slate5*12));
}
if (slate6&gt;0){
    if (slate6&lt;=30) then draw_set_alpha(slate6/30);
    if (slate6&gt;30) then draw_set_alpha(1-((slate6-30)/30));
    draw_line(xx+30,yy+70+(slate6*12),xx+790,yy+70+(slate6*12));
}

if (fade_in&gt;0){
    draw_set_alpha(fade_in/50);
    draw_set_color(0);
    draw_rectangle(0,0,room_width,room_height,0);
}
draw_set_alpha(1);
// draw_set_color(c_red);
// draw_text(mouse_x+20,mouse_y+20,string(change_slide));




if (slide=1){
    draw_set_alpha(slate4/30);
    if (slide=1) then draw_sprite(spr_creation_arrow,2,607,761);
    if (slide!=1) then draw_sprite(spr_creation_arrow,0,607,761);
    draw_sprite(spr_creation_arrow,3,927,761);
    
    var q,x3,y3;q=1;x3=(room_width/2)-65;y3=790;
    draw_set_color(38144);
    repeat(6){
        draw_circle(x3,y3,10,1);
        draw_circle(x3,y3,9.5,1);
        draw_circle(x3,y3,9,1);
        
        if (slide=q) then draw_circle(x3,y3,8.5,0);
        if (slide!=q) then draw_circle(x3,y3,8.5,1);
        x3+=25;q+=1;
    }
}



if (slide&gt;=2) or (goto_slide&gt;=2){
    draw_set_alpha(1);
    draw_sprite(spr_creation_arrow,0,607,761);
    draw_sprite(spr_creation_arrow,1,927,761);
    if (slide=1) then draw_sprite(spr_creation_arrow,2,607,761);
    
    
    if (slide&gt;=2) and (slide&lt;6) and (custom!=2){
        draw_set_alpha(0.8);
        if (popup="") and ((change_slide&gt;=70) or (change_slide&lt;=0)) and (scr_hit(927+64+12,761+12,927+128-12,761+64-12)=true) then draw_set_alpha(1);
        draw_sprite(spr_creation_arrow,4,927+64,761);
        if (popup="") and ((change_slide&gt;=70) or (change_slide&lt;=0)) and (cooldown&lt;=0) and (mouse_left&gt;=1){
            if (scr_hit(927+64+12,761+12,927+128-12,761+64-12)=true){
                scr_creation(2);scr_creation(3.5);scr_creation(4);
                scr_creation(5);scr_creation(6);
            }
        }
    }
    draw_set_alpha(1);
    
    
    var q,x3,y3;q=1;x3=(room_width/2)-65;y3=790;
    draw_set_color(38144);
    repeat(6){
        draw_circle(x3,y3,10,1);
        draw_circle(x3,y3,9.5,1);
        draw_circle(x3,y3,9,1);
        
        if (slide_show=q) then draw_circle(x3,y3,8.5,0);
        if (slide_show!=q) then draw_circle(x3,y3,8.5,1);
        x3+=25;q+=1;
    }
    
    
    
    if (popup="") and ((change_slide&gt;=70) or (change_slide&lt;=0)) and (cooldown&lt;=0){
        if (mouse_x&gt;925) and (mouse_y&gt;756) and (mouse_x&lt;997) and (mouse_y&lt;824) and (mouse_left&gt;=1) and (!instance_exists(obj_creation_popup)){// Next slide
            
            if (slide=2) then scr_creation(2);
            if (slide=3) then scr_creation(3);
            if (slide=4) then scr_creation(4);
            if (slide=5) then scr_creation(5);
            if (slide=6) then scr_creation(6);
            
        }
        
        
        if (mouse_x&gt;604) and (mouse_y&gt;756) and (mouse_x&lt;675) and (mouse_y&lt;824) and (mouse_left&gt;=1) and (cooldown&lt;=0) and (!instance_exists(obj_creation_popup)){// Previous slide
            cooldown=8000;change_slide=1;goto_slide=slide-1;popup="";
            if (goto_slide=1){
                highlight=0;highlighting=0;old_highlight=0;
            }
        }
    }
    
}




if (tooltip!="") and (tooltip2!="") and (change_slide&lt;=0){
    draw_set_alpha(1);
    draw_set_font(fnt_40k_14);draw_set_halign(fa_left);draw_set_color(0);
    draw_rectangle(mouse_x+18,mouse_y+20,mouse_x+string_width_ext(tooltip2,-1,500)+24,mouse_y+44+string_height_ext(tooltip2,-1,500),0);
    draw_set_color(38144);
    draw_rectangle(mouse_x+18,mouse_y+20,mouse_x+string_width_ext(tooltip2,-1,500)+24,mouse_y+44+string_height_ext(tooltip2,-1,500),1);
    draw_set_font(fnt_40k_14b);draw_text(mouse_x+22,mouse_y+22,string(tooltip));
    draw_set_font(fnt_40k_14);draw_text_ext(mouse_x+22,mouse_y+42,string(tooltip2),-1,500);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
