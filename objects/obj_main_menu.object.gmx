<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (instance_number(obj_cuicons)=0){global.custom_icons=4;instance_create(0,0,obj_cuicons);}

global.version=0.701;
global.game_seed=0;
global.cheat_req=false;
global.cheat_gene=false;
global.cheat_disp=false;
global.cheat_debug=false;
global.language="en";
ini_open(working_directory + "\loaded_mod.ini");
global.loaded_mod=ini_read_string("Mod","value","none");
ini_close();

window_data="fullscreen";
window_old="fullscreen";

global.restart=0;
global.debug=0;
last_legal=0;
legal_text="This game is an unofficial nonprofit parody.  It is in no way sponsored or approved by Games Workshop Limited. The content is for the exclusive use of the player and should not be sold, rented, or used for any commercial enterprise in any way, shape or form. We make no claim to any characters, names, logos, situations that are trademarked, copyrighted or otherwise protected by federal, state or other intellectual property law. This work is produced solely for the personal, uncompensated enjoyment of Warhammer 40,000 fans. No money is being made and no copyright or trademark infringement is intended.";
smoke=0;
crap=0;
menu=0;

ini_open("saves.ini");
last_legal = ini_read_real("Data", "legal", 0);
master_volume=ini_read_real("Settings","master_volume",1);
effect_volume=ini_read_real("Settings","effect_volume",1);
music_volume=ini_read_real("Settings","music_volume",1);
large_text=ini_read_real("Settings","large_text",0);
settings_heresy=ini_read_real("Settings","settings_heresy",0);
settings_fullscreen=ini_read_real("Settings","fullscreen",1);
settings_window_data=ini_read_string("Settings","window_data","fullscreen");

/*if (window_get_fullscreen()=1) and (settings_fullscreen=0){
    window_set_fullscreen(false);
    window_old=string(window_get_x())+"|"+string(window_get_y())+"|"+string(window_get_width())+"|"+string(window_get_height())+"|";
    
    if (window_old!=settings_window_data){
        var temp1,temp2,temp3,temp4;temp1=0;temp2=0;temp3=0;temp4=0;
        explode_script(settings_window_data,"|");
        temp1=real(explode[0]);temp2=real(explode[1]);temp3=real(explode[2]);temp4=real(explode[3]);
        
        window_set_position(temp1,temp2);
        window_set_size(temp3,temp4);
        window_set_position(temp1,temp2);
        window_set_position(temp1,temp2);
    }
}*/
if (window_get_fullscreen()=0) and (settings_fullscreen=0){
    window_old=string(window_get_x())+"|"+string(window_get_y())+"|"+string(window_get_width())+"|"+string(window_get_height())+"|";
    
    if (window_old!=settings_window_data){
        var temp1,temp2,temp3,temp4;temp1=0;temp2=0;temp3=1600;temp4=900;
        
        if (string_count("|",settings_window_data)&gt;=4){
            explode_script(settings_window_data,"|");
            temp1=real(explode[0]);temp2=real(explode[1]);temp3=real(explode[2]);temp4=real(explode[3]);
            window_set_position(temp1,temp2);
            window_set_size(temp3,temp4);
            window_set_position(temp1,temp2);
            window_set_position(temp1,temp2);
        }
        if (string_count("|",settings_window_data)&lt;4){
            temp1=0;temp2=0;temp3=1600;temp4=900;
            ini_open("saves.ini");
            window_old=string(temp1)+"|"+string(temp2)+"|"+string(temp3)+"|"+string(temp4)+"|";
            settings_window_data=ini_write_string("Settings","window_data",string(temp1)+"|"+string(temp2)+"|"+string(temp3)+"|"+string(temp4)+"|");
            window_set_position(temp1,temp2);
            window_set_size(temp3,temp4);
            window_set_position(temp1,temp2);
            window_set_position(temp1,temp2);
            ini_close();
        }
    }
}
if (window_get_fullscreen()=0) and (settings_fullscreen=1){
    window_old="fullscreen";
    window_set_fullscreen(true);
}



var t, mont;
t=date_current_datetime();
mont=date_get_month(t);
ini_write_real("Data", "legal", mont);
ini_close();

if (mont&gt;last_legal) or ((last_legal=12) and (mont=1)) then last_legal=0;


global.sound=audio_play_sound(snd_legal,0,true);
audio_stop_all();
/*
var nope;nope=0;if (master_volume=0) or (music_volume=0) then nope=1;
if (nope!=1){audio_sound_gain(global.sound,0.75*master_volume*music_volume,2000);}
if (nope=1) then audio_sound_gain(global.sound,0,0);*/

randomize();
fade=80;
away=0;
hi=0;
info=0;
global.load=0;
cooldown=0;
browser=0;
version=0;

// thought=scr_thought();
thought="";
async_ini = http_get( "http://planetofthebrandons.com/other/pass2.ini" );
blog_url="Error";
word_from_duke="blank";
word_from_duke2="blank";
mess_alpha=0;
out_of_date=0;

/*stage=0;
if (last_legal=0) then stage=1;
if (last_legal!=0){alarm[2]=1;stage=2;tim1=-50;tim2=424;}
obj_cursor.image_alpha=0;*/


alarm[2]=1;stage=2;tim1=-50;tim2=424;
obj_cursor.image_alpha=0;


// show_message(string(last_legal)+", stage: "+string(stage));

tim1=0;
tim2=0;
tim3=0;
tim4=0;
tim5=0;






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
window_old=window_data;
window_data=string(window_get_x())+"|"+string(window_get_y())+"|"+string(window_get_width())+"|"+string(window_get_height())+"|";
if (window_get_fullscreen()=1){window_old="fullscreen";window_data="fullscreen";}

if (window_data!="fullscreen") and (window_get_fullscreen()=0){
    if (window_data!=window_old){
        ini_open("saves.ini");
        ini_write_string("Settings","window_data",string(window_get_x())+"|"+string(window_get_y())+"|"+string(window_get_width())+"|"+string(window_get_height())+"|");
        ini_close();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (global.returned&gt;0){
    stage=3;tim3=60;audio_stop_all();
    global.sound=audio_play_sound(snd_prologue,0,true);
    audio_sound_gain(global.sound,0,0);
    
    // var nope;nope=0;if (master_volume=0) or (music_volume=0) then nope=1;
    // if (nope!=1){
    audio_sound_gain(global.sound,0.5*master_volume*music_volume,2000);
    // }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*p_system=part_system_create();
particle1=part_type_create();
part_type_shape(particle1,pt_shape_smoke);            //This defines the particles shape
part_type_size(particle1,4,6,-0.05,0);                    //This is for the size
part_type_scale(particle1,2,2);                       //This is for scaling
part_type_color1(particle1,c_black);                  //This sets its colour. There are three different codes for this
part_type_alpha1(particle1,0.5);                        //This is its alpha. There are three different codes for this
// part_type_speed(particle1,1,4,0,0);            //The particles speed
part_type_blend(particle1,0);                         //This is the blend mode, either additive or normal
part_type_life(particle1,60,120);                       //this is its lifespan in steps*/


p_system=part_system_create();
particle1=part_type_create();
part_type_shape(particle1,pt_shape_smoke);            //This defines the particles shape
part_type_size(particle1,4,6,0,0);                    //This is for the size
part_type_scale(particle1,2,4);                       //This is for scaling
part_type_color1(particle1,c_black);                  //This sets its colour. There are three different codes for this
part_type_alpha1(particle1,0.25);                        //This is its alpha. There are three different codes for this
part_type_speed(particle1,1.5,2,0,0);            //The particles speed
part_type_blend(particle1,0);                         //This is the blend mode, either additive or normal
part_type_life(particle1,1000,1200);                       //this is its lifespan in steps*/


// part_particles_create(p_system,random(room_width/2)+(room_width/4),random(room_height),particle1,8);
part_particles_create(p_system,random(room_width/2)+(room_width/4),random(room_height),particle1,8);

smoke=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// var str;
ini_open("pass2.ini");
blog_url = ini_read_string("Data", "blog", "Error");
word_from_duke = ini_read_string("Data", "message", "blank");
word_from_duke2 = ini_read_string("Data", "message2", "blank");
version = ini_read_real("Data", "version", 0);
ini_close();
// show_message(str);


/*

if (version&gt;global.version){
    fade=0;out_of_date=120;
    
    audio_stop_all();
    audio_play_sound(snd_redownload,0,true);    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
audio_stop_sound(snd_royal);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>-100</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (cooldown&gt;0) then cooldown-=1;

var teh;teh=510;


if (stage=1){
    if (tim1&lt;1) and (tim2=0) then tim1+=1/60;
    if (tim1&gt;=0.99) and (tim2&lt;teh) then tim2+=1;
}
if (tim2&gt;=teh){stage=2;
    audio_sound_gain(snd_legal,0,60);
}


if (stage=2) then tim1-=1/60;
if (stage=2) and (tim1&lt;=0){tim2-=1;

    if (tim2=(teh-28)) then alarm[2]=1;

    if (tim2&lt;=teh-30){
        stage=3;
        tim3=60;
        
        audio_stop_all();
        
        global.sound=audio_play_sound(snd_prologue,0,true);
        audio_sound_gain(global.sound,0,0);
        // var nope;nope=0;if (master_volume=0) or (music_volume=0) then nope=1;
        // if (nope!=1){
        audio_sound_gain(global.sound,0.5*master_volume*music_volume,0);
        // }
    }
}


if (global.version&lt;version){
    if (audio_is_playing(snd_prologue)){audio_stop_all();
        global.sound=audio_play_sound(snd_redownload,0,1);
        audio_sound_gain(global.sound,0,0);
        audio_sound_gain(global.sound,1,1500);
    }
}




if (stage=3){
    if (tim3&gt;-15) then tim3-=1;
    
    // if (round(random(70))=5){
    if (round(random(60))=5){
        part_particles_create(p_system,0,random(room_height),particle1,1);
    }
    
    if (tim3&lt;=-15) then tim4+=0.75;
    if (tim4&gt;=37.5) and (instance_exists(obj_cursor)){obj_cursor.image_alpha=1;}
}





if (fade&gt;0) then fade-=0.5;
if (away&gt;=1) then away+=1;
if (out_of_date&gt;0) then out_of_date-=1;

mess_alpha+=1;
if (global.version&lt;version) then mess_alpha+=1;
if (mess_alpha&gt;120) then mess_alpha=0;


hi=0;



exit;





if (fade&lt;=20){

    if (mouse_x&gt;=369) and (mouse_x&lt;619){
        if (mouse_y&gt;=183) and (mouse_y&lt;200) then hi=1;
        if (mouse_y&gt;=213) and (mouse_y&lt;230) then hi=2;
        if (mouse_y&gt;=243) and (mouse_y&lt;260) then hi=3;
    }
    
    if (mouse_x&gt;=414) and (mouse_y&gt;=273) and (mouse_x&lt;578) and (mouse_y&lt;290) then hi=4;
    
    if (instance_exists(obj_saveload)){
        // if (scr_hit(sdfgsdgsdg)=true) then hi=6;
    }
}

if (mouse_x&lt;552) or (mouse_y&lt;441) or (mouse_x&gt;608) or (mouse_y&gt;457) and (browser=1) then browser=0;



if (string_count("dukedecrypt",keyboard_string)&gt;0){
    var which;which=get_integer("Which save?",1);
    file_copy("save"+string(which)+".ini","dec_save"+string(which)+".ini");
    file_decrypt("dec_save"+string(which)+".ini","p");
    game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
exit;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var result, evid;
evid = ds_map_find_value(async_load, "id");

switch (evid) {
    case async_ini:
        result = ds_map_find_value(async_load, "result");
        file = file_text_open_write( "pass2.ini" );
        file_text_write_string(file, result);
        file_text_close(file);
        
        ini_open("pass2.ini");
        blog_url = ini_read_string("Data", "blog", "Error");
        word_from_duke = ini_read_string("Data", "message", "blank");
        word_from_duke2 = ini_read_string("Data", "message2", "blank");
        version = ini_read_real("Data", "version", 0);
        ini_close();
        
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
version=0;
global.returned=0;
global.icon_name="";



var unzip;unzip=false;
ini_open(working_directory +"\loaded_mod.ini"){
    // show_message(string_lower(ini_read_string("Mod","value","")));
    if (string_lower(ini_read_string("Mod","value",""))="none") then unzip=true;
}
if (!file_exists(working_directory +"\loaded_mod.ini")) then unzip=true;


if (directory_exists(program_directory + "\mods")) and (unzip=true){
    var first_mod,load_mod;
    
    first_mod=file_find_first(program_directory +"\mods\*.zip",0);
    load_mod=string_delete(first_mod,string_length(first_mod),4);
    zip_unzip(program_directory + "\mods\"+string(first_mod),working_directory);
    
    ini_open(working_directory + "\loaded_mod.ini");
    ini_write_string("Mod","value",load_mod);
    ini_close();
    
    debugl("Mod loaded: "+string(load_mod));
}    

instance_create(0,0,obj_img);

randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>





if (stage=1) or (stage=2){
    draw_set_alpha(tim1);
    draw_set_halign(fa_center);
    draw_set_color(c_gray);
    draw_set_font(fnt_cul_18);
    
    
    var hi;
    tx=legal_text;
    
    hi=string_height_ext(legal_text,-1,900);    
    draw_text_ext(room_width/2,(900-hi)/2,legal_text,-1,900);
    
    draw_set_alpha(1);    
}


draw_set_alpha(1);
if (stage=3){
    scr_image("title_splash",0,0,0,room_width,room_height);
    // draw_sprite_stretched(spr_new_mm,0,0,0,room_width,room_height);
}


if (tim3&gt;0){
    draw_set_alpha(tim3/60);
    draw_set_color(0);
    draw_rectangle(0,0,2000,2000,0);
    draw_set_alpha(1);
}




exit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>51712</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
