<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-9999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var i;i=-1;
repeat(301){i+=1;
    creation[i]=0;creation_exists[i]=-1;
    main[i]=0;main_exists[i]=-1;
    existing[i]=0;existing_exists[i]=-1;
    others[i]=0;others_exists[i]=-1;
    advisor[i]=0;advisor_exists[i]=-1;
    diplomacy_splash[i]=0;diplomacy_splash_exists[i]=-1;
    diplomacy_daemon[i]=0;diplomacy_daemon_exists[i]=-1;
    diplomacy_icon[i]=0;diplomacy_icon_exists[i]=-1;
    menu[i]=0;menu_exists[i]=-1;
    loading[i]=0;loading_exists[i]=-1;
    postbattle[i]=0;postbattle_exists[i]=-1;
    postspace[i]=0;postspace_exists[i]=-1;
    formation[i]=0;formation_exists[i]=-1;
    popup[i]=0;popup_exists[i]=-1;
    commander[i]=0;commander_exists[i]=-1;
    planet_good[i]=0;planet_exists[i]=-1;
    attacked[i]=0;attacked_exists[i]=-1;
    force[i]=0;force_exists[i]=-1;
    purge[i]=0;purge_exists[i]=0;
    event[i]=0;event_exists[i]=0;
    title_splash[i]=0;title_splash_exists[i]=0;
    
    symbol[i]=0;symbol_exists[i]=0;
    defeat[i]=0;defeat_exists[i]=0;
    slate[i]=0;slate_exists[i]=0;
    resource[i]=0;resource_exists[i]=0;
    
}

creation_good=false;
splash_good=false;
advisor_good=false;
diplomacy_splash_good=false;
diplomacy_daemon_good=false;
diplomacy_icon_good=false;
menu_good=false;
loading_good=false;
postbattle_good=false;
postspace_good=false;
formation_good=false;
popup_good=false;
commander_good=false;
planet_good=false;
attacked_good=false;
force_good=false;
purge_good=false;
event_good=false;
title_splash_good=false;

symbol_good=false;
defeat_good=false;
slate_good=false;
resource_good=false;

// End Image Replacer
// Initialize Text Replacer

game_title="";
travel="";travel_formal="";kingdom_title="";kingdom_title_short="";
kingdom_title_shortest="";king_title="";king_title_formal="";
evil_prefix="";magic_men="";magic_men_plural="";
real_world="";magic_world="";church="";demon_formal="";demons_formal="";
war_god="";pestilence_god="";sin_god="";magic_god="";

machine_god_formal="";
machine_god="";
faction6_god="";
faction7_god1="";
faction7_god2="";
faction7_adjective="";
faction7_clan1="";
faction7_clan2="";
faction7_clan3="";
faction7_clan4="";
faction6_insult="";
faction8_philosophy="";
faction8_human="";
faction8_leader="";

player_army="";recruit="";hq_ground="";hq_jail="";hq_library="";
hq_forge="";hq_medical="";hq_beastary="";hq_command="";
head_doctor="";head_chaplain="";head_magician="";head_mechanic="";
head_admiral="";organics="";codex="";split="";

var i;i=-1;repeat(14){i+=1;
    faction[i]="";faction_short[i]="";faction_title[i]="";
    faction_dude[i]="";faction_dudes[i]="";
    faction_dude_formal[i]="";faction_dudes_formal[i]="";
}

i=-1;repeat(25){i+=1;
    d[i]="";d_tooltip[i]="";
}

i=-1;repeat(14){i+=1;
    mutation[i]="";mutation_description[i]="";
}

gyro="";
gyro_adj="";
laser="";
hammer="";
blade="";
battlesuit="";

var c;c=-1;i=0;
repeat(14){c+=1;i=-1;
    repeat(51){i+=1;unit[c,i]="";if (i&lt;=11){ship[c,i]="";}}
}

// Begin Text Replacer


scr_text("Noun","game_title");
scr_text("Noun","travel");
scr_text("Noun","travel_formal");
scr_text("Noun","kingdom_title");
scr_text("Noun","kingdom_title_short");
scr_text("Noun","kingdom_title_shortest");
scr_text("Noun","king_title");
scr_text("Noun","king_title_formal");
scr_text("Noun","evil_prefix");
scr_text("Noun","magic_men");
scr_text("Noun","magic_men_plural");
scr_text("Noun","real_world");
scr_text("Noun","magic_world");
scr_text("Noun","church");
scr_text("Noun","demon_formal");
scr_text("Noun","demons_formal");
scr_text("Noun","war_god");
scr_text("Noun","pestilence_god");
scr_text("Noun","sin_god");
scr_text("Noun","magic_god");

scr_text("Noun","machine_god_formal");
scr_text("Noun","machine_god");
scr_text("Noun","faction6_god");
scr_text("Noun","faction7_god1");
scr_text("Noun","faction7_god2");
scr_text("Noun","faction7_adjective");
scr_text("Noun","faction7_clan1");
scr_text("Noun","faction7_clan2");
scr_text("Noun","faction7_clan3");
scr_text("Noun","faction7_clan4");
scr_text("Noun","faction6_insult");
scr_text("Noun","faction8_philosophy");
scr_text("Noun","faction8_human");
scr_text("Noun","faction8_leader");

scr_text("Noun","player_army");
scr_text("Noun","recruit");
scr_text("Noun","hq_ground");
scr_text("Noun","hq_jail");
scr_text("Noun","hq_library");
scr_text("Noun","hq_forge");
scr_text("Noun","hq_medical");
scr_text("Noun","hq_beastary");
scr_text("Noun","hq_command");
scr_text("Noun","head_doctor");
scr_text("Noun","head_chaplain");
scr_text("Noun","head_magician");
scr_text("Noun","head_mechanic");
scr_text("Noun","head_admiral");
scr_text("Noun","organics");
scr_text("Noun","codex");
scr_text("Noun","split");

i=0;repeat(13){i+=1;
    scr_text("Faction","faction"+string(i));
    scr_text("Faction","faction"+string(i)+"_short");
    scr_text("Faction","faction"+string(i)+"_title");
    scr_text("Faction","faction"+string(i)+"_dude");
    scr_text("Faction","faction"+string(i)+"_dudes");
    scr_text("Faction","faction"+string(i)+"_dude_formal");
    scr_text("Faction","faction"+string(i)+"_dudes_formal");
}

i=0;repeat(20){i+=1;
    scr_text("Division","d"+string(i));
    scr_text("Division","d"+string(i)+"_tooltip");
}

i=0;repeat(13){i+=1;
    scr_text("Mutation","mutation"+string(i));
    scr_text("Mutation","mutation"+string(i)+"_description");
}

scr_text("Weapon","gyro");
scr_text("Weapon","gyro_adj");
scr_text("Weapon","laser");
scr_text("Weapon","hammer");
scr_text("Weapon","blade");
scr_text("Weapon","battlesuit");

/*i=2;show_message(string(i)+"] faction:"+string(faction[i])+", leader_title:"+string(faction_title[i]));
i=3;show_message(string(i)+"] faction:"+string(faction[i])+", leader_title:"+string(faction_title[i]));
i=5;show_message(string(i)+"] faction:"+string(faction[i])+", leader_title:"+string(faction_title[i]));*/

c=0;i=0;
repeat(13){c+=1;i=0;
    repeat(50){i+=1;
        // if (c=1) and (ini_key_exists("F"+string(c),"unit"+string(i))) then show_message("F"+string(c)+",unit"+string(i));    
        
        /*if (c=1){
            if (ini_key_exists("F"+string(c),"unit"+string(i))) then show_message("checking for key 'F"+string(c)+",unit"+string(i)+"' - it does exist");
            if (!ini_key_exists("F"+string(c),"unit"+string(i))) then show_message("checking for key 'F"+string(c)+",unit"+string(i)+"' - it does NOT exist");
        }*/
        
        if (ini_key_exists("F"+string(c),"unit"+string(i))) then scr_text("F"+string(c),"unit"+string(i));
        if (c=1) and (i&lt;=10) and (ini_key_exists("F"+string(c),"ship"+string(i))) then scr_text("F"+string(c),"ship"+string(i));
    }
}



/*show_message(string(unit[1,18]));
show_message(string(unit[1,19]));
show_message(string(unit[1,20]));
show_message(string(unit[1,21]));
show_message(string(unit[1,22]));*/

ini_close();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if ((instance_exists(obj_turn_end)) or (instance_exists(obj_fleet)) or (instance_exists(obj_star_select))) and (force_good=false) then scr_image("force",-50,0,0,0,0);
if (!instance_exists(obj_turn_end)) and (!instance_exists(obj_fleet) and (!instance_exists(obj_star_select))) and (force_good=true) then scr_image("force",-666,0,0,0,0);


if (!instance_exists(obj_fleet)) and (!instance_exists(obj_ncombat)){
    
    if (instance_exists(obj_controller)){
        if (obj_controller.diplomacy=0) and (obj_controller.menu=20) and (diplomacy_icon_good=false){scr_image("diplomacy_icon",-50,0,0,0,0);scr_image("symbol",-50,0,0,0,0);}
        if (obj_controller.menu!=20) and (diplomacy_icon_good=true){scr_image("diplomacy_icon",-666,0,0,0,0);scr_image("symbol",-666,0,0,0,0);}
        
        if (obj_controller.diplomacy&gt;0) and (diplomacy_splash_good=false) then scr_image("diplomacy_splash",-50,0,0,0,0);
        if (obj_controller.diplomacy=0) and (diplomacy_splash_good=true) then scr_image("diplomacy_splash",-666,0,0,0,0);
        
        var adv_goo;adv_goo=0;
        if (obj_controller.diplomacy&lt;-5) and (obj_controller.diplomacy&gt;-6){adv_goo+=1;}
        if (obj_controller.menu&gt;=11) and (obj_controller.menu&lt;=16){adv_goo+=1;}
        if (obj_controller.menu&gt;=500) and (obj_controller.menu&lt;=510){adv_goo+=1;}
        if (adv_goo&gt;0) and (advisor_good=false) then scr_image("advisor",-50,0,0,0,0);
        if (adv_goo=0) and (advisor_good=true) then scr_image("advisor",-666,0,0,0,0);
        
        if (obj_controller.diplomacy&gt;10) and (obj_controller.diplomacy&lt;11) and (diplomacy_daemon_good=false) then scr_image("diplomacy_daemon",-50,0,0,0,0);
        if (obj_controller.diplomacy&lt;=10) or (obj_controller.diplomacy&gt;=11) and (diplomacy_daemon_good=true) then scr_image("diplomacy_daemon",-666,0,0,0,0);
    
        if (obj_controller.menu=24) and (obj_controller.formating&gt;0) and (formation_good=false) then scr_image("formation",-50,0,0,0,0);
        if (obj_controller.menu!=24) or (obj_controller.formating&lt;=0) and (formation_good=true) then scr_image("formation",-666,0,0,0,0);
        
        if (resource_good=false) then scr_image("resource",-50,0,0,0,0);
        if (resource_good=true) then scr_image("resource",-666,0,0,0,0);
    }
    
    var crea_goo;crea_goo=0;
    if (instance_exists(obj_controller)){if (!instance_exists(obj_fleet)) and (!instance_exists(obj_ncombat)) then crea_goo+=1;}
    if (instance_exists(obj_creation)) then crea_goo+=1;
    if (room_get_name(room)="Defeat") then crea_goo+=1;
    if (crea_goo&gt;0) and (creation_good=false) then scr_image("creation",-50,0,0,0,0);
    if (crea_goo&lt;=0) and (creation_good=true) then scr_image("creation",-666,0,0,0,0);
    
    if (instance_exists(obj_ingame_menu)) and (menu_good=false) then scr_image("menu",-50,0,0,0,0);
    if (!instance_exists(obj_ingame_menu)) and (menu_good=true) then scr_image("menu",-666,0,0,0,0);
    
    if (instance_exists(obj_fleet)) and (postspace_good=false) then scr_image("postspace",-50,0,0,0,0);
    if (!instance_exists(obj_fleet)) and (postspace_good=true) then scr_image("postspace",-666,0,0,0,0);
    
    if (instance_exists(obj_popup)) and (popup_good=false) then scr_image("popup",-50,0,0,0,0);
    if (!instance_exists(obj_popup)) and (popup_good=true) then scr_image("popup",-666,0,0,0,0);
    
    if (instance_exists(obj_creation)) and (commander_good=false) then scr_image("commander",-50,0,0,0,0);
    if (!instance_exists(obj_creation)) and (commander_good=true) then scr_image("commander",-666,0,0,0,0);
    if (instance_exists(obj_creation)) and (slate_good=false) then scr_image("slate",-50,0,0,0,0);
    if (!instance_exists(obj_creation)) and (slate_good=true) then scr_image("slate",-666,0,0,0,0);
    
    if ((instance_exists(obj_creation)) or (instance_exists(obj_star_select))) and (planet_good=false) then scr_image("planet",-50,0,0,0,0);
    if (!instance_exists(obj_creation)) and (!instance_exists(obj_star_select)) and (planet_good=true) then scr_image("planet",-666,0,0,0,0);
    
    if (instance_exists(obj_turn_end)) and (attacked_good=false) then scr_image("attacked",-50,0,0,0,0);
    if (!instance_exists(obj_turn_end)) and (attacked_good=true) then scr_image("attacked",-666,0,0,0,0);
    
    if (instance_exists(obj_drop_select)) and (purge_good=false) then scr_image("purge",-50,0,0,0,0);
    if (!instance_exists(obj_drop_select)) and (purge_good=true) then scr_image("purge",-666,0,0,0,0);
    
    if (instance_exists(obj_event)) and (event_good=false) then scr_image("event",-50,0,0,0,0);
    if (!instance_exists(obj_event)) and (event_good=true) then scr_image("event",-666,0,0,0,0);
    
    if (room_get_name(room)="Main_Menu") and (title_splash_good=false) then scr_image("title_splash",-50,0,0,0,0);
    if (room_get_name(room)!="Main_Menu") and (title_splash_good=true) then scr_image("title_splash",-666,0,0,0,0);
    
    if (room_get_name(room)="Defeat") and (defeat_good=false) then scr_image("defeat",-50,0,0,0,0);
    if (room_get_name(room)!="Defeat") and (defeat_good=true) then scr_image("defeat",-666,0,0,0,0);

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (room_get_name(room)="Creation"){
    if (creation_good=false) and (splash_good=false){
        scr_image("creation",-666,0,0,0,0);
        scr_image("main_splash",-666,0,0,0,0);
        scr_image("existing_splash",-666,0,0,0,0);
        scr_image("other_splash",-666,0,0,0,0);
    }
}


if (room_get_name(room)="Game"){
    scr_image("all",-666,0,0,0,0);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (room_get_name(room)="Creation"){
    if (creation_good=false) and (splash_good=false){
        scr_image("creation",-50,0,0,0,0);
        scr_image("main_splash",-50,0,0,0,0);
        scr_image("existing_splash",-50,0,0,0,0);
        scr_image("other_splash",-50,0,0,0,0);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_alpha(1);draw_set_halign(fa_left);draw_set_color(c_blue);
draw_circle(view_xview[0]+20,view_yview[0]+20,32,0);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
