<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-21000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
width=0;
height=0;
options=0;
option_selected=0;
target="";
opened=0;
my_menu=12.1;
determined_planets=0;

var ii;ii=-1;
repeat(51){ii+=1;
    option[ii]="";option_id[ii]=0;option_star[ii]=0;
}


var ii;ii=-1;
repeat(101){ii+=1;
    star[ii]="";star_planet[ii]=0;star_mahreens[ii]=0;
}


width=124;height=24;options=0;

tooltip="";
tooltip2="";





// testing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (obj_controller.menu!=my_menu) and (my_menu=12.1) then obj_controller.fest_repeats=0;
if (obj_controller.menu!=my_menu) then instance_destroy();

/*




option[1]="Great Feast";
option[2]="Tournament";
option[3]="Deathmatch";
option[4]="Commision Relic";
option[5]="Imperial Mass";
option[6]="Cult Sermon";
dro=instance_create(xx+1064,yy+126,obj_dropdown_sel);dro.target="event_type";
            dro=instance_create(xx+1100,yy+184,obj_dropdown_sel);dro.target="event_loc";
            dro=instance_create(xx+1088,yy+271,obj_dropdown_sel);dro.target="event_lavish";
            dro=instance_create(xx+1041,yy+385,obj_dropdown_sel);dro.target="event_display";
            dro=instance_create(xx+1041,yy+443,obj_dropdown_sel);dro.target="event_repeat";


*/



if (target="event_type"){
    with(obj_controller){
        fest_cost=0;
        
        /*
        option[2]="Tournament";
        option[3]="Deathmatch";
        */
        
        if (fest_type="Great Feast"){
            fest_cost=fest_lav*20;if (fest_lav=0) then fest_cost=20;
            if (fest_locals&gt;0) then fest_cost+=20*fest_locals;
            var tt;tt=fest_cost;
            if (fest_feature1=0) then fest_cost=0;
            if (fest_feature2&gt;0) then fest_cost+=round(tt/2);
            if (fest_feature3&gt;0) then fest_cost+=tt;
        }
        if (fest_type="Tournament") or (fest_type="Deathmatch"){
            fest_cost=fest_lav*20;if (fest_lav=0) then fest_cost=20;
            if (fest_locals&gt;0) then fest_cost+=20*fest_locals;
            var tt;tt=fest_cost;
            
            if (fest_feature2&gt;0) then fest_cost+=30;
            if (fest_type="Tournament") and (fest_feature3&gt;0) then fest_cost+=100;
            
            /*if (fest_feature1=0) then fest_cost=0;
            if (fest_feature2&gt;0) then fest_cost+=round(tt/2);
            if (fest_feature3&gt;0) then fest_cost+=tt;*/
        }
        if (fest_type=string(obj_img.player_army)+" Relic"){
            if (fest_feature1=1) then fest_cost=800;
            if (fest_feature2=1) then fest_cost=650;
            if (fest_feature3=1) then fest_cost=300;
            fest_cost+=(fest_lav*20);if (fest_lav=0) then fest_cost+=20;
        }
        if (fest_type="Imperial Mass"){
            fest_cost=fest_lav*40;if (fest_lav=0) then fest_cost=40;
            if (fest_locals&gt;0) then fest_cost+=40*fest_locals;
            var tt;tt=fest_cost;
            if (fest_feature2&gt;0) then fest_cost+=100;
            if (fest_feature3&gt;0) then fest_cost+=50;
        }
        if (fest_type=string(obj_img.player_army)+" Sermon"){
            fest_cost=fest_lav*20;if (fest_lav=0) then fest_cost=20;
            if (fest_locals&gt;0) then fest_cost+=20*fest_locals;
            var tt;tt=fest_cost;
            if (fest_feature2&gt;0) then fest_cost+=round(tt/2);
            if (fest_feature3&gt;0) then fest_cost+=tt;
        }
        if (fest_type="Triumphal March"){
            fest_cost=fest_lav*10;if (fest_lav=0) then fest_cost=10;
            if (fest_locals&gt;0) then fest_cost+=10*fest_locals;
            var tt;tt=fest_cost;
            if (fest_feature1&gt;0) then fest_cost+=tt;
        }
        
        if (fest_cost&gt;0) and (fest_repeats&gt;1) then fest_cost=fest_cost*fest_repeats;
    }
}
if (target="event_honor"){
    if (option_selected&gt;0) then obj_controller.fest_honoring=option_id[option_selected];
    if (option_selected=0) then obj_controller.fest_honoring=0;
}



if (target="event_loc") and (determined_planets=0){
    // Fill out the options for planets
    
    var coo,ide,q;
    coo=-1;ide=0;q=0;
    
    repeat(11){
        coo+=1;ide=0;
        
        repeat(300){ide+=1;
            if (obj_ini.role[coo,ide]!=obj_ini.role[100,6]) and (obj_ini.role[coo,ide]!="Venerable "+string(obj_ini.role[100,6])) and (obj_ini.wid[coo,ide]&gt;0){
                var stahp,first_open;stahp=0;q=0;first_open=0;
                
                repeat(100){
                    if (stahp=0){q+=1;
                        if (star[q]="") and (first_open=0) then first_open=q;
                        if (star[q]=obj_ini.loc[coo,ide]) and (star_planet[q]=obj_ini.wid[coo,ide]){
                            stahp=1;star_mahreens[q]+=1;
                        }
                    }
                }
                if (stahp=0){
                    star[first_open]=obj_ini.loc[coo,ide];
                    star_planet[first_open]=obj_ini.wid[coo,ide];
                    star_marheens[first_open]=1;
                }
            }
        }
    }
    
    determined_planets=1;
}





if (target="event_public"){
    if (obj_controller.fest_warp=1) and (options!=1){option_selected=1;options=1;}
    if (obj_controller.fest_warp=0) and (options=1){options=4;}
    
    if (options&gt;1){
        if (obj_controller.fest_type="Tournament"){option[2]="";option[3]="";options=1;}
        if (obj_controller.fest_type="Deathmatch"){option[2]="";option[3]="";options=1;}
        if (obj_controller.fest_type=string(obj_img.player_army)+" Relic"){option[2]="";option[3]="";options=1;}
        if (obj_controller.fest_type="Triumphal March"){option[2]="";option[3]="";options=1;}
    }
}


if (option[1]=""){
    var ii;ii=0;
    repeat(50){ii+=1;option[ii]="";option_id[ii]=0;}

    if (target="event_type"){
        option[1]="Great Feast";option[2]="Tournament";option[3]="Deathmatch";
        option[4]="Imperial Mass";option[5]=string(obj_img.player_army)+" Sermon";option[6]=string(obj_img.player_army)+" Relic";
        option[7]="Triumphal March";
        options=7;option_selected=1;
    }
    if (target="event_loc"){
        var q,works,thatone;
        q=0;works=1;thatone=false;
        option[1]="None Selected";option_id[1]=-50;
        options=1;option_selected=1;
        
        // Present ship options
        if (obj_controller.fest_planet&lt;=0){
            repeat(70){q+=1;thatone=false;
                if (obj_ini.ship[q]!="") and (obj_ini.ship_carrying[q]&gt;0){
                    works+=1;option[works]=obj_ini.ship[q];option_id[works]=q;options+=1;thatone=false;
                }
            }
        }
        
        // Present planet options
        if (obj_controller.fest_planet=1){
            repeat(80){q+=1;
                if (star[q]!="") and (star_mahreens[q]&gt;0){
                    options+=1;option_star[options]=string(star[q]);
                    option[options]=string(star[q])+" "+scr_roman(star_planet[q]);option_id[options]=star_planet[q];
                }
            }
        }
    }
    if (target="event_lavish"){
        option[1]="Humble";
        option[2]="Minor Expenses";
        option[3]="Opulent";
        option[4]="Lavish";
        option[5]="Excessive";
        option_selected=1;options=5;
    }
    if (target="event_display"){
        var q,arti_work,thatone;
        q=0;arti_work=1;thatone=false;
        option[1]="None";option_id[1]=-50;
        options=1;option_selected=1;
        
        repeat(obj_controller.artifacts){
            q+=1;thatone=false;
            
            if (obj_ini.artifact[q]="Casket") then thatone=true;
            if (obj_ini.artifact[q]="Chalice") then thatone=true;
            if (obj_ini.artifact[q]="Statue") then thatone=true;
            if (obj_ini.artifact[q]="Tome") then thatone=true;
            if (obj_ini.artifact[q]="Robot") then thatone=true;
            
            if (thatone=true){
                arti_work+=1;option[arti_work]=obj_ini.artifact[q];option_id[arti_work]=q;options+=1;thatone=false;
            }
        }
    
    
        // Other big of logic, get eligible artifacts
    }
    if (target="event_repeat"){
        option[1]="Do not repeat";
        option[2]="Repeat once";
        option[3]="Repeat twice";
        option[4]="Repeat thrice";
        option[5]="Year-long event";
        options=5;option_selected=1;
        
        if (obj_controller.fest_type=string(obj_img.player_army)+" Relic"){
            options=1;option_selected=1;
        }
    }
    if (target="event_honor"){
        option[1]="No One";option_id[1]=0;
        option[2]="Yourself";option_id[2]=1;
        option[3]="Specific Company";option_id[3]=2;
        option[4]="Specific Marine";option_id[4]=3;
        option[5]="Specific Faction";option_id[5]=4;
        options=5;option_selected=1;
        
        if (obj_controller.fest_type="Imperial Mass"){
            option[1]="The "+string(obj_img.king_title);option_id[1]=5;
            options=1;option_selected=1;
        }
        if (obj_controller.fest_type="Triumphal March"){
            option[1]=global.chapter_name;option_id[1]=6;
            options=1;option_selected=1;
        }
    }
    
    if (target="event_public"){
        option[1]="No Public";
        option[2]="Nobility";
        option[3]="PDF";
        option[4]="Open Event";
        option_selected=1;options=4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_alpha(1);if (options&lt;=1) then draw_set_alpha(0.5);
draw_set_color(c_gray);
draw_rectangle(x,y,x+width,y+height,0);
draw_set_font(fnt_40k_14);
draw_set_color(c_black);
draw_set_halign(fa_center);
draw_text(x+(width/2),y+2,string(option[option_selected]));


tooltip="";
tooltip2="";


if (scr_hit(x,y,x+width,y+height)=true) and (obj_controller.dropdown_open=0){
    if (options&gt;1){
        draw_set_alpha(0.2);
        draw_set_color(c_white);
        draw_rectangle(x,y,x+width,y+height,0);
    }
    
    if (obj_controller.mouse_left=1) and (obj_controller.cooldown&lt;=0) and (opened=0) and (options&gt;1){
        obj_controller.cooldown=10;opened=1;obj_controller.dropdown_open=1;
    }
    draw_set_alpha(1);
    
    if (option_selected&gt;0){
        if (option[option_selected]!=""){
            tooltip=option[option_selected];
            if (target="event_display") and (option[option_selected]!="None"){tooltip=option[option_selected];tooltip2=scr_arti_descr(option_id[option_selected]);}
            if (target="event_display") and (option[option_selected]="None"){tooltip="Display";tooltip2="There is no Artifact set to be displayed at the event.";}
        }
    }
}



if (opened=1){
    var ii,y5,yyy,hi;
    ii=0;yyy=24;y5=y;hi=24;
    
    repeat(options){ii+=1;
        if (ii!=option_selected) and (ii&lt;=options){
            y5+=hi;yyy+=hi;
            
            draw_set_alpha(1);
            draw_set_color(c_gray);
            draw_rectangle(x,y5,x+width,y5+hi,0);
            draw_set_font(fnt_40k_14);
            draw_set_color(c_black);
            draw_set_halign(fa_center);
            draw_text(x+(width/2),y5+2,string(option[ii]));
            draw_rectangle(x,y5,x+width,y5+hi,1);
            
            if (scr_hit(x,y5,x+width,y5+hi)=true){
                draw_set_alpha(0.2);draw_set_color(c_white);
                draw_rectangle(x,y5,x+width,y5+hi,0);
                
                tooltip=option[ii];
                if (target="event_display") and (option[ii]!="None"){tooltip=option[ii];tooltip2=scr_arti_descr(option_id[ii]);}
                if (target="event_display") and (option[ii]="None"){tooltip="Display";tooltip2="There is no Artifact set to be displayed at the event.";}
                
                if (obj_controller.mouse_left=1) and (obj_controller.cooldown&lt;=0){
                    obj_controller.cooldown=10;
                    obj_controller.dropdown_open=0;
                    opened=0;
                    
                    var no;no=false;
                    if (target="event_type") and (option[ii]!="Great Feast") then no=true;
                    if (no=false) then option_selected=ii;
                    
                    if (target="event_type") and (option[ii]="Great Feast"){
                        obj_controller.fest_type=option[ii];
                        with(obj_dropdown_sel){if (target="event_public") then option[1]="";obj_controller.fest_locals=0;}
                        with(obj_dropdown_sel){if (target="event_repeat") then option[1]="";obj_controller.fest_repeats=1;}
                        with(obj_dropdown_sel){if (target="event_honor") then option[1]="";obj_controller.fest_honor=0;}
                        
                        if (obj_controller.fest_type="Triumphal March"){
                            obj_controller.fest_planet=1;obj_controller.fest_sid=0;obj_controller.fest_wid=0;
                            with(obj_dropdown_sel){if (target="event_loc"){option[1]="";option_selected=1;}}
                        }
                        
                        with(obj_controller){
                            fest_cost=0;fest_lav=0;fest_locals=0;
                            fest_feature1=1;fest_feature2=0;fest_feature3=0;
                            fest_display=0;fest_repeats=1;
                        }
                    }
                    if (target="event_display"){
                        obj_controller.fest_display=option_id[option_selected];
                    }
                    if (target="event_public"){
                        obj_controller.fest_locals=ii-1;
                    }
                    if (target="event_loc"){
                        if (obj_controller.fest_planet&lt;=0){
                            obj_controller.fest_sid=option_id[ii];obj_controller.fest_wid=0;
                            if (option_id[ii]&gt;0){
                                if (obj_controller.fest_warp=0) and (obj_ini.ship_location[option_id[ii]]=obj_img.travel) then obj_controller.fest_warp=1;
                                if (obj_controller.fest_warp=1) and (obj_ini.ship_location[option_id[ii]]!=obj_img.travel) then obj_controller.fest_warp=0;
                                obj_controller.fest_attend=scr_event_dudes(0,0,"",option_id[ii]);
                            }
                            if (option[ii]="None Selected"){obj_controller.fest_sid=0;obj_controller.fest_attend="";}
                        }
                        if (obj_controller.fest_planet=1){
                            obj_controller.fest_wid=option_id[ii];obj_controller.fest_sid=0;obj_controller.fest_star=option_star[ii];
                            if (option[ii]!="None Selected") then obj_controller.fest_attend=scr_event_dudes(0,1,option_star[ii],option_id[ii]);
                            if (option[ii]="None Selected"){obj_controller.fest_wid=0;obj_controller.fest_star="";obj_controller.fest_attend="";}
                        }
                    }
                    if (target="event_lavish"){
                        obj_controller.fest_lav=ii;
                    }
                    if (target="event_repeat"){
                        if (ii&lt;=4) then obj_controller.fest_repeats=ii;
                        if (ii=5) then obj_controller.fest_repeats=12;
                    }
                    
                    
                    
                    
                }
                draw_set_alpha(1);
            }
        }
    }
    
    if (obj_controller.mouse_left=1) and (obj_controller.cooldown&lt;=0) and (scr_hit(x,y,x+width,y5+yyy)=false){opened=0;obj_controller.dropdown_open=0;}
}

if (tooltip="Great Feast") then tooltip2="Holds a massive feast and celebration for your astartes.";
if (tooltip!="Great Feast") and (target="event_type") then tooltip2="(NOT COMPLETED YET)";



if (tooltip!="") and (tooltip2!=""){
    draw_set_alpha(1);
    draw_set_font(fnt_40k_14);draw_set_halign(fa_left);draw_set_color(0);
    draw_rectangle(mouse_x+18,mouse_y+20,mouse_x+string_width_ext(tooltip2,-1,500)+24,mouse_y+44+string_height_ext(tooltip2,-1,500),0);
    draw_set_color(c_gray);
    draw_rectangle(mouse_x+18,mouse_y+20,mouse_x+string_width_ext(tooltip2,-1,500)+24,mouse_y+44+string_height_ext(tooltip2,-1,500),1);
    draw_set_font(fnt_40k_14b);draw_text(mouse_x+22,mouse_y+22,string(tooltip));
    draw_set_font(fnt_40k_14);draw_text_ext(mouse_x+22,mouse_y+42,string(tooltip2),-1,500);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
