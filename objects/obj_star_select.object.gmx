<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_flame</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
owner=0;
target=instance_nearest(x,y,obj_star);
loading=0;
loading_name="";
alarm[0]=1;
debug=0;

population=0;
guard=0;
pdf=0;
fortification=0;
corruption=0;
ork=0;
tau=0;
chaos=0;
torpedo=scr_item_count("Cyclonic Torpedo");

feature="";

button1="";
button2="";
button3="";
button4="";
button5="";
attack=0;
raid=0;
bombard=0;
purge=0;

player_fleet=0;
imperial_fleet=0;
mechanicus_fleet=0;
inquisitor_fleet=0;
eldar_fleet=0;
ork_fleet=0;
tau_fleet=0;
tyranid_fleet=0;
heretic_fleet=0;

en_fleet[0]=0;
var i;i=-1;
repeat(15){i+=1;en_fleet[i]=0;}

if (obj_controller.menu=0) then alarm[1]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
player_fleet=target.present_fleet[1];
imperial_fleet=target.present_fleet[2];
mechanicus_fleet=target.present_fleet[3];
inquisitor_fleet=target.present_fleet[4];
eldar_fleet=target.present_fleet[6];
ork_fleet=target.present_fleet[7];
tau_fleet=target.present_fleet[8];
tyranid_fleet=target.present_fleet[9];
heretic_fleet=target.present_fleet[10];

en_fleet[0]=0;
var i;i=-1;
repeat(15){i+=1;en_fleet[i]=0;}

if (player_fleet&gt;0) and (imperial_fleet+mechanicus_fleet+inquisitor_fleet+eldar_fleet+ork_fleet+tau_fleet+heretic_fleet&gt;0){
    var open;open=1;i=-1;
    
    if (imperial_fleet&gt;0){en_fleet[open]=2;open+=1;}
    if (mechanicus_fleet&gt;0){en_fleet[open]=3;open+=1;}
    if (inquisitor_fleet&gt;0){en_fleet[open]=4;open+=1;}
    if (eldar_fleet&gt;0){en_fleet[open]=6;open+=1;}
    if (ork_fleet&gt;0){en_fleet[open]=7;open+=1;}
    if (tau_fleet&gt;0){en_fleet[open]=8;open+=1;}
    if (tyranid_fleet&gt;0){en_fleet[open]=9;open+=1;}
    if (heretic_fleet&gt;0){en_fleet[open]=10;open+=1;}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


/*if (instance_exists(target)){
    if (target.craftworld=1) or (target.space_hulk=1){
        // 135 ;
        obj_controller.selecting_planet=1;
    
        if (instance_exists(obj_p_fleet)){
            var targ_targ;targ_targ=instance_nearest(target.x+24,target.y-24,obj_p_fleet);
            
            if (instance_exists(targ_targ)){
                if (targ_targ.action="") and (point_distance(target.x+24,target.y-24,targ_targ.x,targ_targ.y)&lt;=40){
                    
                    // if (target.p_owner[obj_controller.selecting_planet]&gt;5){
                        if (button1!=""){button1="Raid";if (targ_targ.capital_number&gt;0) or (targ_targ.frigate_number&gt;0) then button2="Bombard";}
                        if (button1=""){button2="Raid";if (targ_targ.capital_number&gt;0) or (targ_targ.frigate_number&gt;0) then button3="Bombard";}
                    // }
                }
            }
        }
    }
}*/


if (loading=0) then exit;


// check for the right star

var xb, yb, good, tiber;
xb=0;yb=0;good=0;tiber=0;

with(obj_star){
    if (name=obj_star_select.loading_name) then instance_create(x,y,obj_temp2);
}
if (instance_exists(obj_temp2)){
    tiber=instance_nearest(obj_temp2.x,obj_temp2.y,obj_star);target=tiber;
}
with(obj_temp2){instance_destroy();}

instance_activate_object(obj_star);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if (instance_exists(target)){
    if (target.craftworld=1) then obj_controller.selecting_planet=1;
    if (target.space_hulk=1) then obj_controller.selecting_planet=1;
    x=target.x;y=target.y;
    
    // Buttons that are available
    
    if (obj_controller.selecting_planet&gt;0){
        if (target.present_fleet[1]=0)/* and (target.p_type[obj_controller.selecting_planet]!="Dead")*/{
            var enema;enema=false;
            if (target.p_owner[obj_controller.selecting_planet]&gt;5) then enema=true;
            if (obj_controller.faction_status[target.p_owner[obj_controller.selecting_planet]]="War") then enma=true;
            
            if (target.p_player[obj_controller.selecting_planet]&gt;0){
                if (enema=true){button1="Attack";button2="Purge";}
            }
        }
        if (target.present_fleet[1]&gt;0)/* and (target.p_type[obj_controller.selecting_planet]!="Dead")*/{
            var enema;enema=false;
            if (target.p_owner[obj_controller.selecting_planet]&gt;5) then enema=true;
            if (obj_controller.faction_status[target.p_owner[obj_controller.selecting_planet]]="War") then enma=true;
            
            if (enema=true){button1="Attack";button2="Raid";button3="Bombard";}
            if (enema=false){button1="Attack";button2="Raid";button3="Purge";}
            
            if (torpedo&gt;0){
                var pfleet;pfleet=instance_nearest(x,y,obj_p_fleet);
                if (instance_exists(pfleet)) and (point_distance(pfleet.x,pfleet.y,target.x,target.y)&lt;=40) and (pfleet.action=""){
                    if (pfleet.capital_number+pfleet.frigate_number&gt;0) and (button4="") then button4="Cyclonic Torpedo";
                }
            }
            
        }
    
    
    
    
        /*
    
        if (target.present_fleet[1]&gt;0){
            // if (target.p_player[obj_controller.selecting_planet]&gt;0){button1="Attack";button2="Raid";button3="Purge";}
            // if (target.p_player[obj_controller.selecting_planet]=0){button1="Raid";button2="Purge";}
            button1="Attack";button2="Raid";button3="Purge";
        }
        if (target.present_fleet[1]=0) and (target.p_player[obj_controller.selecting_planet]&gt;0){
            button1="Attack";button2="Purge";
        }*/
        if ((target.p_type[obj_controller.selecting_planet]="Dead") and ((target.present_fleet[1]&gt;0) or (target.p_player[obj_controller.selecting_planet]&gt;0))) or (target.p_upgrades[obj_controller.selecting_planet]!=""){
            if (target.p_feature[obj_controller.selecting_planet]="") or (target.p_upgrades[obj_controller.selecting_planet]!=""){var chock;chock=1;
                if (target.p_orks[obj_controller.selecting_planet]&gt;0) then chock=0;
                if (target.p_chaos[obj_controller.selecting_planet]&gt;0) then chock=0;
                if (target.p_tyranids[obj_controller.selecting_planet]&gt;0) then chock=0;
                if (target.p_necrons[obj_controller.selecting_planet]&gt;0) then chock=0;
                if (target.p_tau[obj_controller.selecting_planet]&gt;0) then chock=0;
                if (target.p_demons[obj_controller.selecting_planet]&gt;0) then chock=0;
                if (chock=1){button1="Build";button2="";button3="";button4="";button5="";}
            }
        }
        
        
        /*
        var pp;pp=obj_controller.selecting_planet;
        if (target.p_orks[pp]+target.p_chaos[pp]+target.p_traitors[pp]+target.p_eldar[pp]+target.p_tau[pp]+target.p_tyranids[pp]&gt;0) or (target.p_owner[pp]=8){
            if (button1="Purge") and (target.present_fleet[1]&gt;0) then button1="Bombard";
            if (button2="Purge") and (target.present_fleet[1]&gt;0) then button2="Bombard";
            if (button3="Purge") and (target.present_fleet[1]&gt;0) then button3="Bombard";
            if (button4="Purge") and (target.present_fleet[1]&gt;0) then button4="Bombard";
        }
        */
        
        if (obj_controller.recruiting_worlds_bought&gt;0) and (target.p_owner[obj_controller.selecting_planet]&lt;=5) and (obj_controller.faction_status[target.p_owner[obj_controller.selecting_planet]]!="War"){
            if (string_count("Recr",target.p_feature[obj_controller.selecting_planet])=0) and (target.p_type[obj_controller.selecting_planet]!="Dead") and (target.space_hulk=0){
                button4="+Recruiting";
            }
        }
        if (target.space_hulk=1){
            if (target.present_fleet[1]&gt;0){
                button1="Raid";button2="Bombard";button3="";button4="";
            }
        }
        
        
    }
}





if (obj_controller.popup&lt;3) and (loading=0){
    obj_controller.sel_system_x=0;
    obj_controller.sel_system_y=0;
    obj_controller.selecting_planet=0;
    
    with(obj_star_select){
        instance_destroy();
    }
}



if (loading=1){
    var xx, yy, temp1, dist;
    xx=view_xview[0]+0;
    yy=view_yview[0]+0;
    dist=999;
    
    obj_controller.selecting_planet=0;
    button1="";button2="";button3="";button4="";

    if (instance_exists(target)){
        if (target.space_hulk=1) then exit;
    }
    
    if (target.planets&gt;=1) and (obj_controller.cooldown&lt;=0){
        dist=point_distance(xx+159,yy+287,mouse_x,mouse_y);   
        if (dist&lt;=22) then obj_controller.selecting_planet=1; 
    }
    if (target.planets&gt;=2) and (obj_controller.cooldown&lt;=0){
        dist=point_distance(xx+200,yy+287,mouse_x,mouse_y);   
        if (dist&lt;=22) then obj_controller.selecting_planet=2; 
    }
    if (target.planets&gt;=3) and (obj_controller.cooldown&lt;=0){
        dist=point_distance(xx+241,yy+287,mouse_x,mouse_y);   
        if (dist&lt;=22) then obj_controller.selecting_planet=3; 
    }
    if (target.planets&gt;=4) and (obj_controller.cooldown&lt;=0){
        dist=point_distance(xx+282,yy+287,mouse_x,mouse_y);   
        if (dist&lt;=22) then obj_controller.selecting_planet=4; 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_saveload</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_drop_select</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>obj_controller.diplomacy</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_font(fnt_fancy);
draw_set_halign(fa_center);
draw_set_color(0);

if (obj_controller.menu=60) then exit;

var xx, yy, temp1, dist, close;
xx=view_xview[0]+0;
yy=view_yview[0]+0;
dist=999;close=false;




if (debug!=0) then exit;


if (instance_exists(obj_fleet_select)){
    var free,z;free=1;z=obj_fleet_select;
    if (mouse_x&gt;=view_xview[0]+z.void_x) and (mouse_y&gt;=view_yview[0]+z.void_y) 
    and (mouse_x&lt;view_xview[0]+z.void_x+z.void_wid) and (mouse_y&lt;view_yview[0]+z.void_y+z.void_hei) and (obj_controller.fleet_minimized=0) then free=0;
    
    if (mouse_x&gt;=view_xview[0]+z.void_x) and (mouse_y&gt;=view_yview[0]+z.void_y) 
    and (mouse_x&lt;view_xview[0]+z.void_x+z.void_wid) and (mouse_y&lt;view_yview[0]+137) and (obj_controller.fleet_minimized=1) then free=0;
    if (free=0) then exit;
}



if (obj_controller.selecting_planet&gt;0) and (obj_controller.cooldown&lt;=0){
    var pppp, butt;
    pppp=obj_controller.selecting_planet;
    butt="";
    
    
    /*if (obj_controller.recruiting_worlds_bought&gt;0) and (target.p_owner[obj_controller.selecting_planet]&lt;=5) and (obj_controller.faction_status[target.p_owner[obj_controller.selecting_planet]]!="War"){
        if (mouse_x&gt;=xx+348) and (mouse_y&gt;=yy+601) and (mouse_x&lt;xx+348+246) and (mouse_y&lt;yy+627) and (string_count("Recr",target.p_feature[obj_controller.selecting_planet])=0){
            obj_controller.cooldown=8000;
            obj_controller.recruiting_worlds_bought-=1;
            target.p_feature[obj_controller.selecting_planet]+="Recruiting World|";
            
            if (obj_controller.selecting_planet=1) then obj_controller.recruiting_worlds+=string(target.name)+" I|";
            if (obj_controller.selecting_planet=2) then obj_controller.recruiting_worlds+=string(target.name)+" II|";
            if (obj_controller.selecting_planet=3) then obj_controller.recruiting_worlds+=string(target.name)+" III|";
            if (obj_controller.selecting_planet=4) then obj_controller.recruiting_worlds+=string(target.name)+" IV|";
            
            obj_controller.income_recruiting=(obj_controller.recruiting*-2)*string_count("|",obj_controller.recruiting_worlds);
            
            // 135 ; popup?
        }
    }*/
    
    if (button1!="") and (debug=0){
        if (mouse_x&gt;=xx+348) and (mouse_y&gt;=yy+461) and (mouse_x&lt;xx+348+246) and (mouse_y&lt;yy+461+26){
            butt=button1;obj_controller.cooldown=8000;
        }
    }
    if (button2!="") and (debug=0){
        if (mouse_x&gt;=xx+348) and (mouse_y&gt;=yy+489) and (mouse_x&lt;xx+348+246) and (mouse_y&lt;yy+489+26){
            butt=button2;obj_controller.cooldown=8000;
        }
    }
    if (button3!="") and (debug=0){
        if (mouse_x&gt;=xx+348) and (mouse_y&gt;=yy+517) and (mouse_x&lt;xx+348+246) and (mouse_y&lt;yy+517+26){
            butt=button3;obj_controller.cooldown=8000;
        }
    }
    if (button4!="") and (debug=0){
        if (mouse_x&gt;=xx+348) and (mouse_y&gt;=yy+545) and (mouse_x&lt;xx+348+246) and (mouse_y&lt;yy+545+26){
            butt=button4;obj_controller.cooldown=8000;
        }
    }

    // These need work?
    if (butt="Build"){
        var him;him=instance_create(x,y,obj_temp_build);
        him.target=self.target;him.planet=obj_controller.selecting_planet;
        if (string_count("Lair",target.p_upgrades[obj_controller.selecting_planet])&gt;0) then him.lair=1;
        if (string_count("Arsenal",target.p_upgrades[obj_controller.selecting_planet])&gt;0) then him.arsenal=1;
        if (string_count("Gene",target.p_upgrades[obj_controller.selecting_planet])&gt;0) then him.gene_vault=1;
        
        if (string_count(".0|",target.p_upgrades[obj_controller.selecting_planet])=0){
            if (string_count(".3|",target.p_upgrades[obj_controller.selecting_planet])=1){
                him.lair=him.lair*-3;him.arsenal=him.arsenal*-3;him.gene_vault=him.gene_vault*-3;
            }
            if (string_count(".2|",target.p_upgrades[obj_controller.selecting_planet])=1){
                him.lair=him.lair*-2;him.arsenal=him.arsenal*-2;him.gene_vault=him.gene_vault*-2;
            }
            if (string_count(".1|",target.p_upgrades[obj_controller.selecting_planet])=1){
                him.lair=him.lair*-1;him.arsenal=him.arsenal*-1;him.gene_vault=him.gene_vault*-1;
            }
        }
        
        obj_controller.temp[104]=string(scr_master_loc());
        obj_controller.cooldown=8000;obj_controller.menu=60;
        with(obj_star_select){instance_destroy();}
    }
    if (butt="Raid"){
        instance_create(x,y,obj_drop_select);
        obj_drop_select.p_target=self.target;
        obj_drop_select.sh_target=instance_nearest(x+24,y-24,obj_p_fleet);
        if (instance_nearest(x+24,y-24,obj_p_fleet).acted&gt;1) then with(obj_drop_select){instance_destroy();}
    }
    if (butt="Attack"){
        instance_create(x,y,obj_drop_select);
        obj_drop_select.p_target=self.target;obj_drop_select.attack=1;
        if (target.present_fleet[1]=0) then obj_drop_select.sh_target=-50;
        if (target.present_fleet[1]&gt;0){
            obj_drop_select.sh_target=instance_nearest(x+24,y-24,obj_p_fleet);
            if (instance_nearest(x+24,y-24,obj_p_fleet).acted&gt;=2) then with(obj_drop_select){instance_destroy();}
        }
    }
    if (butt="Purge"){
        instance_create(x,y,obj_drop_select);
        obj_drop_select.p_target=self.target;obj_drop_select.purge=1;
        if (target.present_fleet[1]=0) then obj_drop_select.sh_target=-50;
        if (target.present_fleet[1]&gt;0){
            obj_drop_select.sh_target=instance_nearest(x+24,y-24,obj_p_fleet);
            if (instance_nearest(x+24,y-24,obj_p_fleet).acted&gt;0) then with(obj_drop_select){instance_destroy();}
        }
    }
    if (butt="Bombard"){
        instance_create(x,y,obj_bomb_select);
        if (instance_exists(obj_bomb_select)){
            obj_bomb_select.p_target=self.target;
            obj_bomb_select.sh_target=instance_nearest(x+24,y-24,obj_p_fleet);
            if (instance_nearest(x+24,y-24,obj_p_fleet).acted=0) then instance_create(target.x,target.y,obj_temp3);
            if (instance_nearest(x+24,y-24,obj_p_fleet).acted&gt;0) then with(obj_bomb_select){instance_destroy();}
        }
    }
    if (butt="+Recruiting"){
    if (obj_controller.recruiting_worlds_bought&gt;0) and (target.p_owner[obj_controller.selecting_planet]&lt;=5) and (obj_controller.faction_status[target.p_owner[obj_controller.selecting_planet]]!="War"){
        if (string_count("Recr",target.p_feature[obj_controller.selecting_planet])=0){
            obj_controller.cooldown=8000;
            obj_controller.recruiting_worlds_bought-=1;
            target.p_feature[obj_controller.selecting_planet]+="Recruiting World|";
            
            if (obj_controller.selecting_planet=1) then obj_controller.recruiting_worlds+=string(target.name)+" I|";
            if (obj_controller.selecting_planet=2) then obj_controller.recruiting_worlds+=string(target.name)+" II|";
            if (obj_controller.selecting_planet=3) then obj_controller.recruiting_worlds+=string(target.name)+" III|";
            if (obj_controller.selecting_planet=4) then obj_controller.recruiting_worlds+=string(target.name)+" IV|";
            
            obj_controller.income_recruiting=(obj_controller.recruiting*-2)*string_count("|",obj_controller.recruiting_worlds);
            if (obj_controller.recruiting_worlds_bought=0){
                if (button1="+Recruiting") then button1="";if (button2="+Recruiting") then button2="";
                if (button3="+Recruiting") then button3="";if (button4="+Recruiting") then button4="";
            }
            // 135 ; popup?
        }
    }}
    if (butt="Cyclonic Torpedo"){
        obj_controller.cooldown=6000;
        scr_destroy_planet(2);
    }    
}






if (obj_controller.selecting_planet&gt;0){// Lose focus on no button click
    if (mouse_x&gt;=view_xview[0]+348) and (mouse_y&gt;=view_yview[0]+461) and (mouse_x&lt;view_xview[0]+348+246) and (mouse_y&lt;view_yview[0]+461+26){
        if (instance_exists(obj_star_select)){
            if (obj_star_select.button1!="") then exit;
            if (obj_star_select.button1="") then close=true;
        }
    }
    if (mouse_x&gt;=view_xview[0]+348) and (mouse_y&gt;=view_yview[0]+489) and (mouse_x&lt;view_xview[0]+348+246) and (mouse_y&lt;view_yview[0]+489+26){
        if (instance_exists(obj_star_select)){
            if (obj_star_select.button2!="") then exit;
            if (obj_star_select.button2="") then close=true;
        }
    }
    if (mouse_x&gt;=view_xview[0]+348) and (mouse_y&gt;=view_yview[0]+517) and (mouse_x&lt;view_xview[0]+348+246) and (mouse_y&lt;view_yview[0]+517+26){
        if (instance_exists(obj_star_select)){
            if (obj_star_select.button2!="") then exit;
            if (obj_star_select.button2="") then close=true;
        }
    }
    if (mouse_x&gt;=view_xview[0]+348) and (mouse_y&gt;=view_yview[0]+545) and (mouse_x&lt;view_xview[0]+348+246) and (mouse_y&lt;view_yview[0]+545+26){
        if (instance_exists(obj_star_select)){
            if (obj_star_select.button2!="") then exit;
            if (obj_star_select.button2="") then close=true;
        }
    }
}


if (obj_controller.menu=0) and (obj_controller.zoomed=0) and (!instance_exists(obj_bomb_select)) and (!instance_exists(obj_drop_select)) and (obj_controller.cooldown&lt;=0){
    var closes,sta1,sta2;closes=0;;sta1=0;sta2=0;
    sta1=instance_nearest(mouse_x,mouse_y,obj_star);
    sta2=point_distance(mouse_x,mouse_y,sta1.x,sta1.y);

    if (sta2&gt;15){
        if (scr_hit(xx+27,yy+165,xx+27+320,yy+165+294)=false) then closes+=1;
        if (obj_controller.selecting_planet&gt;0){
            if (scr_hit(xx+27+381,yy+165,xx+27+320+381,yy+165+294)=false) then closes+=1;
        }
        if ((closes=1) and (obj_controller.selecting_planet=0)) or (closes=2){cooldown=0;
            obj_controller.sel_system_x=0;obj_controller.sel_system_y=0;
            obj_controller.selecting_planet=0;obj_controller.popup=0;
            obj_controller.cooldown=0;instance_destroy();
        }
    }
}



if (loading=0){
    if (instance_exists(target)){
        if (target.planets&gt;=1) and (obj_controller.cooldown&lt;=0){
            dist=point_distance(xx+159,yy+287,mouse_x,mouse_y);   
            if (dist&lt;=16) then obj_controller.selecting_planet=1;
        }
        if (target.planets&gt;=2) and (obj_controller.cooldown&lt;=0){
            dist=point_distance(xx+200,yy+287,mouse_x,mouse_y);   
            if (dist&lt;=16) then obj_controller.selecting_planet=2; 
        }
        if (target.planets&gt;=3) and (obj_controller.cooldown&lt;=0){
            dist=point_distance(xx+241,yy+287,mouse_x,mouse_y);   
            if (dist&lt;=16) then obj_controller.selecting_planet=3; 
        }
        if (target.planets&gt;=4) and (obj_controller.cooldown&lt;=0){
            dist=point_distance(xx+282,yy+287,mouse_x,mouse_y);   
            if (dist&lt;=16) then obj_controller.selecting_planet=4; 
        }
    }

    // Exit button
    if (mouse_x&gt;=xx+274) and (mouse_y&gt;=yy+426) and (mouse_x&lt;xx+337) and (mouse_y&lt;yy+451) and (obj_controller.cooldown&lt;=0){
        obj_controller.sel_system_x=0;obj_controller.sel_system_y=0;
        obj_controller.popup=0;obj_controller.cooldown=8000;obj_controller.selecting_planet=0;
        instance_destroy();
    }

}

if (obj_controller.cooldown&lt;=0) and (loading=1){
    if (mouse_x&gt;=xx+274) and (mouse_y&gt;=yy+426) and (mouse_x&lt;xx+337) and (mouse_y&lt;yy+451){
        obj_controller.selecting_planet=0;
        obj_controller.cooldown=8000;
        instance_destroy();
    }
    
    if (obj_controller.selecting_planet&gt;0){
        obj_controller.cooldown=8000;
        obj_controller.unload=obj_controller.selecting_planet;
        obj_controller.return_object=target;
        obj_controller.return_size=obj_controller.man_size;
        
        // 135 ; SPECIAL PLANET CRAP HERE
        
        // Recon Stuff
        var recon;recon=0;
        if (target.p_problem[obj_controller.selecting_planet,1]="recon") then recon=1;
        if (target.p_problem[obj_controller.selecting_planet,2]="recon") then recon=1;
        if (target.p_problem[obj_controller.selecting_planet,3]="recon") then recon=1;
        if (target.p_problem[obj_controller.selecting_planet,4]="recon") then recon=1;
        if (recon=1){
            var arti;arti=instance_create(target.x,target.y,obj_temp7);// Unloading / artifact crap
            arti.num=obj_controller.selecting_planet;arti.alarm[0]=1;
            arti.loc=obj_controller.selecting_location;
            arti.managing=obj_controller.managing;arti.type="recon";
            // Right here should pass the man_sel variables
            // var i;i=-1;repeat(150){i+=1;arti.man_sel[i]=obj_controller.man_sel[i];}
            var i;i=-1;
            repeat(150){i+=1;
                arti.man_sel[i]=0;arti.ide[i]=0;arti.man[i]="";
                if (obj_controller.man_sel[i]!=0){
                    arti.man_sel[i]=obj_controller.ma_lid[i];
                    arti.ide[i]=obj_controller.ide[i];
                    arti.man[i]=obj_controller.man[i];
                }
            }
        }
        
        // Artifact Grab
        if (string_count("Artifact",target.p_feature[obj_controller.selecting_planet])&gt;0) and (recon=0){
            var arti;arti=instance_create(target.x,target.y,obj_temp4);// Unloading / artifact crap
            arti.num=obj_controller.selecting_planet;arti.alarm[0]=1;
            arti.loc=obj_controller.selecting_location;
            arti.managing=obj_controller.managing;
            // Right here should pass the man_sel variables
            // var i;i=-1;repeat(150){i+=1;arti.man_sel[i]=obj_controller.man_sel[i];}
            var i;i=-1;
            repeat(150){i+=1;
                arti.man_sel[i]=0;arti.ide[i]=0;arti.man[i]="";
                if (obj_controller.man_sel[i]!=0){
                    arti.man_sel[i]=obj_controller.ma_lid[i];
                    arti.ide[i]=obj_controller.ide[i];
                    arti.man[i]=obj_controller.man[i];
                }
            }
        }
        
        // STC Grab
        if (string_count("STC",target.p_feature[obj_controller.selecting_planet])&gt;0) and (recon=0){
            var i,tch,mch;i=0;tch=0;mch=0;
            repeat(300){i+=1;
                if (obj_controller.man[i]!="") and (obj_controller.man_sel[i]=1){
                    if (obj_controller.ma_role[i]=obj_ini.role[100,16]) or ((obj_controller.ma_role[i]="Forge Master")){
                        tch+=1;
                    }
                    if (obj_controller.ma_role[i]="Techpriest"){
                        mch+=1;
                    }
                }
            }
            if (tch+mch&gt;0){
                var arti;arti=instance_create(target.x,target.y,obj_temp4);// Unloading / artifact crap
                arti.num=obj_controller.selecting_planet;arti.alarm[0]=1;
                arti.loc=obj_controller.selecting_location;
                arti.managing=obj_controller.managing;
                arti.tch=tch;arti.mch=mch;
                // Right here should pass the man_sel variables
                // var i;i=-1;repeat(150){i+=1;arti.man_sel[i]=obj_controller.man_sel[i];}
                var i;i=-1;
                repeat(150){i+=1;
                    arti.man_sel[i]=0;arti.ide[i]=0;arti.man[i]="";
                    if (obj_controller.man_sel[i]!=0){
                        arti.man_sel[i]=obj_controller.ma_lid[i];
                        arti.ide[i]=obj_controller.ide[i];
                        arti.man[i]=obj_controller.man[i];
                    }
                }
            }
        }
        
        // Ancient Ruins
        if (string_count("Ancient Ruins",target.p_feature[obj_controller.selecting_planet])&gt;0){
            var pip,arti;pip=instance_create(0,0,obj_popup);pip.title="Ancient Ruins";
            
            var nu;nu=string(target.name);
            if (obj_controller.selecting_planet=1) then nu+=" I";if (obj_controller.selecting_planet=2) then nu+=" II";
            if (obj_controller.selecting_planet=3) then nu+=" III";if (obj_controller.selecting_planet=4) then nu+=" IV";
            pip.text="Located upon "+string(nu)+" is a sprawling expanse of ancient ruins, dating back to times long since forgotten.  Locals are superstitious about the place- as a result the ruins are hardly explored.  What they might contain, and any potential threats, are unknown.  What is thy will?";
            pip.option1="Explore the ruins.";pip.option2="Do nothing.";pip.option3="Return your marines to the ship.";pip.image="ancient_ruins";
            
            arti=instance_create(target.x,target.y,obj_temp4);
            arti.num=obj_controller.selecting_planet;arti.alarm[0]=1;
            arti.loc=obj_controller.selecting_location;
            arti.battle_loc=target.name;
            arti.manag=obj_controller.managing;
            arti.obj=target;
            var i;i=-1;
            repeat(150){i+=1;
                arti.man_sel[i]=0;arti.ide[i]=0;arti.man[i]="";
                if (obj_controller.man_sel[i]!=0){
                    arti.man_sel[i]=obj_controller.ma_lid[i];
                    arti.ide[i]=obj_controller.ide[i];
                    arti.man[i]=obj_controller.man[i];
                }
            }
            arti.ship_id=obj_controller.ma_lid[1];
        }
        
        
        
        
        
        
        with(obj_controller.return_object){// This marks that there are forces upon this planet
            p_player[obj_controller.unload]+=obj_controller.man_size;
        }
        
        
        
        instance_destroy();
    }
}


attack=0;bombard=0;raid=0;purge=0;button1="";button2="";button3="";


/*if (obj_controller.selecting_planet&gt;0){
    if (target.p_type[obj_controller.selecting_planet]="Dead") then exit;
}*/












/*

if (target.craftworld=1) or (target.space_hulk=1){
    // 135 ;
    obj_controller.selecting_planet=1;

    if (instance_exists(obj_p_fleet)){
        var targ_targ;targ_targ=instance_nearest(target.x+24,target.y-24,obj_p_fleet);
        
        if (instance_exists(targ_targ)){
            if (targ_targ.action="") and (point_distance(target.x+24,target.y-24,targ_targ.x,targ_targ.y)&lt;=40){
                
                // if (target.p_owner[obj_controller.selecting_planet]&gt;5){
                    if (button1!=""){button1="Raid";if (targ_targ.capital_number&gt;0) or (targ_targ.frigate_number&gt;0) then button2="Bombard";}
                    if (button1=""){button2="Raid";if (targ_targ.capital_number&gt;0) or (targ_targ.frigate_number&gt;0) then button3="Bombard";}
                // }
            }
        }
    }
}



if (obj_controller.selecting_planet&gt;0){
    if (target.p_orks[obj_controller.selecting_planet]&gt;0) or (target.p_tau[obj_controller.selecting_planet]&gt;0) or (target.p_traitors[obj_controller.selecting_planet]&gt;0){
        if (target.p_player[obj_controller.selecting_planet]&gt;0) then button1="Attack";
    }
    if (target.p_type[obj_controller.selecting_planet]="Dead") and ((target.present_fleet[1]&gt;0) or (target.p_player[obj_controller.selecting_planet]&gt;0)){
        if (target.p_feature[obj_controller.selecting_planet]=""){var chock;chock=1;
            if (target.p_orks[obj_controller.selecting_planet]&gt;0) then chock=0;
            if (target.p_chaos[obj_controller.selecting_planet]&gt;0) then chock=0;
            if (target.p_tyranids[obj_controller.selecting_planet]&gt;0) then chock=0;
            if (target.p_necrons[obj_controller.selecting_planet]&gt;0) then chock=0;
            if (target.p_tau[obj_controller.selecting_planet]&gt;0) then chock=0;
            if (target.p_demons[obj_controller.selecting_planet]&gt;0) then chock=0;
            if (chock=1) then button1="Build";
        }
    }
}

if (instance_exists(obj_p_fleet)){
    var targ_targ;
    targ_targ=instance_nearest(target.x+24,target.y-24,obj_p_fleet);
    // 135 buttons
    
    if (targ_targ.owner=1) and (targ_targ.action="") and (point_distance(target.x+24,target.y-24,targ_targ.x,targ_targ.y)&lt;=40){
        if (obj_controller.selecting_planet&gt;0){
            
            if (target.p_owner[obj_controller.selecting_planet]&gt;=7) or (target.p_owner[obj_controller.selecting_planet]=10){
                if (button1!=""){button1="Raid";if (targ_targ.capital_number&gt;0) or (targ_targ.frigate_number&gt;0) then button2="Bombard";}
                if (button1=""){button2="Raid";if (targ_targ.capital_number&gt;0) or (targ_targ.frigate_number&gt;0) then button3="Bombard";}
            }
            /*if (target.p_owner[obj_controller.selecting_planet]=6) or (target.p_owner[obj_controller.selecting_planet]=8){
                if (button1!=""){button1="Raid";if (targ_targ.capital_number&gt;0) or (targ_targ.frigate_number&gt;0) then button2="Bombard";}
                if (button1=""){button2="Raid";if (targ_targ.capital_number&gt;0) or (targ_targ.frigate_number&gt;0) then button3="Bombard";}
            }
            
            if (target.p_owner[obj_controller.selecting_planet]&lt;=3) and (target.p_owner[obj_controller.selecting_planet]!=0){
                button1="Raid";
                
                if (target.p_orks[obj_controller.selecting_planet]&gt;0) and (target.p_player[obj_controller.selecting_planet]&gt;0){button1="Attack";button2="Raid";button3="Purge";}
                if (target.p_tau[obj_controller.selecting_planet]&gt;0) and (target.p_player[obj_controller.selecting_planet]&gt;0){button1="Attack";button2="Raid";button3="Purge";}
                if (target.p_traitors[obj_controller.selecting_planet]&gt;0) and (target.p_player[obj_controller.selecting_planet]&gt;0){button1="Attack";button2="Raid";button3="Purge";}
                if (target.p_tyranids[obj_controller.selecting_planet]&gt;4) and (target.p_player[obj_controller.selecting_planet]&gt;0){button1="Attack";button2="Raid";button3="Purge";}
                if (target.p_tyranids[obj_controller.selecting_planet]&gt;0) and (target.p_player[obj_controller.selecting_planet]&gt;0){
                    if (target.p_problem[obj_controller.selecting_planet,1]="tyranid_org"){button1="Attack";button2="Raid";button3="Purge";}
                    if (target.p_problem[obj_controller.selecting_planet,2]="tyranid_org"){button1="Attack";button2="Raid";button3="Purge";}
                    if (target.p_problem[obj_controller.selecting_planet,3]="tyranid_org"){button1="Attack";button2="Raid";button3="Purge";}
                    if (target.p_problem[obj_controller.selecting_planet,4]="tyranid_org"){button1="Attack";button2="Raid";button3="Purge";}
                }
                
            }
        }
    }
}



*/






if (player_fleet&gt;0) and (imperial_fleet+mechanicus_fleet+inquisitor_fleet+eldar_fleet+ork_fleet+tau_fleet+heretic_fleet&gt;0) and (obj_controller.cooldown&lt;=0){
    var i,x3,y3;i=0;
    // x3=xx+46;y3=yy+252;
    x3=xx+49;y3=yy+441;
    
    var combating;combating=0;
    
    repeat(7){i+=1;
        if (en_fleet[i]&gt;0) and (mouse_x&gt;=x3-24) and (mouse_y&gt;=y3-24) and (mouse_x&lt;x3+48) and (mouse_y&lt;y3+48) and (obj_controller.cooldown&lt;=0){
            obj_controller.cooldown=8;combating=en_fleet[i];
        }
        x3+=64;
    }
    
    if (combating&gt;0){
        obj_controller.combat=combating;
    
        var ii, xx, yy, good, pfleet, enemy_fleet, allied_fleet, ecap, efri, eesc, acap, afri, aesc, e1,e2,e3;
        ii=0;xx=0;yy=0;good=0;pfleet=0;enemy_fleet=0;allied_fleet=0;ecap=0;efri=0;eesc=0;e1=0;e2=0;e3=0;
        ii=-1;repeat(20){ii+=1;enemy_fleet[ii]=0;allied_fleet[ii]=0;ecap[ii]=0;efri[ii]=0;eesc[ii]=0;acap[ii]=0;afri[ii]=0;aesc[ii]=0;}
        
        ii=0;good=1;
        
        obj_controller.temp[1099]=target.name;
        with(obj_p_fleet){if (action!=""){x-=20000;y-=20000;}}
        pfleet=instance_nearest(target.x,target.y,obj_p_fleet);
        with(obj_p_fleet){if (x&lt;-6000) and (y&lt;-6000){x+=20000;y+=20000;}}
        ii=target;
        
        with(obj_temp3){instance_destroy();}
        
        if (good=1){// trying to find the star
            instance_activate_object(obj_star);
            obj_controller.x=ii.x;obj_controller.y=ii.y;// show=current_battle;
            
            strin[1]=string(pfleet.capital_number);
            strin[2]=string(pfleet.frigate_number);
            strin[3]=string(pfleet.escort_number);
            // pull health values here
            strin[4]=string(pfleet.capital_health);
            strin[5]=string(pfleet.frigate_health);
            strin[6]=string(pfleet.escort_health);
            
            // pull enemy ships here
            
            var e;e=1;
            repeat(9){e+=1;
                if (target.present_fleet[e]&gt;0){
                    obj_controller.temp[1070]=target.id;
                    obj_controller.temp[1071]=e;
                    obj_controller.temp[1072]=0;
                    obj_controller.temp[1073]=0;
                    obj_controller.temp[1074]=0;
                    
                    with(obj_temp2){instance_destroy();}
                    with(obj_temp3){instance_destroy();}
                    with(obj_en_fleet){
                        if (orbiting=obj_controller.temp[1070]) and (owner=obj_controller.temp[1071]){
                            obj_controller.temp[1072]+=capital_number;
                            obj_controller.temp[1073]+=frigate_number;
                            obj_controller.temp[1074]+=escort_number;
                            if (string_count("BLOOD",trade_goods)&gt;0) then instance_create(x,y,obj_temp2);
                            if (string_lower(trade_goods)="csm") then instance_create(x,y,obj_temp3);
                        }
                    }
                    
                    var l1,l2;l1=0;l2=0;
                    if (obj_controller.faction_status[e]!="War") and (e!=combating){
                        repeat(10){l1+=1;if (allied_fleet[l1]=0) and (l2=0) then l2=l1;}
                        allied_fleet[l2]=e;
                        acap[l2]=obj_controller.temp[1072];
                        afri[l2]=obj_controller.temp[1073];
                        aesc[l2]=obj_controller.temp[1074];
                    }
                    if (obj_controller.faction_status[e]="War") or (e=9) or (e=combating){
                        repeat(10){l1+=1;if (enemy_fleet[l1]=0) and (l2=0) then l2=l1;}
                        enemy_fleet[l2]=e;
                        ecap[l2]=obj_controller.temp[1072];
                        efri[l2]=obj_controller.temp[1073];
                        eesc[l2]=obj_controller.temp[1074];
                    }
                }
            }
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        obj_controller.cooldown=8000;
        
        // Start battle here
        
        combating=1;
        
        instance_deactivate_all(true);
        instance_activate_object(obj_controller);
        instance_activate_object(obj_ini);
        // instance_activate_object(battle_object[current_battle]);
        instance_activate_object(pfleet);
        instance_activate_object(obj_star);
        
        instance_create(0,0,obj_fleet);
        obj_fleet.star_name=target.name;
        // 
        obj_fleet.enemy[1]=enemy_fleet[1];
        obj_fleet.enemy_status[1]=-1;
        
        obj_fleet.en_capital[1]=ecap[1];
        obj_fleet.en_frigate[1]=efri[1];
        obj_fleet.en_escort[1]=eesc[1];
        
        // Plug in all of the enemies first
        // And then plug in the allies after then with their status set to positive
        
        if (instance_exists(obj_temp3)){
            obj_fleet.csm_exp=1;
            with(obj_temp3){instance_destroy();}
        }
        if (instance_exists(obj_temp2)){
            obj_fleet.csm_exp=2;
            with(obj_temp2){instance_destroy();}
        }
        
        
        stahr=target;
        if (string_count(string(obj_img.hq_ground),stahr.p_feature[1])&gt;0) then obj_fleet.player_lasers=stahr.p_lasers[1];
        if (string_count(string(obj_img.hq_ground),stahr.p_feature[2])&gt;0) then obj_fleet.player_lasers=stahr.p_lasers[2];
        if (string_count(string(obj_img.hq_ground),stahr.p_feature[3])&gt;0) then obj_fleet.player_lasers=stahr.p_lasers[3];
        if (string_count(string(obj_img.hq_ground),stahr.p_feature[4])&gt;0) then obj_fleet.player_lasers=stahr.p_lasers[4];
        instance_deactivate_object(obj_star);
        
        
        
        
        
        // 
        
        
        var i;i=0;
        repeat(8){
            i+=1;if (pfleet.capital[i]!="") then obj_fleet.fighting[pfleet.capital_num[i]]=1;
        }
        
        i=0;
        repeat(30){
            i+=1;if (pfleet.frigate[i]!="") then obj_fleet.fighting[pfleet.frigate_num[i]]=1;
        }
        
        i=0;
        repeat(30){
            i+=1;if (pfleet.escort[i]!="") then obj_fleet.fighting[pfleet.escort_num[i]]=1;
        }
        
        // instance_deactivate_object(battle_object[current_battle]);
        instance_deactivate_object(pfleet);
        
        
        
        obj_controller.combat=1;
        obj_fleet.player_started=1;
        obj_fleet.pla_fleet=pfleet;
        obj_fleet.ene_fleet=target;
        
        
        
        
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_bomb_select</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_drop_select</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_popup</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (obj_controller.zoomed=1) then exit;
if (!instance_exists(target)) then exit;
if (obj_controller.menu=60) then exit;

draw_set_font(fnt_40k_14b);
draw_set_halign(fa_center);
draw_set_color(0);

var xx, yy, temp1,improve;temp1=0;improve=0;
xx=view_xview[0]+0;yy=view_yview[0]+0;
if (loading=1){xx=xx;yy=yy;}


if (target.craftworld=0) and (target.space_hulk=0) then draw_sprite(spr_star_screen,target.planets,xx+27,yy+165);
if (target.craftworld=1) then draw_sprite(spr_star_screen,5,xx+27,yy+165);
if (target.space_hulk=1) then draw_sprite(spr_star_screen,6,xx+27,yy+165);
if (target.craftworld=0) and (target.space_hulk=0) then draw_sprite_ext(target.sprite_index,target.image_index,xx+77,yy+287,1.25,1.25,0,c_white,1);


if (target.owner!=1) then draw_set_color(0);
if (target.owner=1) then draw_set_color(c_blue);
if (target.craftworld=0) and (target.space_hulk=0){
    draw_text_transformed(xx+184,yy+180,string(target.name)+" System",1,1,0);
}

if (target.craftworld=0) and (target.space_hulk=0){
    if (target.owner=1) or (target.owner=5) then draw_set_color(c_white);if (target.owner=2) then draw_set_color(c_gray);
    if (target.owner=3) then draw_set_color(16512);if (target.owner=7) then draw_set_color(38144);
    if (target.owner=8) then draw_set_color(117758);if (target.owner=9) then draw_set_color(7492269);
    if (target.owner=10) then draw_set_color(c_purple);if (target.owner=13) then draw_set_color(65408);
    draw_text_transformed(xx+184,yy+180,string(target.name)+" System",1,1,0);
}


if (global.cheat_debug=true) and (obj_controller.selecting_planet&gt;0) and (loading=0){// lol=0;lx=xx+348;ly=yy+461-28;butt="";       246 long, 26 tall       text: 1/2, +4
    draw_set_color(c_gray);draw_rectangle(xx+184-123,yy+200,xx+184+123,yy+226,0);
    draw_set_color(c_black);draw_text(xx+184,yy+204,"Debug");
    draw_set_color(c_white);draw_set_alpha(0.2);
    if (scr_hit(xx+184-123,yy+200,xx+184+123,yy+226)=true){
        draw_rectangle(xx+184-123,yy+200,xx+184+123,yy+226,0);
        if (obj_controller.cooldown&lt;=0) and (obj_controller.mouse_left=1){
            debug=1;obj_controller.cooldown=8000;
        }
    }
    draw_set_alpha(1);
}



if (loading!=0){draw_set_font(fnt_40k_14);draw_set_color(38144);draw_text(xx+184,yy+202,"Select Destination");}



draw_set_font(fnt_40k_14b);

var pt,xxx;pt=0;
repeat(4){
    pt+=1;xxx=159-41+(pt*41);
    if (target.planets&gt;=pt) and (target.craftworld=0) and (target.space_hulk=0){
        if (target.p_type[pt]="Lava") then temp1=0;if (target.p_type[pt]="Desert") then temp1=2;
        if (target.p_type[pt]="Dead") then temp1=12;if (target.p_type[pt]="Hive") then temp1=4;
        if (target.p_type[pt]="Temperate") or (target.p_type[pt]="Feudal") then temp1=8;if (target.p_type[pt]="Agri") then temp1=6;
        if (target.p_type[pt]="Death") then temp1=5;if (target.p_type[pt]="Ice") then temp1=10;
        if (target.p_type[pt]="Forge") then temp1=3;if (target.p_type[pt]="Daemon") then temp1=14;
        if (target.p_type[pt]="Shrine") then temp1=15;draw_sprite(spr_planets,temp1,xx+xxx,yy+287);
        
        if (target.p_owner[pt]=1) then draw_set_color(c_blue);if (target.p_owner[pt]=2) then draw_set_color(c_gray);
        if (target.p_owner[pt]=3) then draw_set_color(16512);if (target.p_owner[pt]=5) then draw_set_color(c_white);
        if (target.p_owner[pt]=7) then draw_set_color(38144);if (target.p_owner[pt]=8) then draw_set_color(117758);
        if (target.p_owner[pt]=10) then draw_set_color(c_purple);
        
        if (pt=1) then draw_text(xx+xxx,yy+255,"I");if (pt=2) then draw_text(xx+xxx,yy+255,"II");
        if (pt=3) then draw_text(xx+xxx,yy+255,"III");if (pt=4) then draw_text(xx+xxx,yy+255,"IV");
    }
}


if (obj_controller.selecting_planet!=0){
    var pp;pp=obj_controller.selecting_planet;
    var nm, temp1;temp1=0;nm=scr_roman(pp);
    draw_set_halign(fa_center);
    draw_set_font(fnt_40k_14);
    draw_sprite(spr_planet_screen,0,xx+27,yy+165);
    
    
    if (target.p_owner[pp]&lt;=5) and (target.p_orks[pp]+target.p_eldar[pp]+target.p_traitors[pp]+target.p_chaos[pp]+target.p_tyranids[pp]+target.p_necrons[pp]+target.p_demons[pp]+target.p_tau[pp]=0){
        if (target.p_player[pp]&gt;0) or (target.present_fleet[1]&gt;0){
            if (target.p_fortified[pp]&lt;5) then improve=1;
        }
    }
    
    // Draw disposition here
    var succession,yyy;succession=0;yyy=0;
    repeat(4){yyy+=1;if (target.p_problem[pp,yyy]="succession") then succession=1;}
    
    if ((target.dispo[pp]&gt;=0) and (target.p_owner[pp]&lt;=5) and (target.p_population[pp]&gt;0)) and (succession=0){
        var wack;wack=0;
        draw_set_color(c_blue);
        draw_rectangle(xx+349,yy+175,xx+349+(min(100,target.dispo[pp])*3.68),yy+192,0);
    }
    draw_set_color(c_gray);
    draw_rectangle(xx+349,yy+175,xx+717,yy+192,1);
    draw_set_color(c_white);
    
    if (succession=0){
        if (target.dispo[pp]&gt;=0) and (target.p_first[pp]&lt;=5) and (target.p_owner[pp]&lt;=5) and (target.p_population[pp]&gt;0) then draw_text(xx+534,yy+176,"Disposition: "+string(min(100,target.dispo[pp]))+"/100");
        if (target.dispo[pp]&gt;-30) and (target.dispo[pp]&lt;0) and (target.p_owner[pp]&lt;=5) and (target.p_population[pp]&gt;0) then draw_text(xx+534,yy+176,"Disposition: ???/100");
        if ((target.dispo[pp]&gt;=0) and (target.p_first[pp]&lt;=5) and (target.p_owner[pp]&gt;5)) or (target.p_population[pp]&lt;=0) then draw_text(xx+534,yy+176,"-------------");
        if (target.dispo[pp]&lt;=-3000) then draw_text(xx+534,yy+176,"Disposition: N/A");
    }
    if (succession=1) then draw_text(xx+534,yy+176,"War of Succession");
    draw_set_color(c_gray);
    // End draw disposition
    
    draw_set_font(fnt_40k_14b);draw_set_halign(fa_left);
    if (target.craftworld=0) and (target.space_hulk=0) then draw_text(xx+480,yy+196,string(target.name)+" "+string(nm)+"  ("+string(target.p_type[pp])+")");
    if (target.craftworld=1) then draw_text(xx+480,yy+196,string(target.name)+" (Craftworld)");
    // if (target.craftworld=0) and (target.space_hulk=0) then draw_text(xx+534,yy+214,string(target.p_type[pp])+" World");
    // if (target.craftworld=1) then draw_text(xx+594,yy+214,"Craftworld");
    if (target.space_hulk=1) then draw_text(xx+480,yy+196,"Space Hulk");
    
    if (target.p_type[pp]="Lava") and (target.p_population[pp]&gt;0) then temp1=1;
    if (target.p_type[pp]="Lava") and (target.p_population[pp]=0) then temp1=0;
    if (target.p_type[pp]="Desert") then temp1=2;
    if (target.p_type[pp]="Dead") then temp1=10;
    if (target.p_type[pp]="Hive") then temp1=4;
    if (target.p_type[pp]="Temperate") then temp1=8;
    if (target.p_type[pp]="Feudal") then temp1=7;
    if (target.p_type[pp]="Agri") then temp1=6;
    if (target.p_type[pp]="Death") then temp1=5;if (target.p_type[pp]="Ice") then temp1=9;
    if (target.p_type[pp]="Forge") then temp1=3;  
    if (target.p_type[pp]="Daemon") then temp1=11;if (target.p_type[pp]="Craftworld") then temp1=12;
    if (target.p_type[pp]="Space Hulk") then temp1=14;
    if (target.p_type[pp]="Shrine") then temp1=16;
    
    // draw_sprite(spr_planet_splash,temp1,xx+349,yy+194);
    scr_image("planet",temp1,xx+349,yy+194,128,128);
    draw_rectangle(xx+349,yy+194,xx+477,yy+322,1);
    draw_set_font(fnt_40k_14);
    
    
    if (target.p_large[pp]=0){
        var temp2;temp2=string(scr_display_number(target.p_population[pp]));
        draw_text(xx+480,yy+220,"Population: "+string(temp2));
    }
    if (target.p_large[pp]=1){
        draw_text(xx+480,yy+220,"Population: "+string(target.p_population[pp])+" billion");
    }
    
    if (target.craftworld=0) and (target.space_hulk=0){
        var temp3,y7;y7=240;temp3=string(scr_display_number(target.p_guardsmen[pp]));
        if (target.p_guardsmen[pp]&gt;0){draw_text(xx+480,yy+y7,string(obj_img.faction[2])+": "+string(temp3));y7+=20;}
        if (target.p_owner[pp]!=8){var temp4;temp4=string(scr_display_number(target.p_pdf[pp]));draw_text(xx+480,yy+y7,"Defense Force: "+string(temp4));}
        if (target.p_owner[pp]=8){var temp4;temp4=string(scr_display_number(target.p_pdf[pp]));draw_text(xx+480,yy+y7,"Gue'Vesa Force: "+string(temp4));}
    }
    
    var temp5;temp5="";
    
    
    if (target.space_hulk=0){
        if (improve=1){
            draw_set_color(c_green);draw_rectangle(xx+481,yy+280,xx+716,yy+298,0);
            draw_sprite(spr_requisition,0,xx+657,yy+283);
            
            
            var improve_cost,yep,o;improve_cost=1500;
            o=0;yep=0;repeat(4){o+=1;if (obj_ini.adv[o]="Siege Masters") then yep=1;}if (yep=1) then improve_cost=1100;
            
            draw_set_color(0);
            draw_text(xx+671-1,yy+281-1,string(improve_cost));
            draw_text(xx+671+1,yy+281-1,string(improve_cost));
            draw_text(xx+671+1,yy+281+1,string(improve_cost));
            draw_text(xx+671-1,yy+281+1,string(improve_cost));
            draw_set_color(16291875);
            draw_text(xx+671,yy+281,string(improve_cost));
            
            if (scr_hit(xx+481,yy+282,xx+716,yy+300)=true){
                draw_set_color(0);draw_set_alpha(0.2);draw_rectangle(xx+481,yy+280,xx+716,yy+298,0);
                if (obj_controller.cooldown&lt;=0) and (obj_controller.mouse_left=1) and (obj_controller.requisition&gt;=improve_cost){
                    obj_controller.cooldown=8000;obj_controller.requisition-=improve_cost;target.p_fortified[pp]+=1;
                    
                    if (target.dispo[pp]&gt;0) and (target.dispo[pp]&lt;=100){
                        if (target.p_fortified[pp]=1) then target.dispo[pp]=min(100,target.dispo[pp]+8);
                        if (target.p_fortified[pp]=2) then target.dispo[pp]=min(100,target.dispo[pp]+7);
                        if (target.p_fortified[pp]=3) then target.dispo[pp]=min(100,target.dispo[pp]+6);
                        if (target.p_fortified[pp]=4) then target.dispo[pp]=min(100,target.dispo[pp]+5);
                        if (target.p_fortified[pp]=5) then target.dispo[pp]=min(100,target.dispo[pp]+4);
                    }
                }
                
            }
            draw_set_alpha(1);draw_set_color(0);
        }
        
        if (target.p_fortified[pp]=0) then temp5="None";if (target.p_fortified[pp]=1) then temp5="Sparse";
        if (target.p_fortified[pp]=2) then temp5="Light";if (target.p_fortified[pp]=3) then temp5="Moderate";
        if (target.p_fortified[pp]=4) then temp5="Heavy";if (target.p_fortified[pp]=5) then temp5="Major";
        if (target.p_fortified[pp]=6) then temp5="Extreme";
        draw_text(xx+480,yy+280,"Defenses: "+string(temp5));
    }
    
    draw_set_color(c_gray);
    
    if (target.space_hulk=1){
        temp5="Integrity: "+string(floor(target.p_fortified[pp]*20))+"%";
        draw_text(xx+480,yy+280,string(temp5));
    }
    
    var temp6;temp6="???";
    if (max(target.p_heresy[pp],target.p_influence[pp])&lt;=10) then temp6="None";
    if (max(target.p_heresy[pp],target.p_influence[pp])&gt;10) and (max(target.p_heresy[pp],target.p_influence[pp])&lt;=30) then temp6="Little";
    if (max(target.p_heresy[pp],target.p_influence[pp])&gt;30) and (max(target.p_heresy[pp],target.p_influence[pp])&lt;=50) then temp6="Major";
    if (max(target.p_heresy[pp],target.p_influence[pp])&gt;50) and (max(target.p_heresy[pp],target.p_influence[pp])&lt;=70) then temp6="Heavy";
    if (max(target.p_heresy[pp],target.p_influence[pp])&gt;70) and (max(target.p_heresy[pp],target.p_influence[pp])&lt;=96) then temp6="Extreme";
    if (target.p_heresy[pp]&gt;=96) or (target.p_influence[pp]&gt;=96) then temp6="Maximum";
    draw_text(xx+480,yy+300,"Corruption: "+string(temp6));
    
    
    draw_set_font(fnt_40k_14b);
    draw_text(xx+349,yy+326,"Planet Forces");
    draw_text(xx+535,yy+326,"Planet Features");
    draw_set_font(fnt_40k_14);
    
    
    var temp8,t;temp8="";t=-1;
    repeat(8){
        var ahuh,ahuh2,ahuh3;ahuh="";ahuh2=0;ahuh3=0;t+=1;
        
        if (t=0){ahuh="Adepta Sororitas: ";ahuh2=target.p_sisters[pp];}
        if (t=1){ahuh="Ork Presence: ";ahuh2=target.p_orks[pp];}
        if (t=2){ahuh="Tau Presence: ";ahuh2=target.p_tau[pp];}
        if (t=3){ahuh="Tyranid Presence: ";ahuh2=target.p_tyranids[pp];}
        if (t=4){ahuh="Traitor Presence: ";ahuh2=target.p_traitors[pp];if (ahuh2&gt;6) then ahuh="Daemon Presence: ";}
        if (t=5){ahuh="CSM Presence: ";ahuh2=target.p_chaos[pp];}
        if (t=6){ahuh="Daemon Presence: ";ahuh2=target.p_demons[pp];}
        if (t=7){ahuh="Necron Presence: ";ahuh2=target.p_necrons[pp];}
        
        if (t!=0){
            if (ahuh2=1) then ahuh3="Tiny";if (ahuh2=2) then ahuh3="Sparse";
            if (ahuh2=3) then ahuh3="Moderate";if (ahuh2=4) then ahuh3="Heavy";
            if (ahuh2=5) then ahuh3="Extreme";if (ahuh2&gt;=6) then ahuh3="Rampant";
        }
        if (t=0){
            if (ahuh2=1) then ahuh3="Very Few";if (ahuh2=2) then ahuh3="Few";
            if (ahuh2=3) then ahuh3="Moderate";if (ahuh2=4) then ahuh3="Numerous";
            if (ahuh2=5) then ahuh3="Very Numerous";if (ahuh2&gt;=6) then ahuh3="Overwhelming";
        }
        
        if (ahuh!="") and (ahuh2&gt;0) then temp8+=string(ahuh)+" "+string(ahuh3)+"#";
    }
    draw_text(xx+349,yy+346,string(temp8));
    
    
    var fit,to_show,temp9;t=-1;to_show=0;temp9="";
    repeat(11){t+=1;fit[t]="";}
    t=0;to_show=string_count("|",target.p_feature[pp]);
    if (to_show&gt;0){
        explode_script(target.p_feature[pp],"|");
        t+=1;if (to_show&gt;=t) then fit[t]=string_replace(string(explode[0]),"|","");if (string_count("WL",fit[t])&gt;0) and (string_count(fit[t],obj_controller.useful_info)=0) then fit[t]="";
        t+=1;if (to_show&gt;=t) then fit[t]=string_replace(string(explode[1]),"|","");if (string_count("WL",fit[t])&gt;0) and (string_count(fit[t],obj_controller.useful_info)=0) then fit[t]="";
        t+=1;if (to_show&gt;=t) then fit[t]=string_replace(string(explode[2]),"|","");if (string_count("WL",fit[t])&gt;0) and (string_count(fit[t],obj_controller.useful_info)=0) then fit[t]="";
        t+=1;if (to_show&gt;=t) then fit[t]=string_replace(string(explode[3]),"|","");if (string_count("WL",fit[t])&gt;0) and (string_count(fit[t],obj_controller.useful_info)=0) then fit[t]="";
        t+=1;if (to_show&gt;=t) then fit[t]=string_replace(string(explode[4]),"|","");if (string_count("WL",fit[t])&gt;0) and (string_count(fit[t],obj_controller.useful_info)=0) then fit[t]="";
        
        t=0;
        t+=1;if (fit[t]!="") then temp9+=string(fit[t])+"#";
        t+=1;if (fit[t]!="") then temp9+=string(fit[t])+"#";
        t+=1;if (fit[t]!="") then temp9+=string(fit[t])+"#";
        t+=1;if (fit[t]!="") then temp9+=string(fit[t])+"#";
        t+=1;if (fit[t]!="") then temp9+=string(fit[t])+"#";
    }
    draw_text(xx+535,yy+346,string(temp9));
    
    
    if (obj_controller.selecting_planet&gt;0){
        var pppp,pp;pppp=obj_controller.selecting_planet;pp=pppp;
        draw_set_color(c_black);
        draw_set_halign(fa_center);
        
        /*if (obj_controller.recruiting_worlds_bought&gt;0) and (target.p_owner[obj_controller.selecting_planet]&lt;=5) and (obj_controller.faction_status[target.p_owner[obj_controller.selecting_planet]]!="War"){
            if (string_count("Recr",target.p_feature[obj_controller.selecting_planet])=0){
                button4="+Recruiting";
            }
        }*/
        
        var lol,butt,lx,ly;
        lol=0;lx=xx+348;ly=yy+461-28;butt="";
        
        if (debug=0) then repeat(4){ly+=28;lol+=1;butt="";
            if (lol=1) then butt=button1;if (lol=2) then butt=button2;
            if (lol=3) then butt=button3;if (lol=4) then butt=button4;
            
            if (butt!=""){
                draw_set_color(c_gray);draw_rectangle(lx,ly,lx+246,ly+26,0);
                draw_set_color(c_black);draw_set_halign(fa_center);
                draw_set_font(fnt_40k_14b);draw_text(lx+123,ly+4,string(butt));
                draw_set_color(c_white);draw_set_alpha(0.2);
                if (scr_hit(lx,ly,lx+246,ly+26)=true) then draw_rectangle(lx,ly,lx+246,ly+26,0);
            }
            draw_set_alpha(1);
        }
        
        
        
        
        
    }
    
    
    
}


if (target!=0){
    if (player_fleet&gt;0) and (imperial_fleet+mechanicus_fleet+inquisitor_fleet+eldar_fleet+ork_fleet+tau_fleet+heretic_fleet&gt;0){
        draw_set_color(0);draw_set_alpha(0.75);
        draw_rectangle(xx+37,yy+413,xx+270,yy+452,0);
        draw_set_alpha(1);
        
        /*draw_set_color(38144);draw_rectangle(xx+40,yy+247,xx+253,yy+273,1);*/
        
        
        draw_set_halign(fa_left);
        
        
        draw_set_color(0);draw_set_font(fnt_40k_14b);
        draw_text(xx+37,yy+413,"Select Fleet Combat");
        
        draw_set_color(38144);draw_set_font(fnt_40k_14b);
        draw_text(xx+37.5,yy+413.5,"Select Fleet Combat");
        
        var i,x3,y3;i=0;
        // x3=xx+46;y3=yy+252;
        x3=xx+49;y3=yy+441;
        
        repeat(7){i+=1;
            if (en_fleet[i]&gt;0){
                // draw_sprite_ext(spr_force_icon,en_fleet[i],x3,y3,0.5,0.5,0,c_white,1);
                scr_image("force",en_fleet[i],x3-16,y3-16,32,32);
                x3+=64;
            }
        }
        
        
    }
}






if (debug=1){
    var xx,yy,pp;
    xx=view_xview[0]+0;
    yy=view_yview[0]+0;
    
    if (scr_hit(xx+274,yy+426,xx+337,yy+451)=true) and (obj_controller.cooldown&lt;=0) and (obj_controller.mouse_left=1){
        debug=0;obj_controller.cooldown=8000;exit;
    }
    
    xx=view_xview[0]+27;
    yy=view_yview[0]+165;
    pp=obj_controller.selecting_planet;
    
    draw_set_color(c_black);draw_rectangle(xx+9,yy+9,xx+310,yy+260,0);
    draw_set_font(fnt_40k_14b);draw_set_color(c_gray);draw_set_halign(fa_left);
    
    draw_text(xx+11,yy+11,"Orks: "+string(target.p_orks[pp]));
    draw_text(xx+11,yy+31,"Tau: "+string(target.p_tau[pp]));
    draw_text(xx+11,yy+51,"Tyranids: "+string(target.p_tyranids[pp]));
    draw_text(xx+11,yy+71,"Traitors: "+string(target.p_traitors[pp]));
    draw_text(xx+11,yy+91,"CSM: "+string(target.p_chaos[pp]));
    draw_text(xx+11,yy+111,"Daemons: "+string(target.p_demons[pp]));
    draw_text(xx+11,yy+131,"Necrons: "+string(target.p_necrons[pp]));
    draw_text(xx+11,yy+151,"Sisters: "+string(target.p_sisters[pp]));
    
    draw_text(xx+120,yy+11,"[-] [+]");
    draw_text(xx+120,yy+31,"[-] [+]");
    draw_text(xx+120,yy+51,"[-] [+]");
    draw_text(xx+120,yy+71,"[-] [+]");
    draw_text(xx+120,yy+91,"[-] [+]");
    draw_text(xx+120,yy+111,"[-] [+]");
    draw_text(xx+120,yy+131,"[-] [+]");
    draw_text(xx+120,yy+151,"[-] [+]");
    
    if (obj_controller.cooldown&lt;=0) and (obj_controller.mouse_left=1){var cool;cool=false;
        if (mouse_x&gt;=xx+120) and (mouse_x&lt;xx+140){
            if (mouse_y&gt;=yy+11) and (mouse_y&lt;yy+31){target.p_orks[pp]-=1;cool=true;}
            if (mouse_y&gt;=yy+31) and (mouse_y&lt;yy+51){target.p_tau[pp]-=1;cool=true;}
            if (mouse_y&gt;=yy+51) and (mouse_y&lt;yy+71){target.p_tyranids[pp]-=1;cool=true;}
            if (mouse_y&gt;=yy+71) and (mouse_y&lt;yy+91){target.p_traitors[pp]-=1;cool=true;}
            if (mouse_y&gt;=yy+91) and (mouse_y&lt;yy+111){target.p_chaos[pp]-=1;cool=true;}
            if (mouse_y&gt;=yy+111) and (mouse_y&lt;yy+131){target.p_demons[pp]-=1;cool=true;}
            if (mouse_y&gt;=yy+131) and (mouse_y&lt;yy+151){target.p_necrons[pp]-=1;cool=true;}
            if (mouse_y&gt;=yy+151) and (mouse_y&lt;yy+171){target.p_sisters[pp]-=1;cool=true;}
        }
        if (mouse_x&gt;=xx+150) and (mouse_x&lt;xx+170){
            if (mouse_y&gt;=yy+11) and (mouse_y&lt;yy+31){target.p_orks[pp]+=1;cool=true;}
            if (mouse_y&gt;=yy+31) and (mouse_y&lt;yy+51){target.p_tau[pp]+=1;cool=true;}
            if (mouse_y&gt;=yy+51) and (mouse_y&lt;yy+71){target.p_tyranids[pp]+=1;cool=true;}
            if (mouse_y&gt;=yy+71) and (mouse_y&lt;yy+91){target.p_traitors[pp]+=1;cool=true;}
            if (mouse_y&gt;=yy+91) and (mouse_y&lt;yy+111){target.p_chaos[pp]+=1;cool=true;}
            if (mouse_y&gt;=yy+111) and (mouse_y&lt;yy+131){target.p_demons[pp]+=1;cool=true;}
            if (mouse_y&gt;=yy+131) and (mouse_y&lt;yy+151){target.p_necrons[pp]+=1;cool=true;}
            if (mouse_y&gt;=yy+151) and (mouse_y&lt;yy+171){target.p_sisters[pp]+=1;cool=true;}
        }
        if (cool=true) then obj_controller.cooldown=8000;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,16</point>
    <point>96,96</point>
  </PhysicsShapePoints>
</object>
