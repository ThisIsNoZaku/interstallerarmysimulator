<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-19999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
type=0;size=2;y_scale=1;
if (size=1) then sprite_index=spr_popup_small;
if (size=2) then sprite_index=spr_popup_medium;
if (size=3) then sprite_index=spr_popup_large;
image_wid=0;image_hei=0;image="";

master_crafted=0;hide=false;
if (instance_exists(obj_controller)){if (obj_controller.popup_master_crafted!=0) then master_crafted=obj_controller.popup_master_crafted;}
type=0;
size=2;
image="";
title="";
fancy_title=0;
text_center=0;
text="";
text2="";
option1="";
option2="";
option3="";
option4="";
amount=0;
save=0;
loc="";
planet=0;
estimate=0;
mission="";
old_tags="";
giveto=0;
inq_hide=0;
ma_co=0;
ma_id=0;
ma_name="";
manag=0;
fallen=0;
ship_lost=0;
battle_special=0;
owner=0;
tab=1;
woopwoopwoop=0;
press=0;
reset=0;
demand=0;

company=0;
target_comp=-1;
target_role=0;
unit_role="";
units=0;
min_exp=0;
cooldown=20;
all_good=0;

new_target=0;

if (instance_exists(obj_controller)){obj_controller.cooldown=9999;}
number=0;

var i;i=-1;
repeat(11){i+=1;role_name[i]="";role_exp[i]=0;}

req_armor="";req_armor_num=0;have_armor_num=0;
req_gear="";req_gear_num=0;have_gear_num=0;
req_wep1="";req_wep1_num=0;have_wep1_num=0;
req_wep2="";req_wep2_num=0;have_wep2_num=0;
req_mobi="";req_mobi_num=0;have_mobi_num=0;

o_wep1="";o_wep2="";o_armor="";o_gear="";o_mobi="";
n_wep1="";n_wep2="";n_armor="";n_gear="";n_mobi="";
a_wep1="";a_wep2="";a_armor="";a_gear="";a_mobi="";
n_good1=1;n_good2=1;n_good3=1;n_good4=1;n_good5=1;
sel1=0;sel2=0;sel3=0;sel4=0;sel5=0;
vehicle_equipment=0;warning="";

var i;i=-1;
repeat(51){
    i+=1;item_name[i]="";
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Handles the Popups</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Handles the Promoting</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (image="debug_banshee") then obj_controller.cooldown=8;
if (image="chaos_symbol") and (title="Concealed Heresy") and (instance_exists(obj_drop_select)){
    obj_drop_select.alarm[5]=1;
}

if (instance_exists(obj_controller)){
    if (obj_controller.current_eventing="chaos_meeting_1"){
        obj_controller.menu=20;
        obj_controller.diplomacy=10;
        obj_controller.cooldown=5000;
        with(obj_controller){scr_dialogue("cs_meeting1");}
    }
    
    if (obj_controller.current_eventing="chaos_trap"){
        instance_create(0,0,obj_ncombat);
        obj_ncombat.battle_special="cs_meeting_battle10";
        
        with(obj_temp4){instance_destroy();}
        with(obj_star){
            var run,s;run=0;s=0;
            repeat(4){run+=1;s=0;
                repeat(4){s+=1;
                    if (p_problem[run,s]="meeting") or (p_problem[run,s]="meeting_trap"){
                        repeat(run){instance_create(x,y,obj_temp4);}
                    }
                }
            }
        }
        if (instance_number(obj_temp4)=0){
            with(obj_star){
                if (string_count(name,scr_master_loc())&gt;0){
                    repeat(obj_ini.wid[0,1]){instance_create(x,y,obj_temp4);}
                }
            }
        }
        
        obj_ncombat.battle_object=instance_nearest(obj_temp4.x,obj_temp4.y,obj_star);
        obj_ncombat.battle_loc=instance_nearest(obj_temp4.x,obj_temp4.y,obj_star).name;
        obj_ncombat.battle_id=instance_number(obj_temp4);
        with(obj_temp4){instance_destroy();}
        obj_ncombat.dropping=0;
        obj_ncombat.attacking=1;
        obj_ncombat.local_forces=0;
        obj_ncombat.enemy=10;obj_ncombat.threat=3;
        
        with(obj_star){
            var run,s;run=0;s=0;
            repeat(4){run+=1;s=0;
                repeat(4){s+=1;
                    if (p_problem[run,s]="meeting") or (p_problem[run,s]="meeting_trap"){p_problem[run,s]="";p_timer[run,s]=-1;}
                }
            }
        }
        
        obj_controller.useful_info+="CHTRP|";
        
        var v;v=0;
        repeat(obj_temp_meeting.dudes){v+=1;
            if (obj_temp_meeting.present[v]=1){
                obj_ncombat.fighting[obj_temp_meeting.co[v],obj_temp_meeting.ide[v]]=1;
            }
        }
        
        
        scr_civil_roster(obj_ncombat.battle_loc,obj_ncombat.battle_id,true);
        
        instance_deactivate_all(true);
        instance_activate_object(obj_controller);
        instance_activate_object(obj_ini);
        instance_activate_object(obj_temp_meeting);
        instance_activate_object(obj_ncombat);
        instance_activate_object(obj_centerline);
        instance_activate_object(obj_pnunit);
        instance_activate_object(obj_enunit);
        
        exit;
    }
    
    
    if (obj_controller.current_eventing="chaos_meeting_end") and (instance_exists(obj_turn_end)){
        obj_turn_end.alarm[1]=1;obj_controller.current_eventing="";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Reset/Change Equipment</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>



if (company&gt;10) then company=0;

i=0;
repeat(obj_controller.man_max){
    i+=1;
    
    n_wep1="Assortment";n_wep2="Assortment";n_armor="Assortment";n_gear="Assortment";n_mobi="Assortment";
    
    if (obj_controller.man[i]!="") and (obj_controller.man_sel[i]=1) and (vehicle_equipment=0) and (obj_controller.man[i]="man"){
        var check,ih,gi;check=0;ih=0;gi="";
        
        if (obj_controller.ma_role[i]=obj_ini.role[100,2]) then ih=2;
        if (obj_controller.ma_role[i]=obj_ini.role[100,3]) then ih=3;
        if (obj_controller.ma_role[i]=obj_ini.role[100,4]) then ih=4;
        if (obj_controller.ma_role[i]=obj_ini.role[100,6]) then ih=6;
        if (obj_controller.ma_role[i]=obj_ini.role[100,8]) then ih=8;
        if (obj_controller.ma_role[i]=obj_ini.role[100,9]) then ih=9;
        if (obj_controller.ma_role[i]=obj_ini.role[100,10]) then ih=10;
        if (obj_controller.ma_role[i]=obj_ini.role[100,12]) then ih=12;
        if (obj_controller.ma_role[i]=obj_ini.role[100,14]) then ih=14;
        if (obj_controller.ma_role[i]=obj_ini.role[100,15]) then ih=5;
        if (obj_controller.ma_role[i]=obj_ini.role[100,16]) then ih=16;
        if (obj_controller.ma_role[i]=obj_ini.role[100,17]) then ih=17;
        if (ih!=0){
            gi=obj_ini.wep1[100,ih];if (gi!="") then n_wep1=gi;
            if (gi="Heavy Ranged"){
                var onceh;onceh=0;
                if (scr_item_count("Missile Launcher")&gt;0) and (onceh=0){n_wep1="Missile Launcher";onceh=1;}
                if (scr_item_count(string(obj_img.laser)+"cannon")&gt;0) and (onceh=0){n_wep1=string(obj_img.laser)+"cannon";onceh=1;}
                if (scr_item_count("Heavy "+string(obj_img.gyro))&gt;0) and (onceh=0){n_wep1="Heavy "+string(obj_img.gyro);onceh=1;}
                if (onceh=0) then n_wep1="";
            }
            gi=obj_ini.wep2[100,ih];if (gi!="") then n_wep2=gi;
            gi=obj_ini.armor[100,ih];if (gi!="") then n_armor=gi;gi=obj_ini.gear[100,ih];if (gi!="") then n_gear=gi;
            gi=obj_ini.mobi[100,ih];if (gi!="") then n_mobi=gi;
        }
        
        
        if (n_armor=obj_controller.ma_armor[i]) then check=1;
        if (check=0) and (n_armor!=obj_controller.ma_armor[i]) and (n_armor!="Assortment"){
            if (string_count("Dread",obj_ini.armor[company,obj_controller.ide[i]])=0){
                if (obj_ini.armor[company,obj_controller.ide[i]]!="") then scr_add_item(obj_ini.armor[company,obj_controller.ide[i]],1);
                obj_controller.ma_armor[i]="";obj_ini.armor[company,obj_controller.ide[i]]="";
                scr_add_item(n_armor,-1);
                obj_controller.ma_armor[i]=n_armor;obj_ini.armor[company,obj_controller.ide[i]]=n_armor;
            }
        }
        // End swap armor
        
        
        // if (n_wep1=n_wep2) and (
        
        
        if (n_wep1=obj_controller.ma_wep2[i]) and (n_wep2!="Assortment") and (n_wep1!="Assortment"){
            var temp;temp="";
            temp=obj_controller.ma_wep1[i];// Get temp
            obj_controller.ma_wep1[i]=obj_controller.ma_wep2[i];
            obj_ini.wep1[company,obj_controller.ide[i]]=obj_ini.wep2[company,obj_controller.ide[i]];// Wep2 -&gt; Wep1
            obj_controller.ma_wep2[i]=temp;
            obj_ini.wep2[company,obj_controller.ide[i]]=temp;
        }
        if (n_wep2=obj_controller.ma_wep1[i]) and (n_wep2!="Assortment") and (n_wep1!="Assortment"){
            var temp;temp="";
            temp=obj_controller.ma_wep2[i];// Get temp
            obj_controller.ma_wep2[i]=obj_controller.ma_wep1[i];
            obj_ini.wep2[company,obj_controller.ide[i]]=obj_ini.wep1[company,obj_controller.ide[i]];// Wep1 -&gt; Wep2
            obj_controller.ma_wep1[i]=temp;
            obj_ini.wep1[company,obj_controller.ide[i]]=temp;
        }
        
        
        
        check=0;
        if (obj_controller.ma_role[i]="Standard Bearer"){
            if (obj_controller.ma_wep1[i]="Company Standard") and (n_wep1!="Company Standard") and (n_wep2!="Company Standard") then check=1;
        }
        if (n_wep1=obj_controller.ma_wep1[i]) or (n_wep1="Assortment") then check=1;
        if (check=0) and (obj_controller.ma_wep1[i]!=n_wep1) and (obj_controller.ma_wep1[i]!=n_wep2) and (n_wep1!="Assortment"){
            if (obj_ini.wep1[company,obj_controller.ide[i]]!="") and (obj_controller.ma_wep1[i]!=n_wep1){
                scr_add_item(obj_ini.wep1[company,obj_controller.ide[i]],1);
                obj_controller.ma_wep1[i]="";obj_ini.wep1[company,obj_controller.ide[i]]="";
            }
            if (n_wep1!=""){
                scr_add_item(n_wep1,-1);
                obj_controller.ma_wep1[i]=n_wep1;obj_ini.wep1[company,obj_controller.ide[i]]=n_wep1;
            }
            /*if (obj_ini.wep1[company,obj_controller.ide[i]]!="") and (obj_controller.ma_wep1[i]=""){
                obj_controller.ma_wep1[i]=n_wep1;obj_ini.wep1[company,obj_controller.ide[i]]=n_wep1;
                scr_add_item(n_wep1,-1);check=5;
            }*/
        }
        /*if (check=0) and (obj_controller.ma_wep2[i]=n_wep1) and (n_wep1!="Assortment"){
            var temp;temp="";temp=obj_controller.ma_wep1[i];// Get temp
            obj_controller.ma_wep1[i]=obj_controller.ma_wep2[i];obj_ini.wep1[company,obj_controller.ide[i]]=obj_ini.wep2[company,obj_controller.ide[i]];// Wep2 -&gt; Wep1
            obj_controller.ma_wep2[i]=temp;obj_ini.wep2[company,obj_controller.ide[i]]=temp;check=5;
        }*/
        // End swap weapon
        
        check=0;
        if (obj_controller.ma_role[i]="Standard Bearer"){
            if (obj_controller.ma_wep2[i]="Company Standard") and (n_wep1!="Company Standard") and (n_wep2!="Company Standard") then check=1;
        }
        if (n_wep2=obj_controller.ma_wep2[i]) or (n_wep2="Assortment") then check=1;
        if (check=0) and (n_wep2!=obj_controller.ma_wep2[i]) and (n_wep1!=obj_controller.ma_wep2[i]) and (n_wep2!="Assortment"){
            if (obj_ini.wep2[company,obj_controller.ide[i]]!="") and (obj_controller.ma_wep2[i]!=n_wep2){
                scr_add_item(obj_ini.wep2[company,obj_controller.ide[i]],1);
                obj_controller.ma_wep2[i]="";obj_ini.wep2[company,obj_controller.ide[i]]="";
            }
            if (n_wep2!=""){
                scr_add_item(n_wep2,-1);
                obj_controller.ma_wep2[i]=n_wep2;obj_ini.wep2[company,obj_controller.ide[i]]=n_wep2;
            }
            /*if (obj_ini.wep2[company,obj_controller.ide[i]]!="") and (obj_controller.ma_wep2[i]=""){
                obj_controller.ma_wep2[i]=n_wep2;obj_ini.wep2[company,obj_controller.ide[i]]=n_wep2;
                scr_add_item(n_wep2,-1);check=5;
            }*/
        }
        /*if (check=0) and (n_wep1=obj_controller.ma_wep2[i]) and (n_wep2!="Assortment"){
            var temp;temp="";temp=obj_controller.ma_wep2[i];// Get temp
            obj_controller.ma_wep2[i]=obj_controller.ma_wep2[i];obj_ini.wep2[company,obj_controller.ide[i]]=obj_ini.wep1[company,obj_controller.ide[i]];// Wep2 -&gt; Wep1
            obj_controller.ma_wep1[i]=temp;obj_ini.wep1[company,obj_controller.ide[i]]=temp;
        }*/
        // End swap weapon
        
        check=0;
        if (n_gear=obj_controller.ma_gear[i]) then check=1;
        if (check=0) and (n_gear!=obj_controller.ma_gear[i]) and (n_gear!="Assortment"){
            if (obj_ini.gear[company,obj_controller.ide[i]]!="") then scr_add_item(obj_ini.gear[company,obj_controller.ide[i]],1);
            obj_controller.ma_gear[i]="";obj_ini.gear[company,obj_controller.ide[i]]="";
            if (n_gear!="(None") and (n_gear!=""){obj_controller.ma_gear[i]=n_gear;obj_ini.gear[company,obj_controller.ide[i]]=n_gear;}
            if (n_gear!="") then scr_add_item(n_gear,-1);
        }
        // End swap gear
        
        check=0;
        if (n_mobi=obj_controller.ma_mobi[i]) then check=1;
        if (check=0) and (n_mobi!=obj_controller.ma_mobi[i]) and (n_mobi!="Assortment"){
            if (string_count("Terminator",obj_ini.armor[company,obj_controller.ide[i]])=0) and (obj_ini.armor[company,obj_controller.ide[i]]!="Tartaros"){
                if (obj_ini.mobi[company,obj_controller.ide[i]]!="") then scr_add_item(obj_ini.mobi[company,obj_controller.ide[i]],1);
                obj_controller.ma_mobi[i]="";obj_ini.mobi[company,obj_controller.ide[i]]="";
                obj_controller.ma_mobi[i]=n_mobi;obj_ini.mobi[company,obj_controller.ide[i]]=n_mobi;
                if (n_mobi!="") then scr_add_item(n_mobi,-1);
            }
        }
        // End mobility
        
        /*
        if (obj_controller.ma_wep1[i]="(None)") then obj_controller.ma_wep1[i]="";
        if (obj_controller.ma_wep2[i]="(None)") then obj_controller.ma_wep2[i]="";
        if (obj_controller.ma_armor[i]="(None)") then obj_controller.ma_armor[i]="";
        if (obj_controller.ma_gear[i]="(None)") then obj_controller.ma_gear[i]="";
        if (obj_controller.ma_mobi[i]="(None)") then obj_controller.ma_mobi[i]="";
        if (obj_ini.wep1[company,obj_controller.ide[i]]="(None)") then obj_ini.wep1[company,obj_controller.ide[i]]="";
        if (obj_ini.wep2[company,obj_controller.ide[i]]="(None)") then obj_ini.wep2[company,obj_controller.ide[i]]="";
        if (obj_ini.armor[company,obj_controller.ide[i]]="(None)") then obj_ini.armor[company,obj_controller.ide[i]]="";
        if (obj_ini.gear[company,obj_controller.ide[i]]="(None)") then obj_ini.gear[company,obj_controller.ide[i]]="";
        if (obj_ini.mobi[company,obj_controller.ide[i]]="(None)") then obj_ini.mobi[company,obj_controller.ide[i]]="";
        */
        
    }// End that [i]
    
}// End repeat

obj_controller.cooldown=10;
instance_destroy();exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (battle_special=3.1){
    var that;
    
    
    // show_message(string(obj_popup.loc)+": planet name, "+string(loc)+", "+string(planet));
    
    
    with(obj_star){if (name!=obj_popup.loc) then instance_deactivate_object(id);}
    that=instance_nearest(room_width/2,room_height/2,obj_star);
    instance_activate_all();
    
    instance_create(0,0,obj_ncombat);
    obj_ncombat.enemy=3;
    obj_ncombat.battle_object=that;
    obj_ncombat.battle_loc=loc;
    obj_ncombat.battle_id=planet;
    obj_ncombat.fortified=5;
    obj_ncombat.battle_special="mech_stc";
    obj_ncombat.threat=4;
    obj_ncombat.formation_set=3;
    
    instance_deactivate_all(true);
    instance_activate_object(obj_ini);
    instance_activate_object(obj_controller);
    instance_activate_object(obj_ncombat);
    
    scr_battle_roster(loc,planet,true);
}
instance_destroy();exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hide=true) then exit;

if (cooldown&gt;=0) and (cooldown&lt;=40) then cooldown-=1;
if (instance_exists(obj_controller)){if (obj_controller.zoomed=1) then with(obj_controller){scr_zoom();}}


if keyboard_check_pressed(ord('1')) and (cooldown&lt;=0) then press=1;
if keyboard_check_pressed(ord('2')) and (cooldown&lt;=0) then press=2;
if keyboard_check_pressed(ord('3')) and (cooldown&lt;=0) then press=3;
if (press=1) and (option1="") then press=0;
if (press=2) and (option2="") then press=0;
if (press=3) and (option3="") then press=0;
if (press!=0) and (cooldown&gt;0){press=0;exit;}

if (type!=6) and (master_crafted=1) then master_crafted=0;

if (type=9.1) and (obj_controller.stc_wargear_un+obj_controller.stc_vehicles_un+obj_controller.stc_ships_un&lt;=0){
    obj_controller.cooldown=10;instance_destroy();exit;
}



if (image="fuklaw") and (save&gt;0){
    if (press=1){
        var del;del=obj_saveload.save[self.save];
        if (file_exists("save"+string(del)+".ini")){
            file_delete("save"+string(del)+".ini");
            if (file_exists("save"+string(del)+"log.ini")){file_delete("save"+string(del)+"log.ini");}
            if (file_exists("screen"+string(del)+".png")){file_delete("screen"+string(del)+".png");}
            with(obj_saveload){instance_destroy();}
            var news;news=instance_create(0,0,obj_saveload);
            news.menu=woopwoopwoop;news.top=owner;news.alarm[4]=1;
            
            instance_destroy();
        }
    }
    if (press=2){instance_destroy();}
    exit;
}



if (room_get_name(room)="Main_Menu") and (title="Tutorial"){
    if (press=2){// 1: yes, 2: no (without disabling)
        obj_main_menu_buttons.fading=1;
        obj_main_menu_buttons.crap=3;
        obj_main_menu_buttons.cooldown=9999;
        instance_destroy();
    }
    if (press=3){ini_open("saves.ini");ini_write_real("Data","tutorial",1);ini_close();}
    
    if (press&gt;=2){
        obj_main_menu_buttons.fading=1;
        obj_main_menu_buttons.crap=self.press;
        obj_main_menu_buttons.cooldown=9999;
        instance_destroy();
    }
    exit;
}




if (image="debug_banshee") and (cooldown&lt;=0){
    if (planet=2){
        if (press=1) or (press=3){
            if (press=1) then amount=7;
            if (press=3) then amount=9;
            with(obj_star){
                if (choose(0,1,1)=1) and (owner!=6) and (owner!=1){
                    var fleet;
                    fleet=instance_create(x+32,y,obj_en_fleet);
                    fleet.owner=obj_popup.amount;
                    if (obj_popup.amount=7){fleet.sprite_index=spr_fleet_ork;fleet.capital_number=3;present_fleet[7]+=1;}
                    if (obj_popup.amount=9){
                        if (present_fleet[1]=0) then vision=0;
                        fleet.sprite_index=spr_fleet_tyranid;fleet.capital_number=3;fleet.frigate_number=6;fleet.escort_number=16;present_fleet[9]+=1;
                    }
                    fleet.image_index=4;
                    fleet.orbiting=id;
                }
            }
            instance_destroy();
        }
        if (press=2){
            with(obj_star){
                if (choose(0,1,1)=1) and (owner!=6) and (owner!=1){
                    var h;h=0;repeat(4){h+=1;if (p_type[h]!="Dead") and (p_type[h]!=""){p_traitors[h]=5;p_chaos[h]=4;}}
                }
            }
            instance_destroy();
        }
    }
    if (planet=5){
        if (press=1){
            var fleet,tar;tar=instance_nearest(x,y,obj_star);
            fleet=instance_create(tar.x+32,tar.y-0,obj_en_fleet);
            fleet.owner=7;fleet.sprite_index=spr_fleet_ork;
            fleet.capital_number=2;fleet.frigate_number=5;
            tar.present_fleet[7]+=1;fleet.image_index=4;
            fleet.orbiting=id;instance_destroy();
        }
        if (press=2){
            var fleet,tar;tar=instance_nearest(x,y,obj_star);
            fleet=instance_create(tar.x-24,tar.y-24,obj_en_fleet);
            fleet.owner=8;fleet.sprite_index=spr_fleet_tau;
            fleet.capital_number=2;fleet.frigate_number=5;
            tar.present_fleet[8]+=1;fleet.image_index=4;
            fleet.orbiting=id;instance_destroy();
        }
        if (press=3) then instance_destroy();
    }
    if (planet=3){
        if (press=1){
            var fleet,tar;tar=instance_nearest(x,y,obj_star);
            fleet=instance_create(tar.x+0,tar.y-24,obj_en_fleet);
            fleet.owner=2;fleet.sprite_index=spr_fleet_imperial;
            fleet.capital_number=2;fleet.frigate_number=5;
            tar.present_fleet[2]+=1;fleet.image_index=4;
            fleet.orbiting=id;
            instance_destroy();
        }
        if (press=2){
            var fleet,tar;tar=instance_nearest(x,y,obj_star);
            fleet=instance_create(tar.x-32,tar.y-0,obj_en_fleet);
            fleet.owner=10;fleet.sprite_index=spr_fleet_chaos;
            fleet.capital_number=2;fleet.frigate_number=5;
            tar.present_fleet[10]+=1;fleet.image_index=4;
            fleet.orbiting=id;
            instance_destroy();
        }
        if (press=3){planet=5;cooldown=30;text="Ork, Tau, Cancel?";option1="Ork";option2="Tau";option3="Cancel";press=0;exit;}
    }
    if (planet=1){
        if (press=1){planet=2;cooldown=30;text="Select a faction";option1="Orks";option2="Chaos";option3="Tyranids";press=0;exit;}
        if (press=2){planet=3;cooldown=30;text="Imperium, Heretic, or Xeno?";option1="Imperium";option2="Heretic";option3="Xeno";press=0;exit;}
        if (press=3){
            var flit1,flit2,onceh;onceh=0;
            flit1=instance_nearest(x,y,obj_p_fleet);
            flit2=instance_nearest(x,y,obj_en_fleet);
            
            if (instance_exists(flit1)) and (instance_exists(flit2)){
                if (point_distance(x,y,flit1.x,flit1.y)&gt;point_distance(x,y,flit2.x,flit2.y)) then with(flit2){instance_destroy();}
                else with(flit1){instance_destroy();}
                onceh=1;
            }
            if (onceh=0) and (!instance_exists(flit1)) and (instance_exists(flit2)){if (point_distance(x,y,flit2.x,flit2.y)&lt;=40) then with(flit2){instance_destroy();}onceh=1;}
            if (onceh=0) and (instance_exists(flit1)) and (!instance_exists(flit2)){if (point_distance(x,y,flit1.x,flit1.y)&lt;=40) then with(flit1){instance_destroy();}onceh=1;}
            
            instance_destroy();
        }
    }
    exit;
}







if ((title="Inquisition Mission") or (title="Inquisition Recon")) and (title!="Artifact Located") and (obj_controller.demanding=1) then demand=1;



if (image="chaos_messenger") and (title="Chaos Meeting"){
    if (mission="meeting_1") or (mission="meeting_1t"){
        if (option1=""){
            option1="Die, heretic!";option2="Very well.  Lead the way.";
            option3="I must take care of an urgent matter first.  (Exit)";
            exit;
        }
        if (option1!=""){
            if (press=1){
                with(obj_star){var i,r;i=0;r=0;
                    repeat(4){i+=1;r=0;repeat(4){r+=1;if (p_problem[i,r]="meeting") or (p_problem[i,r]="meeting_trap"){p_problem[i,r]="";p_timer[i,r]=-1;}}}
                }
                obj_controller.disposition[10]-=10;
                text="The heretic is killed in a most violent fashion.  With a lack of go-between the meeting cannot proceed.";
                option1="";option2="";option3="";mission="";// image="";
                if (obj_controller.blood_debt=1){obj_controller.penitent_current+=1;obj_controller.penitent_turn=0;obj_controller.penitent_turnly=0;}
                with(obj_temp_meeting){instance_destroy();}
                cooldown=20;exit;
            }
            if (press=2) and (mission="meeting_1"){
                obj_controller.complex_event=true;obj_controller.current_eventing="chaos_meeting_1";
                text="You signal your readiness to the heretic.  Nearly twenty minutes of following the man passes before you all enter an ordinary-looking structure.  Down, within the basement, you then pass into the entrance of a tunnel.  As the trek downward continues more and more heretics appear- cultists, renegades that appear to be from the local garrison, and occasionally even the fallen of your kind.  Overall the heretics seem well supplied and equip.  This observation is interrupted as your group enters into a larger chamber, revealing a network of tunnels and what appears to be ancient catacombs.  Bones of the ancient dead, the forgotten, litter the walls and floor.  And the chamber seems to open up wider, and wider, until you find yourself within a hall.  Within this hall, waiting for you, are several dozen Chaos Terminators, a Greater Daemon of Tzeentch and Slaanesh, and Chaos Lord "+string(obj_controller.faction_leader[10])+".";
                option1="";option2="";option3="";mission="cslord1";image="";img=0;image_wid=0;size=3;
                cooldown=20;exit;
            }
            if (press=2) and (mission="meeting_1t"){
                with(obj_star){var i,r;i=0;r=0;
                    repeat(4){i+=1;r=0;repeat(4){r+=1;if (p_problem[i,r]="meeting") or (p_problem[i,r]="meeting_trap"){p_problem[i,r]="";p_timer[i,r]=-1;}}}
                }
                obj_controller.complex_event=true;obj_controller.current_eventing="chaos_trap";
                text="You signal your readiness to the heretic.  Nearly twenty minutes of following the man passes before you all enter an ordinary-looking structure.  Down, within the basement, you then pass into the entrance of a tunnel.  As the trek downward continues more and more heretics appear- cultists, renegades that appear to be from the local garrison, and occasionally even the fallen of your kind.  Overall the heretics seem well supplied and equip.  This observation is interrupted as your group enters into a larger chamber, revealing a network of tunnels and what appears to be ancient catacombs.  Bones of the ancient dead, the forgotten, litter the walls and floor.  And the chamber seems to open up wider, and wider, until you find yourself within a hall.  Within this hall, waiting for you, are several dozen Chaos Terminators, a handful of Helbrute, and many more Chaos Space Marines.  The Chaos Lord is nowhere to be seen.  It is a trap.";
                option1="";option2="";option3="";mission="cslord1t";image="";img=0;image_wid=0;size=3;
                cooldown=20;exit;
            }
            if (press=3) and (instance_exists(obj_turn_end)){
                if (number!=0) then obj_turn_end.alarm[1]=4;
                with(obj_temp_meeting){instance_destroy();}
                instance_destroy();
            }
        }
    }
}


if (title="Scheduled Event"){
    if (option1=""){option1="Yes!";option2="No.";exit;}
    
    if (press=1) and (!instance_exists(obj_event)){
        instance_create(0,0,obj_event);
        if (obj_controller.fest_planet=0) then obj_controller.fest_attend=scr_event_dudes(1,0,"",obj_controller.fest_sid);
        if (obj_controller.fest_planet=1) then scr_event_dudes(1,1,obj_controller.fest_star,obj_controller.fest_wid);
        hide=true;cooldown=6000;title="Scheduled Event:2";
        exit;
    }
    if (press=2){
        obj_controller.fest_repeats-=1;
        if (obj_controller.fest_repeats&lt;=0){
            obj_controller.fest_scheduled=0;
            
            instance_create(0,0,obj_event);
            if (obj_controller.fest_planet=0) then obj_controller.fest_attend=scr_event_dudes(1,0,"",obj_controller.fest_sid);
            if (obj_controller.fest_planet=1) then scr_event_dudes(1,1,obj_controller.fest_star,obj_controller.fest_wid);
            
            with(obj_event){
                var ide;ide=0;
                repeat(700){ide+=1;
                    if (attend_corrupted[ide]=0) and (attend_id[ide]&gt;0){
                        if (string_count("Chaos",obj_ini.artifact_tags[obj_controller.fest_display])&gt;0){
                            obj_ini.chaos[attend_co[ide],attend_id[ide]]+=choose(1,2,3,4);
                        }
                        if (string_count("Daem",obj_ini.artifact_tags[obj_controller.fest_display])&gt;0){
                            obj_ini.chaos[attend_co[ide],attend_id[ide]]+=choose(6,7,8,9);
                        }
                        attend_corrupted[ide]=1;
                    }
                }
            }
            with(obj_event){instance_destroy();}
            
            var p1,p2,p3;
            p1=obj_controller.fest_type;p3="";
            p2=obj_controller.fest_planet;
            
            if (p2&gt;0) then p3=string(obj_controller.fest_star)+" "+scr_roman(obj_controller.fest_wid);
            if (p2&lt;=0) then p3=+" the vessel '"+string(obj_ini.ship[obj_controller.fest_sid])+"'";
            
            scr_alert("green","event",string(p1)+" on "+string(p3)+" ends.",0,0);
            scr_event_log("green",string(p1)+" on "+string(p3)+" ends.");
        }
        obj_controller.cooldown=10;if (number!=0) then obj_turn_end.alarm[1]=4;instance_destroy();
    }
}
if (title="Scheduled Event:2") then exit;


if (image="inquisition") and (loc="contraband"){
    demand=0;
    option1="Hand over all Chaos and Daemonic Artifacts";
    option2="Over your dead body";
    
    if (press=1){
        var e,ca,ia;e=0;ca=0;ia=0;
        repeat(obj_controller.artifacts){e+=1;
            if (string_count("aemon",obj_ini.artifact_tags[e])&gt;0) or (string_count("haos",obj_ini.artifact_tags[e])&gt;0){
                obj_ini.artifact[e]="";obj_ini.artifact_tags[e]="";obj_ini.artifact_identified[e]=0;obj_ini.artifact_condition[e]=100;
                obj_ini.artifact_loc[e]="";obj_ini.artifact_sid[e]=0;obj_controller.artifacts-=1;
                if (obj_controller.menu_artifact&gt;obj_controller.artifacts) then obj_controller.menu_artifact=obj_controller.artifacts;
                obj_ini.artifact[e]=obj_ini.artifact[e+1];obj_ini.artifact_tags[e]=obj_ini.artifact_tags[e+1];
                obj_ini.artifact_identified[e]=obj_ini.artifact_identified[e+1];obj_ini.artifact_condition[e]=obj_ini.artifact_condition[e+1];
                obj_ini.artifact_loc[e]=obj_ini.artifact_loc[e+1];obj_ini.artifact_sid[e]=obj_ini.artifact_sid[e+1];
            }
        }
        
        var noom1,noom2;noom1=0;noom2=0;
        noom1=instance_nearest(obj_temp_arti.x,obj_temp_arti.y,obj_star);noom2=noom1.name;
        repeat(4400){
            if (ca&lt;=10) and (ca&gt;=0){
                ia+=1;if (ia=400){ca+=1;ia=1;if (ca=11) then ca=-5;}
                if (ca&gt;=0) and (ca&lt;11){
                    if (string(obj_ini.loc[ca,ia])=noom2){
                        // show_message(string(obj_ini.loc[ca,ia])+" is at the right location");
                        // show_message("wep1: "+string(obj_ini.wep1[ca,ia])+", wep2: "+string(obj_ini.wep2[ca,ia]));
                        if (string_count("aemon",obj_ini.wep1[ca,ia])&gt;0) or (string_count("haos",obj_ini.wep1[ca,ia])&gt;0) then obj_ini.wep1[ca,ia]="";
                        if (string_count("aemon",obj_ini.wep2[ca,ia])&gt;0) or (string_count("haos",obj_ini.wep2[ca,ia])&gt;0) then obj_ini.wep2[ca,ia]="";
                        if (string_count("aemon",obj_ini.armor[ca,ia])&gt;0) or (string_count("haos",obj_ini.armor[ca,ia])&gt;0) then obj_ini.armor[ca,ia]="";
                        if (string_count("aemon",obj_ini.mobi[ca,ia])&gt;0) or (string_count("haos",obj_ini.mobi[ca,ia])&gt;0) then obj_ini.mobi[ca,ia]="";
                        if (string_count("aemon",obj_ini.gear[ca,ia])&gt;0) or (string_count("haos",obj_ini.gear[ca,ia])&gt;0) then obj_ini.gear[ca,ia]="";
                    }
                }
            }
        }
    }
    
    if (press=1){obj_controller.cooldown=10;option1="";option2="";loc="";text="All Chaos and Daemonic Artifacts present have been handed over to the Inquisitor.  They remain seething, but your destruction has been stalled.  Or so you imagine.";exit;}
    if (press=2){obj_controller.cooldown=10;if (number!=0) then obj_turn_end.alarm[1]=4;instance_destroy();}
}




if (title="Planetary Governor Assassinated") and (option1!="") and (cooldown&lt;=0){
    if (new_target=0) and (instance_exists(obj_temp6)){
        new_target=instance_nearest(obj_temp6.x,obj_temp6.y,obj_star);
        with(obj_temp6){instance_destroy();}
    }
    
    if (press&gt;0){
        var randa,randa2;randa=floor(random(100))+1;randa2=floor(random(100))+1;
        if (string_count("Shitty",obj_ini.strin2)&gt;0) then randa-=20;
    }
    
    if (press=1){
        new_target.dispo[planet]=min(obj_ini.imperium_disposition,obj_controller.disposition[2])+choose(-1,-2,-3,-4,0,1,2,3,4);
        if (randa&lt;=3) then new_target.dispo[planet]=min(new_target.dispo[planet],choose(1,2,3,4,5,6)*3);
        if (randa&gt;=95) then new_target.dispo[planet]=max(new_target.dispo[planet],60+choose(1,2,3,4,5,6)*3);
        scr_event_log("","Planetary Governor of "+string(new_target.name)+" "+scr_roman(planet)+" assassinated.  The next in line takes over.");
        text="The next in line for rule of "+string(new_target.name)+" "+scr_roman(planet)+" has taken over their rightful position of Planetary Governor.";
        option1="";option2="";option3="";
        with(obj_temp4){instance_destroy();}
        cooldown=30;exit;
    }
    if (press=2){
        new_target.dispo[planet]=70+floor(random_range(5,15))+1;
        scr_event_log("","Planetary Governor of "+string(new_target.name)+" "+scr_roman(planet)+" assassinated.  A more suitable Governor is installed.");
        if (randa2&lt;=(10*estimate)){
            var v,ev,;v=0;ev=0;
            repeat(99){v+=1;if (ev=0) and (obj_controller.event[v]="") then ev=v;}
            obj_controller.event[ev]="governor_assassination_1|"+string(new_target.name)+"|"+string(planet)+"|";
            obj_controller.event_duration[ev]=((choose(1,2,3,4,5,6)+choose(1,2,3,4,5,6))*6)+choose(-3,-2,-1,0,1,2,3);
        }
        text="Many of the successors for "+string(new_target.name)+" "+scr_roman(planet)+" are removed or otherwise made indisposed.  Your chapter ensures that the new Planetary Governor is sympathetic to your plight and more than willing to heed your advice.  A powerful new ally may be in the making.";
        option1="";option2="";option3="";
        with(obj_temp4){instance_destroy();}
        cooldown=30;exit;
    }
    if (press=3){
        new_target.dispo[planet]=101;
        scr_event_log("","Planetary Governor of "+string(new_target.name)+" "+scr_roman(planet)+" assassinated.  One of your "+string(obj_img.player_army)+" Serfs take their position.");
        if (randa2&lt;=(25*estimate)){
            var v,ev,;v=0;ev=0;
            repeat(99){v+=1;if (ev=0) and (obj_controller.event[v]="") then ev=v;}
            obj_controller.event[ev]="governor_assassination_2|"+string(new_target.name)+"|"+string(planet)+"|";
            obj_controller.event_duration[ev]=(choose(1,2)*6)+choose(-3,-2,-1,0,1,2,3);
        }
        text="All of the successors for "+string(new_target.name)+" "+scr_roman(planet)+" are removed or otherwise made indisposed.  Paperwork is slightly altered.  Rather than any sort of offical one of your "+string(obj_img.player_army)+" Serfs is installed as the Planetary Governor.  The planet is effectively under your control.";
        if (new_target.p_first[planet]!=3) then new_target.p_owner[planet]=1;
        option1="";option2="";option3="";
        with(obj_temp4){instance_destroy();}
        cooldown=30;exit;
    }
}
/*
var he;he=instance_create(argument0.x,argument0.y,obj_temp6);
var pip;pip=instance_create(0,0,obj_popup);
pip.title="Planetary Governor Assassinated";
pip.text=txt;

pip.option1="Allow the official successor to become Planetary Governor.";
pip.option2="Ensure that a sympathetic successor will be the one to rule.";
pip.option3="Remove all successors and install a loyal edgdsg Serf.";

// Result-  this is the multiplier for the chance of discovery with the inquisition, can also be used to determine
// the new Governor disposition if they are the official successor
if (aroll&lt;=chance){// Discovered
    pip.estimate=2;
}
if (aroll&gt;chance){// Success
    pip.estimate=1;
}
*/



if (image="ruins_fort"){
    if (press=1) and (obj_controller.requisition&gt;=1000){
        obj_controller.requisition-=1000;
        text="Resources have been spent on the planet to restore the fortress.  The planet's defense rating has increased to 5 (";
        option1="";option2="";option3="";
        var obj;obj=obj_temp4.obj;
        text+=string(obj.p_fortified[obj_temp4.num])+"+";
        text+=string(5-obj.p_fortified[obj_temp4.num])+")";
        obj.p_fortified[obj_temp4.num]=max(obj.p_fortified[obj_temp4.num],5);
        with(obj_temp4){instance_destroy();}
        cooldown=15;exit;
    }
    if (press=2){
        var req;req=floor(random_range(200,500))+1;
        image="";text="Much of the fortress is demolished in order to salvage adamantium and raw materials.  The opration has yielded "+string(req)+" requisition.";
        option1="";option2="";option3="";
        obj_controller.requisition+=req;
        with(obj_temp4){instance_destroy();}
        cooldown=15;exit;
    }
    
    /*
    if (loot="fortress"){// Fortress
    var gene,pop;gene=floor(random_range(20,40))+1;pop=instance_create(0,0,obj_popup);
    pop.image="ruins_fort";pop.title="Ancient Ruins: Fortress";
    pop.text="Your battle brothers have found a massive, ancient fortress that has fallen into disrepair.  Gun batteries rusted, and walls covered in moss and undergrowth, it is a pale shadow of its former glory.  It is possible to repair the structure.  What is thy will?";
    pop.option1="Repair the fortress to boost planet defenses.  (1000 Req)";
    pop.option2="Salvage raw materials from the fortress.";
    }
    */
}

if (image="mechanicus") and (title="Mechanicus Mission") or (title="Mechanicus Mission Accepted"){
    if (option1="")and (title="Mechanicus Mission"){option1="Accept";option2="Refuse";exit;}
    
    if (press=1) and (option1!=""){
    
        if (string_count("tomb",mission)&gt;0){
            with(obj_temp5){instance_destroy();}
            with(obj_star){if (name=obj_popup.loc) then instance_create(x,y,obj_temp5);}
            if (instance_exists(obj_temp5)){
                var tempy,eh,eh2,that,that2;tempy=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);eh=0;that=0;eh2=0;that2=0;
                repeat(4){eh+=1;if (tempy.p_owner[eh]&lt;=5) and (string_count("Necron Tomb",tempy.p_feature[eh])&gt;0) and (string_count("Awake",tempy.p_feature[eh])=0) then that=eh;}
                
                with(obj_temp5){instance_destroy();}
                if (eh&gt;0){
                    repeat(4){eh2+=1;if (tempy.p_problem[that,eh2]="") and (that2=0) then that2=eh2;}
                    if (that2&gt;0){
                        tempy.p_problem[that,that2]="mech_tomb1";
                        text="The Adeptus Mechanicus await your forces at "+string(tempy.name)+" "+scr_roman(that)+".  They are expecting at least two squads of Astartes and have placed the testing on hold until their arrival.  You have 16 months to arrive.";
                        scr_event_log("","Mechanicus Mission Accepted: At least two squads of marines are expected at "+string(tempy.name)+" "+scr_roman(that)+" within 16 months."); 
                        instance_create(tempy.x+16,tempy.y-24,obj_star_event);
                        tempy.p_timer[that,that2]=17;
                        title="Mechanicus Mission Accepted";
                        option1="";option2="";cooldown=15;exit;
                    }
                }
            }
        }
    
    
        if (string_count("raider",mission)&gt;0) or (string_count("bionics",mission)&gt;0) or (string_count("mech_mars",mission)&gt;0){
            with(obj_temp5){instance_destroy();}
            with(obj_star){if (name=obj_popup.loc) then instance_create(x,y,obj_temp5);}
            if (instance_exists(obj_temp5)){
                var tempy,eh,eh2,that,that2;tempy=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);eh=0;that=0;eh2=0;that2=0;
                repeat(4){eh+=1;if (tempy.p_owner[eh]=3) and (tempy.p_type[eh]="Forge") then that=eh;}
                
                with(obj_temp5){instance_destroy();}
                if (eh&gt;0){
                    repeat(4){eh2+=1;if (tempy.p_problem[that,eh2]="") and (that2=0) then that2=eh2;}
                    if (that2&gt;0){
                        if (string_count("raider",mission)&gt;0){
                            tempy.p_problem[that,that2]="mech_raider!0!";
                            text="The Adeptus Mechanicus await your forces at "+string(tempy.name)+" "+scr_roman(that)+".  They are expecting six "+string(obj_ini.role[100,16])+"s and a Land Raider.";
                            scr_event_log("","Mechanicus Mission Accepted: Six of your "+string(obj_ini.role[100,16])+"s and a Land Raider are to be stationed at "+string(tempy.name)+" "+scr_roman(that)+" for 24 months."); 
                        }
                        if (string_count("bionics",mission)&gt;0){
                            tempy.p_problem[that,that2]="mech_bionics!0!";
                            text="The Adeptus Mechanicus await your forces at "+string(tempy.name)+" "+scr_roman(that)+".  They are expecting ten Astartes with bionics.";
                            scr_event_log("","Mechanicus Mission Accepted: Ten Astartes with bionics are to be stationed at "+string(tempy.name)+" "+scr_roman(that)+" for 24 months for testing purposes."); 
                        }
                        if (string_count("mars",mission)&gt;0){
                            tempy.p_problem[that,that2]="mech_mars";
                            text="The Adeptus Mechanicus await your "+string(obj_ini.role[100,16])+"s at "+string(tempy.name)+" "+scr_roman(that)+".  They are willing to hold on the voyage for up to 12 months.";
                            scr_event_log("","Mechanicus Mission Accepted: "+string(obj_ini.role[100,16])+"s are expected at "+string(tempy.name)+" "+scr_roman(that)+" within 12 months, for the voyage to Mars."); 
                        }
                        instance_create(tempy.x+16,tempy.y-24,obj_star_event);
                        tempy.p_timer[that,that2]=49;if (string_count("mars",mission)&gt;0) then tempy.p_timer[that,that2]=13;
                        title="Mechanicus Mission Accepted";
                        option1="";option2="";cooldown=15;exit;
                    }
                }
            }
        }
        // Other missions here
    }
    if (press=2) and (option2!=""){obj_controller.cooldown=10;if (number!=0) then obj_turn_end.alarm[1]=4;instance_destroy();}    
}


if (image="geneseed_lab"){
    if (press=1){
        image="";text=string(estimate)+" "+string(obj_img.organics)+" has been added to the "+string(obj_img.player_army)+" vaults.";
        option1="";option2="";option3="";
        obj_controller.gene_seed+=estimate;
        with(obj_temp4){instance_destroy();}
        cooldown=15;exit;
    }
    if (press=2){
        var req;req=floor(random_range(200,500))+1;
        image="";text="Technological components have been salvaged, granting "+string(req)+" requisition.";
        option1="";option2="";option3="";
        obj_controller.requisition+=req;
        with(obj_temp4){instance_destroy();}
        cooldown=15;exit;
    }
    if (press=3){
        with(obj_temp4){instance_destroy();}
        obj_controller.cooldown=15;cooldown=15;
        instance_destroy();exit;
    }
}


if (image="ancient_ruins") and (woopwoopwoop=2){
    instance_deactivate_all(true);
    instance_activate_object(obj_controller);
    instance_activate_object(obj_ini);
    instance_activate_object(obj_temp4);
    
    instance_create(0,0,obj_ncombat);
    scr_battle_roster(obj_temp4.battle_loc,obj_temp4.num,true);
    
    instance_activate_object(obj_star);
    with(obj_star){if (name!=obj_temp4.loc) then instance_deactivate_object(id);}
    
    that_one=instance_nearest(0,0,obj_star);
    instance_activate_object(obj_star);
    
    obj_controller.cooldown=10;
    obj_ncombat.battle_object=that_one;instance_deactivate_object(obj_star);
    obj_ncombat.battle_loc=obj_temp4.battle_loc;
    obj_ncombat.battle_id=obj_temp4.num;
    obj_ncombat.battle_special="ruins";if (obj_temp4.ruins_race=6) then obj_ncombat.battle_special="ruins_eldar";
    obj_ncombat.dropping=0;obj_ncombat.attacking=0;
    obj_ncombat.enemy=obj_temp4.ruins_battle;
    obj_ncombat.threat=obj_temp4.battle_threat;
    obj_ncombat.formation_set=1;
    
    instance_destroy();exit;
}

if (image="ancient_ruins") and (option1!=""){
    if (press=1){// Begin
        var ruins_race,ruins_battle,ruins_fact,ruins_disp,ruins_reward,dice,battle_threat;
        ruins_race=0;ruins_battle=0;ruins_fact=0;ruins_disp=0;ruins_reward=0;battle_threat=0;
        
        dice=floor(random(100))+1;
        if (dice&lt;=9) then ruins_race=1;
        if (dice&gt;9) and (dice&lt;=74) then ruins_race=2;
        if (dice&gt;74) and (dice&lt;=83) then ruins_race=5;
        if (dice&gt;83) and (dice&lt;=91) then ruins_race=6;
        if (dice&gt;91) then ruins_race=10;
        
        dice=floor(random(100))+1;
        if (string_count("Shitty",obj_ini.strin2)=0) and (dice&lt;=50) then ruins_battle=1;
        if (string_count("Shitty",obj_ini.strin2)&gt;0) and (dice&lt;=66) then ruins_battle=1;
        
        // ruins_battle=1;
        
        if (ruins_battle=1){
            dice=floor(random(100))+1;
            if (string_count("Shitty",obj_ini.strin2)&gt;0) then dice+=10;
            
            battle_threat=4;
            if (dice&gt;0) and (dice&lt;=60) then battle_threat=1;
            if (dice&gt;60) and (dice&lt;=90) then battle_threat=2;
            if (dice&gt;90) and (dice&lt;=99) then battle_threat=3;
            
            if (ruins_race=1) or (ruins_race=2) or (ruins_race=10) then ruins_battle=choose(10,10,10,10,11,11,12);
            if (ruins_race=5) then ruins_battle=10;
            if (ruins_race=6) then ruins_battle=choose(6,6,10,10,10,12);
            
            obj_temp4.ruins_race=ruins_race;
            obj_temp4.ruins_battle=ruins_battle;
            obj_temp4.battle_threat=battle_threat;
            
            option1="";option2="";option3="";
            text="Your marines descended into the ancient ruins, mapping them out as they go.  They quickly determine the ruins were once ";
            if (ruins_race=1) then text+="a "+string(obj_img.faction_dude_formal[1])+" fortification from earlier times.";
            if (ruins_race=2) then text+="golden-age "+string(obj_img.kingdom_title_shortest)+" ruins, lost to time.";
            if (ruins_race=5) then text+="a magnificent temple of the Imperial Cult.";
            if (ruins_race=6) then text+=string(obj_img.faction[6])+" colonization structures from an unknown time.";
            if (ruins_race=10) then text+="golden-age Imperial ruins, since decorated with spikes and bones.";            
            text+="  Unfortunantly, it's too late before your Battle Brothers discern the ruins are still inhabited.  Shapes begin to descend upon them from all directions, masked in the shadows.";
            
            cooldown=15;woopwoopwoop=1;exit;
        }
        if (ruins_battle=0){
            var obj;obj=obj_temp4.obj;
            instance_activate_object(obj_star);
            scr_ruins_reward(obj,obj_temp4.num,ruins_race);
            instance_destroy();exit;
        }
    }
    if (press=2){// Nothing
        obj_controller.cooldown=10;
        obj_controller.menu=1;
        // obj_controller.managing=manag;
        with(obj_controller){
            var i;i=-1;man_size=0;selecting_location="";selecting_types="";selecting_ship=0;sel_uid=0;
            repeat(501){i+=1;
                man[i]="";ide[i]=0;man_sel[i]=0;ma_lid[i]=0;ma_wid[i]=0;ma_bio[i]=0;
                ma_race[i]=0;ma_loc[i]="";ma_name[i]="";ma_role[i]="";ma_wep1[i]="";
                ma_wep2[i]="";ma_armor[i]="";ma_health[i]=100;ma_chaos[i]=0;ma_exp[i]=0;ma_promote[i]=0;
                sh_ide[i]=0;sh_uid[i]=0;sh_name[i]="";sh_class[i]="";sh_loc[i]="";sh_hp[i]="";sh_cargo[i]=0;sh_cargo_max[i]="";
            }
            alll=0;
            if (managing&lt;=10) and (managing!=0) then scr_company_view(managing);
            if (managing&gt;10) or (managing=0) then scr_special_view(managing);
            cooldown=10;sel_loading=0;unload=0;alarm[6]=7;
        }
        with(obj_temp4){instance_destroy();}
        instance_destroy();exit;
    }
    if (press=3){// Return to ship, exit
        scr_return_ship(obj_temp4.loc,obj_temp4,obj_temp4.num);
        var man_size,ship_id,comp,plan,i;
        i=0;ship_id=0;man_size=0;comp=0;plan=0;
        repeat(30){i+=1;if (obj_ini.ship[i]=obj_temp4.loc) then ship_id=i;}i=0;
        obj_controller.menu=0;obj_controller.managing=0;
        obj_controller.cooldown=10;
        with(obj_temp4){instance_destroy();}
        instance_destroy();exit;
    }
}



if (image="stc"){
    if (ma_co&gt;0) and (ma_id=0){
        if (press=1){
            obj_temp4.alarm[5]=1;
            obj_controller.cooldown=10;
            instance_destroy();
        }
        if (press=2){
            scr_return_ship(obj_temp4.loc,obj_temp4,obj_temp4.num);
            var man_size,ship_id,comp,plan,i;
            i=0;ship_id=0;man_size=0;comp=0;plan=0;
            repeat(30){i+=1;if (obj_ini.ship[i]=obj_temp4.loc) then ship_id=i;}i=0;
            obj_controller.menu=0;obj_controller.managing=0;
            obj_controller.cooldown=10;
            with(obj_temp4){instance_destroy();}
            instance_destroy();exit;
        }
        if (press=3) then exit;
    }
    if (ma_co&gt;0) and (ma_id&gt;0){
        if (press=1){
            obj_temp4.alarm[5]=1;
            obj_controller.cooldown=10;
            instance_destroy();
        }
        if (press=2){
            scr_return_ship(obj_temp4.loc,obj_temp4,obj_temp4.num);
            var man_size,ship_id,comp,plan,i;
            i=0;ship_id=0;man_size=0;comp=0;plan=0;
            repeat(30){i+=1;if (obj_ini.ship[i]=obj_temp4.loc) then ship_id=i;}i=0;
            obj_controller.menu=0;obj_controller.managing=0;
            obj_controller.cooldown=10;
            with(obj_temp4){instance_destroy();}
            instance_destroy();exit;
        }
        if (press=3){
            obj_temp4.alarm[6]=1;
            obj_controller.cooldown=10;
            instance_destroy();
        }
    }
    if (ma_co=0) and (ma_id&gt;0) and (target_comp!=3){
        if (press=1){
            scr_return_ship(obj_temp4.loc,obj_temp4,obj_temp4.num);
            var man_size,ship_id,comp,plan,i;
            i=0;ship_id=0;man_size=0;comp=0;plan=0;
            repeat(30){i+=1;if (obj_ini.ship[i]=obj_temp4.loc) then ship_id=i;}i=0;
            obj_controller.menu=0;obj_controller.managing=0;
            obj_controller.cooldown=10;
            with(obj_temp4){instance_destroy();}
            instance_destroy();exit;
        }
        if (press=2){
            obj_temp4.alarm[6]=1;
            obj_controller.cooldown=10;
            instance_destroy();
        }
        if (press=3) then exit;
    }
    if (ma_id&gt;0) and (target_comp=3){
        if (press=1){
            scr_return_ship(obj_temp4.loc,obj_temp4,obj_temp4.num);
            var man_size,ship_id,comp,plan,i;
            i=0;ship_id=0;man_size=0;comp=0;plan=0;
            repeat(30){i+=1;if (obj_ini.ship[i]=obj_temp4.loc) then ship_id=i;}i=0;
            obj_controller.menu=0;obj_controller.managing=0;
            obj_controller.cooldown=10;
            with(obj_temp4){instance_destroy();}
            instance_destroy();exit;
        }
        if (press=2) then exit;
        if (press=3) then exit;
    }
}




if (type=6){// Equipment
    if (target_comp=1) then target_role=sel1;
    if (target_comp=2) then target_role=sel2;
    if (target_comp=3) then target_role=sel3;
    if (target_comp=4) then target_role=sel4;
    if (target_comp=5) then target_role=sel5;
}

if (type=8){
    if (obj_ini.artifact[obj_controller.menu_artifact]="Power Armor") then target_role=5;
    if (obj_ini.artifact[obj_controller.menu_artifact]=string(obj_img.battlesuit)) then target_role=5;
    if (obj_ini.artifact[obj_controller.menu_artifact]="Artificer Armor") then target_role=5;
    if (obj_ini.artifact[obj_controller.menu_artifact]=obj_img.unit[1,6]) then target_role=5;
    if (obj_ini.artifact[obj_controller.menu_artifact]=string(obj_img.unit[1,6])+" Armor") then target_role=5;
    if (obj_ini.artifact[obj_controller.menu_artifact]="Rosarius") then target_role=5;
    if (obj_ini.artifact[obj_controller.menu_artifact]="Bionics") then target_role=5;
    if (obj_ini.artifact[obj_controller.menu_artifact]="Psychic Hood") then target_role=5;
    if (obj_ini.artifact[obj_controller.menu_artifact]="Jump Pack") then target_role=5;
    if (obj_ini.artifact[obj_controller.menu_artifact]="Servo Arms") then target_role=5;
    
    all_good=0;
    if (target_role&gt;0) and (target_comp!=-1) and (units=1) then all_good=1;
}

if (image="gene_bad"){
    option1="Dispose of ";
    if (obj_controller.gene_seed&lt;=30) then option1+="100% of the "+string(obj_img.organics)+".";
    if (obj_controller.gene_seed&gt;30) and (obj_controller.gene_seed&lt;60) then option1+="50% of all "+string(obj_img.organics)+".";
    if (obj_controller.gene_seed&gt;=60) then option1+="33% of all "+string(obj_img.organics)+".";
    option2="Tell the "+string(obj_ini.role[100,14])+"s to let it be.";option3="";
}

if ((title=string(obj_img.faction[4])+" Mission") or (title=string(obj_img.faction[4])+" Recon")) and (option1=""){option1="Accept";option2="Refuse";}
if (title=string(obj_img.faction_dude_formal[4])+" Located"){option1="Destroy their vessel";option2="Hear them out";}
if (title=string(obj_img.faction_dude_formal[13])+" Tomb Excursion"){option1="Begin the Mission";option2="Not Yet";}
if (title=string(obj_img.faction_dude_formal[13])+" Tunnels : 1"){option1="Continue";option2="Return to the surface";}
if (title=string(obj_img.faction_dude_formal[13])+" Tunnels : 2"){option1="Continue";option2="Return to the surface";}
if (title=string(obj_img.faction_dude_formal[13])+" Tunnels : 3"){option1="Continue";option2="Return to the surface";}

if (title="He Built It") and (option1="") and (string_count("submerged",text)=0){
    option1="Execute the "+string_lower(obj_img.faction_dude[10]);
    option2="Move him to the "+string(obj_img.hq_jail);
    option3="You see no problem";
}




if (press=1) and (option1!="") or ((demand=1) and (mission!="") and (string_count(string(obj_img.faction[4]),title)&gt;0)) or ((demand=1) and (title=string(obj_img.faction[4])+" Recon")){
    if (image="gene_bad"){
        var onceh;onceh=0;
        if (obj_controller.gene_seed&lt;=30) and (onceh=0){obj_controller.gene_seed=0;}
        if (obj_controller.gene_seed&gt;30) and (obj_controller.gene_seed&lt;60) and (onceh=0){obj_controller.gene_seed=round(obj_controller.gene_seed*0.5);}
        if (obj_controller.gene_seed&gt;=60) and (onceh=0){obj_controller.gene_seed=round(obj_controller.gene_seed*0.66);}
    }
    if (title=string(obj_img.faction_dude_formal[4])+" Located") or (title="Artifact Offered") or (title="Mercy Plea"){
        with(obj_en_fleet){if (trade_goods="male_her") or (trade_goods="female_her") then instance_destroy();}
        
        if (obj_controller.demanding=0) then obj_controller.disposition[4]+=1;
        if (obj_controller.demanding=1) then obj_controller.disposition[4]+=choose(0,0,1);
        
        if (title="Artifact Offered") or (title="Mercy Plea") then obj_controller.disposition[4]-=choose(0,1);
        
        title=string(obj_img.faction[4])+" Mission Completed";image="exploding_ship";
        text="The "+string(obj_img.faction_dude_formal[4])+"'s ship begans to bank and turn, to flee, but is immediately fired upon by your fleet.  The ship explodes, taking the "+string(obj_img.faction_dude_formal[4])+" with it.  The mission has been accomplished.";
        option1="";option2="";option3="";
        
        scr_event_log("",string(obj_img.faction[4])+" Mission Completed: The radical "+string(obj_img.faction_dude_formal[4])+" has been purged.");
        
        exit;    
    }
    if (title="He Built It"){
        obj_ini.race[ma_co,ma_id]=0;obj_ini.loc[ma_co,ma_id]="";obj_ini.name[ma_co,ma_id]="";obj_ini.role[ma_co,ma_id]="";
        obj_ini.wep1[ma_co,ma_id]="";obj_ini.lid[ma_co,ma_id]=0;obj_ini.wep2[ma_co,ma_id]="";obj_ini.armor[ma_co,ma_id]="";
        obj_ini.gear[ma_co,ma_id]="";obj_ini.hp[ma_co,ma_id]=100;obj_ini.chaos[ma_co,ma_id]=0;obj_ini.experience[ma_co,ma_id]=0;
        obj_ini.mobi[ma_co,ma_id]="";obj_ini.age[ma_co,ma_id]=0;
        with(obj_ini){scr_company_order(0);}
    }
    
    if (title=string(obj_img.faction_dudes_formal[13])+" Tomb Excursion"){
        instance_activate_all();
        var player_forces,penalty,roll;player_forces=0;penalty=0;roll=floor(random(100))+1;
        with(obj_star){if (name!=obj_popup.loc) then instance_deactivate_object(id);}
        if (!instance_exists(obj_temp8)) then instance_create(obj_star.x,obj_star.y,obj_temp8);
        player_forces=obj_star.p_player[planet];
        instance_activate_object(obj_star);cooldown=30;
        
        obj_temp8.stage+=1;
        obj_temp8.loc=loc;
        obj_temp8.wid=planet;
        
        title=string(obj_img.faction_dudes_formal[13])+" Tunnels : "+string(obj_temp8.stage);
        if (obj_temp8.stage=1){
            image="necron_tunnels_1";
            text="Your marines enter the massive tunnel complex, following the energy readings.  At first the walls are cramped and tiny, closing about them, but the tunnels widen at a rapid pace.";
            option1="Continue";
            option2="Return to the surface";
        }
        
        exit;
    }
    
    if (string_count(string(obj_img.faction_dudes_formal[13])+" Tunnels",title)&gt;0){
        var player_forces,penalty,roll,battle;player_forces=0;penalty=0;roll=floor(random(100))+1;battle=0;
        instance_activate_all();
        with(obj_star){if (name!=obj_temp8.loc) then instance_deactivate_object(id);}
        if (!instance_exists(obj_temp8)) then instance_create(obj_star.x,obj_star.y,obj_temp8);
        player_forces=obj_star.p_player[obj_temp8.wid];
        instance_activate_object(obj_star);
        obj_temp8.popup=obj_turn_end.current_popup;
        
        // SMALL TEAM OF MARINES
        if (player_forces&gt;6) then penalty=10;if (player_forces&gt;10) then penalty=20;
        if (player_forces&gt;=20) then penalty=30;if (player_forces&gt;=40) then penalty=50;
        if (player_forces&gt;=60) then penalty=100;roll+=penalty;
        
        // roll=30;if (string_count("3",title)&gt;0) then roll=70;
        
        // Result
        if (roll&lt;=60){
            obj_temp8.stage+=1;
            title=string(obj_img.faction_dude_formal[13])+" Tunnels : "+string(obj_temp8.stage);
            
            if (obj_temp8.stage=2){image="necron_tunnels_2";
                text="The energy readings are much stronger, now that your marines are deep inside the tunnels.  What was once cramped is now luxuriously large, the tunnel ceiling far overhead decorated by stalactites.";
            }
            if (obj_temp8.stage=3){image="necron_tunnels_3";
                text="After several hours of descent the entrance to the "+string(obj_img.faction_dudes_formal[13])+" Tomb finally looms ahead- dancing, sickly green light shining free.  Your marine confirms that the Plasma Bomb is ready.";
            }
            if (obj_temp8.stage&gt;=4){
                image="";title=string(obj_img.faction[4])+" Mission Completed";
                text="Your marines finally enter the deepest catacombs of the "+string(obj_img.faction_dudes_formal[13])+" Tomb.  There they place the Plasma Bomb and arm it.  All around are signs of increasing "+string(obj_img.faction_dudes_formal[13])+" activity.  With half an hour set, your men escape back to the surface.  There is a brief rumble as the charge goes off, your mission a success.";
                option1="";option2="";option3="";
                
                if (obj_controller.demanding=0) then obj_controller.disposition[4]+=1;
                if (obj_controller.demanding=1) then obj_controller.disposition[4]+=choose(0,0,1);
                
                obj_controller.temp[200]=string(loc);
                with(obj_temp5){instance_destroy();}
                instance_activate_object(obj_star);
                with(obj_star){if (name!=obj_controller.temp[200]) then instance_deactivate_object(id);}
                
                
                // with(obj_star){if (name=obj_controller.temp[200]) then instance_create(x,y,obj_temp5);}
                // you=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);onceh=0;
                you=instance_nearest(0,0,obj_star);
                instance_activate_object(obj_star);
                
                var ppp;ppp=0;
                if (you.p_problem[self.planet,1]="bomb"){ppp=1;you.p_feature[self.planet]=string_replace(you.p_feature[self.planet],string(obj_img.faction_dude_formal[13])+" Tomb|","");you.p_problem[self.planet,1]="";you.p_timer[self.planet,1]=0;}
                if (you.p_problem[self.planet,2]="bomb"){ppp=2;you.p_feature[self.planet]=string_replace(you.p_feature[self.planet],string(obj_img.faction_dude_formal[13])+" Tomb|","");you.p_problem[self.planet,2]="";you.p_timer[self.planet,2]=0;}
                if (you.p_problem[self.planet,3]="bomb"){ppp=3;you.p_feature[self.planet]=string_replace(you.p_feature[self.planet],string(obj_img.faction_dude_formal[13])+" Tomb|","");you.p_problem[self.planet,3]="";you.p_timer[self.planet,3]=0;}
                if (you.p_problem[self.planet,4]="bomb"){ppp=4;you.p_feature[self.planet]=string_replace(you.p_feature[self.planet],string(obj_img.faction_dude_formal[13])+" Tomb|","");you.p_problem[self.planet,4]="";you.p_timer[self.planet,4]=0;}
                with(obj_temp5){instance_destroy();}with(obj_temp8){instance_destroy();}
                instance_activate_object(obj_star);
                
                scr_event_log("",string(obj_img.faction[4])+" Mission Completed: Your "+string(obj_img.faction_dudes_formal[1])+" have sealed the "+string(obj_img.faction_dude_formal[13])+" Tomb on "+string(you.name)+" "+string(scr_roman(ppp))+".");
                scr_gov_disp(you.name,ppp,choose(1,2,3,4,5));
                var have_bomb;have_bomb=scr_check_equip("Plasma Bomb",self.loc,self.planet,1);
                exit;
            }
        }
        if (roll&gt;60) and (roll&lt;=82){// Necron Wraith attack
            battle=1;
        }
        if (roll&gt;82) and (roll&lt;=92){// Tomb Spyder attack
            battle=2;
        }
        if (roll&gt;92) and (roll&lt;=97){// Tomb Stalker
            battle=3;
        }
        if (roll&gt;97){// Tomb World wakes up
            if (player_forces&lt;=30) then battle=4;
            if (player_forces&gt;30) then battle=5;
            if (player_forces&gt;100) then battle=6;
        }
        
        if (battle&gt;0){
            var that_one;
            instance_deactivate_all(true);
            instance_activate_object(obj_controller);
            instance_activate_object(obj_ini);
            instance_activate_object(obj_temp8);
            
            instance_create(0,0,obj_ncombat);
            scr_battle_roster(obj_temp8.loc,obj_temp8.wid,true);
            
            instance_activate_object(obj_star);
            with(obj_star){if (name!=obj_temp8.loc) then instance_deactivate_object(id);}
            
            
            that_one=instance_nearest(0,0,obj_star);
            instance_activate_object(obj_star);
            
            obj_ncombat.battle_object=that_one;instance_deactivate_object(obj_star);
            obj_ncombat.battle_loc=loc;
            obj_ncombat.battle_id=planet;
            obj_ncombat.dropping=0;
            obj_ncombat.attacking=0;
            obj_ncombat.enemy=13;
            obj_ncombat.threat=1;
            obj_ncombat.formation_set=1;
            
            if (battle=1) then obj_ncombat.battle_special="wraith_attack";
            if (battle=2) then obj_ncombat.battle_special="spyder_attack";
            if (battle=3) then obj_ncombat.battle_special="stalker_attack";
            if (battle=4) then obj_ncombat.battle_special="wake1_attack";
            if (battle=5) then obj_ncombat.battle_special="wake2_attack";
            if (battle=6) then obj_ncombat.battle_special="wake2_attack";
            
            instance_destroy();
        }
        
        
    
        exit;
    }
    
    
    
    
    

    
    if (title=string(obj_img.faction[4])+" Recon"){
        with(obj_temp5){instance_destroy();}
        var pt1,pt2,pt3,pt4,pt5,you,onceh;onceh=0;
        obj_controller.temp[200]=string(loc);
        
        with(obj_star){if (name=obj_controller.temp[200]) then instance_create(x,y,obj_temp5);}
        you=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);onceh=0;
        
        if (you.p_problem[planet,1]="") and (onceh=0){you.p_problem[planet,1]="recon";you.p_timer[planet,1]=estimate;onceh=1;if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  You are to land "+string(obj_img.faction_dudes_formal[1])+" on "+string(you.name)+" "+scr_roman(1)+" to investigate the planet within "+string(estimate)+" months.";}}
        if (you.p_problem[planet,2]="") and (onceh=0){you.p_problem[planet,2]="recon";you.p_timer[planet,2]=estimate;onceh=1;if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  You are to land "+string(obj_img.faction_dudes_formal[1])+" on "+string(you.name)+" "+scr_roman(2)+" to investigate the planet within "+string(estimate)+" months.";}}
        if (you.p_problem[planet,3]="") and (onceh=0){you.p_problem[planet,3]="recon";you.p_timer[planet,3]=estimate;onceh=1;if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  You are to land "+string(obj_img.faction_dudes_formal[1])+" on "+string(you.name)+" "+scr_roman(3)+" to investigate the planet within "+string(estimate)+" months.";}}
        if (you.p_problem[planet,4]="") and (onceh=0){you.p_problem[planet,4]="recon";you.p_timer[planet,4]=estimate;onceh=1;if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  You are to land "+string(obj_img.faction_dudes_formal[1])+" on "+string(you.name)+" "+scr_roman(4)+" to investigate the planet within "+string(estimate)+" months.";}}
        if (onceh!=0){var bob;bob=instance_create(you.x+16,you.y-24,obj_star_event);bob.image_alpha=1;bob.image_speed=1;}
        
        scr_event_log("",string(obj_img.faction[4])+" Mission Accepted: The "+string(obj_img.faction[4])+" wish for "+string(obj_img.faction_dudes_formal[1])+" to land on and investigate "+string(you.name)+" "+scr_roman(planet)+" within "+string(estimate)+" months.");
    }
    if (mission!="") and (title=string(obj_img.faction[4])+" Mission"){
        with(obj_temp5){instance_destroy();}
        obj_controller.temp[200]=string(loc);
        var you, onceh;you=0;onceh=0;
        
        if (mission="purge"){with(obj_star){if (name=obj_controller.temp[200]) then instance_create(x,y,obj_temp5);}
            you=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);
            var s;s=0;repeat(4){s+=1;if (you.p_problem[planet,s]="") and (onceh=0){you.p_problem[planet,s]="purge";you.p_timer[planet,s]=estimate;onceh=s;}}
            if (onceh!=0){var bob;bob=instance_create(you.x+16,you.y-24,obj_star_event);bob.image_alpha=1;bob.image_speed=1;bob.color="green";}
            scr_event_log("",string(obj_img.faction[4])+" Mission Accepted: The nobles of "+string(you.name)+" "+string(scr_roman(planet))+" must be selectively purged within "+string(estimate)+" months.");
            if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  You are to selectively purge the Nobles on "+string(you.name)+" "+scr_roman(onceh)+" within "+string(estimate)+" months.";}
        }
        
        if (mission="cleanse"){with(obj_star){if (name=obj_controller.temp[200]) then instance_create(x,y,obj_temp5);}
            you=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);
            var s;s=0;repeat(4){s+=1;if (you.p_problem[planet,s]="") and (onceh=0){you.p_problem[planet,s]="cleanse";you.p_timer[planet,s]=estimate;onceh=s;}}
            if (onceh!=0){var bob;bob=instance_create(you.x+16,you.y-24,obj_star_event);bob.image_alpha=1;bob.image_speed=1;bob.color="green";}
            scr_event_log("",string(obj_img.faction[4])+" Mission Accepted: The mutants beneath "+string(you.name)+" "+string(scr_roman(planet))+" must be cleansed by fire within "+string(estimate)+" months.");
            if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  You are to cleanse by fire the mutants in Hive "+string(you.name)+" "+scr_roman(onceh)+" within "+string(estimate)+" months.";}
        }
        
        if (mission="inquisitor"){with(obj_star){if (name=obj_controller.temp[200]) then instance_create(x,y,obj_temp5);}
            you=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);
            var s;s=0;repeat(4){s+=1;if (you.p_problem[planet,s]="") and (onceh=0){you.p_problem[planet,s]="inquisitor"+string(planet);you.p_timer[planet,s]=estimate;onceh=s;}}
            if (onceh!=0){var bob;bob=instance_create(you.x+16,you.y-24,obj_star_event);bob.image_alpha=1;bob.image_speed=1;bob.color="green";}
            scr_event_log("",string(obj_img.faction[4])+" Mission Accepted: A radical "+string(obj_img.faction_dude_formal[4])+" enroute to "+string(you.name)+" must be removed.  Estimated arrival in "+string(estimate)+" months.");
            if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  A radical "+string(obj_img.faction_dude_formal[4])+" is enroute to "+string(you.name)+", expected within "+string(estimate)+" months.  They are to be silenced and removed.";}
        }
        
        if (mission="spyrer"){with(obj_star){if (name=obj_controller.temp[200]) then instance_create(x,y,obj_temp5);}
            you=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);
            var s;s=0;repeat(4){s+=1;if (you.p_problem[planet,s]="") and (onceh=0){you.p_problem[planet,s]="spyrer";you.p_timer[planet,s]=estimate;onceh=s;}}
            if (onceh!=0){var bob;bob=instance_create(you.x+16,you.y-24,obj_star_event);bob.image_alpha=1;bob.image_speed=1;bob.color="green";}
            scr_event_log("",string(obj_img.faction[4])+" Mission Accepted: The Spyrer on "+string(you.name)+" "+string(scr_roman(planet))+" must be killed within "+string(estimate)+" months.");
            if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  An out of control Spyrer on Hive "+string(you.name)+" "+scr_roman(onceh)+" must be removed within "+string(estimate)+" months.";}
        }
        
        if (mission="artifact"){
            scr_quest(0,"artifact_loan",4,estimate);
            if (obj_ini.fleet_type=1){
                image="fortress";
                if (obj_ini.home_type="Hive") then image="fortress_hive";
                if (obj_ini.home_type="Feral") then image="fortress_feral";
                if (obj_ini.home_type="Ice") then image="fortress_ice";
                if (obj_ini.home_type="Lava") then image="fortress_lava";
                if (obj_ini.icon_name="dorf1") then image="fortress_dorf";
                if (obj_ini.icon_name="dorf2") then image="fortress_dorf";
                if (obj_ini.icon_name="dorf3") then image="fortress_dorf";
                scr_add_artifact("good","inquisition",0,obj_ini.home_name,2);
            }
            if (obj_ini.fleet_type!=1){
                image="artifact_given";
                scr_add_artifact("good","inquisition",0,obj_ini.ship[1],501);
            }
            
            title="New Artifact";fancy_title=0;text_center=0;
            text="The "+string(obj_img.faction[4])+" has left an Artifact in your care, until it may be retrieved.  It has been stored ";
            if (obj_ini.fleet_type=1) then text+="within your "+string(obj_img.hq_ground)+".";
            if (obj_ini.fleet_type!=1) then text+="upon your ship '"+string(obj_ini.ship[1])+"'.";
            scr_event_log("",string(obj_img.faction[4])+" Mission Accepted: The "+string(obj_img.faction[4])+" has left an Artifact in your care.");
            
            var i,last_artifact;i=0;last_artifact=0;
            repeat(100){if (last_artifact=0){i+=1;if (obj_ini.artifact[i]="") then last_artifact=i-1;}}
            
            text+="  It is some form of "+string(obj_ini.artifact[last_artifact])+".";
            option1="";option2="";option3="";
            obj_controller.cooldown=10;exit;
        }
        
        if (mission="necron"){with(obj_star){if (name=obj_controller.temp[200]) then instance_create(x,y,obj_temp5);}
            you=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);
            var s;s=0;repeat(4){s+=1;if (you.p_problem[planet,s]="") and (onceh=0){you.p_problem[planet,s]="bomb";you.p_timer[planet,s]=estimate;onceh=s;}}
            if (onceh!=0){var bob;bob=instance_create(you.x+16,you.y-24,obj_star_event);bob.image_alpha=1;bob.image_speed=1;bob.color="green";}
            
            scr_event_log("",string(obj_img.faction[4])+" Mission Accepted: You have been given a Bomb to seal the "+string(obj_img.faction_dude_formal[13])+" Tomb on "+string(you.name)+" "+scr_roman(planet)+".");
            
            image="necron_cave";title="New Equipment";fancy_title=0;text_center=0;
            text="You have been provided with 1x Plasma Bomb in order to complete the mission.";
            
            if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty.  You have been given a Plasma Bomb to seal the "+string(obj_img.faction_dude_formal)+" Tomb on "+string(you.name)+" "+scr_roman(onceh)+".  It is expected to be completed within "+string(estimate)+" months.";}
            option1="";option2="";option3="";scr_add_item("Plasma Bomb",1);obj_controller.cooldown=10;
            if (demand=1) then demand=0;
            exit;
        }
        
        if (mission="tyranid_org"){with(obj_star){if (name=obj_controller.temp[200]) then instance_create(x,y,obj_temp5);}
            you=instance_nearest(obj_temp5.x,obj_temp5.y,obj_star);
            var s;s=0;repeat(4){s+=1;if (you.p_problem[planet,s]="") and (onceh=0){you.p_problem[planet,s]="tyranid_org";you.p_timer[planet,s]=estimate;onceh=s;}}
            if (onceh!=0){var bob;bob=instance_create(you.x+16,you.y-24,obj_star_event);bob.image_alpha=1;bob.image_speed=1;bob.color="green";}
            image="webber";title="New Equipment";fancy_title=0;text_center=0;
            text="You have been provided with 4x Astartes Webbers in order to complete the mission.";
            
            
            if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  You are to capture a Gaunt organism and return it, unharmed- 4x Webbers have been provided for this purpose.";}
            
            option1="";option2="";option3="";scr_add_item("Webber",4);obj_controller.cooldown=10;
            scr_event_log("",string(obj_img.faction[4])+" Mission Accepted: The "+string(obj_img.faction[4])+" wishes for the capture of a Gaunt.  "+string(you.name)+" "+string(scr_roman(planet))+" is advisable.");            
            obj_controller.useful_info+="Tyr|";
            if (demand=1) then demand=0;
            exit;
        }
        
        if (mission="ethereal"){
            with(obj_star){
                if (p_tau[1]&gt;=4) or (p_tau[2]&gt;=4) or (p_tau[3]&gt;=4) or (p_tau[4]&gt;=4){
                    var bob;bob=instance_create(x+16,y-24,obj_star_event);bob.image_alpha=1;bob.image_speed=1;bob.color="green";
                }
            }
            scr_quest(0,"ethereal_capture",4,estimate);
            obj_controller.useful_info+="Tau|";
            
            if (demand=1){title=string(obj_img.faction[4])+" Mission Demand";text="The "+string(obj_img.faction[4])+" demands that your "+string(obj_img.player_army)+" demonstrate its loyalty to the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  You are to capture the "+string(obj_img.faction[8])+" "+string(obj_img.unit[8,14])+" somewhere within the "+string(you.name)+" system.";}
            if (you.p_problem[planet,1]="recon") then scr_event_log("",string(obj_img.faction[4])+" Mission Accepted: The "+string(obj_img.faction[4])+" wish for you to capture the "+string(obj_img.kingdom_title_shortest)+" and "+string(obj_img.king_title_formal)+".  You are to capture the "+string(obj_img.faction[8])+" "+string(obj_img.unit[8,14])+" somewhere within "+string(you.name)+".");
        }
        
        with(obj_temp5){instance_destroy();}
        
        if (demand=1){demand=0;option1="";option2="";option3="";exit;}// Remove multi-choices
    }
    
    
    if (image="inquisition") and (title="Investigation Completed"){
        obj_temp7.alarm[1]=1;instance_destroy();
    }
    
    if (image="artifact"){
        if (target_comp=2){
            obj_temp4.alarm[3]=1;
        }
        if (target_comp&gt;2) and (target_comp!=7) and (target_comp&lt;9){
            obj_controller.menu=20;
            obj_controller.cooldown=10;
            obj_controller.diplomacy=target_comp;
            obj_controller.trading_artifact=1;
            with(obj_controller){scr_dialogue("artifact");}
            instance_destroy();
        }
        if (target_comp=7) or (target_comp&gt;=9){
            obj_temp4.alarm[4]=1;
            obj_controller.cooldown=10;
            instance_destroy();
        }
    }
    
    if (image="artifact2"){
        obj_temp4.alarm[4]=1;
        obj_controller.cooldown=10;
        instance_destroy();
    }
    
    obj_controller.cooldown=10;
    if (obj_controller.complex_event=false){
        if (number!=0) then obj_turn_end.alarm[1]=4;instance_destroy();
    }
}

if (press=2) and (option2!=""){
    if (image="gene_bad") then scr_loyalty("Mutant "+string(obj_img.organics),"+");
    
    if (mission="spyrer") then obj_controller.disposition[4]-=2;
    if (title="Inquisition Recon") then obj_controller.disposition[4]-=2;
    if (image="inquisition") and (title="Investigation Completed"){
        with(obj_temp7){instance_destroy();}instance_destroy();
    }
    
    
    
    
    if (title="Artifact Offered"){
        with(obj_en_fleet){if (trade_goods="male_her") or (trade_goods="female_her") then instance_destroy();}
        if (obj_ini.fleet_type!=1) then scr_add_artifact("random","",4,obj_ini.ship[1],501);
        if (obj_ini.fleet_type=1) then scr_add_artifact("random","",4,obj_ini.home_name,2);
        var i,last_artifact;i=0;last_artifact=0;
        repeat(100){if (last_artifact=0){i+=1;if (obj_ini.artifact[i]="") then last_artifact=i-1;}}
        option1="";option2="";option3="";
        title=string(obj_img.faction[4])+" Mission Completed";
        text="Your ship sends over a boarding party, who retrieve the offered artifact- ";
        text+=" some form of "+string(obj_ini.artifact[last_artifact])+".  Once it is safely stowed away your ship is then ordered to fire.  The "+string(obj_img.faction_dude_formal[4])+"'s own seems to hesitate an instant before banking away, but is quickly destroyed.";
        image="exploding_ship";
        option1="";option2="";option3="";
        scr_event_log("","Artifact recovered from radical "+string(obj_img.faction_dude_formal[4])+".");
        scr_event_log("",string(obj_img.faction[4])+" Mission Completed: The radical "+string(obj_img.faction_dude_formal[4])+" has been purged.");
        exit;
    }
    
    
    
    if (title="He Built It"){
        obj_ini.god[ma_co,ma_id]+=10;
        option1="";option2="";option3="";
    }
    
    
    
    if (title="Mercy Plea"){
        // If have any marines within the fleet on the ships
        
        var able,i;able=0;i=0;
        
        
        // Several things can happen when the ship is searched;
        // Full of demons, maybe remove a marine, fired upon and explodes
        
        exit;
        
    }
    
    if (title=string(obj_img.faction_dude_formal[4])+" Located"){
        var offer,gender,gender2;
        offer=choose(1,1,2,2,3);
        if (planet=1) then gender="he";if (planet=2) then gender="she";
        if (planet=1) then gender2="his";if (planet=2) then gender2="her";
        
        if (offer=1){
            title="Artifact Offered";
            text="The "+string(obj_img.faction_dude_formal[4])+" claims that this is a massive misunderstanding, and "+string(gender)+" wishes to prove "+string(gender2)+" innocence.  If you allow their ship to leave "+string(gender)+" will give you an artifact.";
            option1="Destroy their vessel";
            option2="Take the artifact and then destroy them";
            option3="Take the artifact and spare them";
            exit;
        }
        
        if (offer=2){
            title="Mercy Plea";
            text="The "+string(obj_img.faction_dude_formal[4])+" claims that "+string(gender)+" has key knowledge that would grant the "+string(obj_img.kingdom_title_shortest)+" vital power over the forces of "+string(obj_img.faction[11])+".  If you allow "+string(gender2)+" ship to leave the forces of "+string(obj_img.faction[11])+" within this sector will be weakened.";
            option1="Destroy their vessel";
            option2="Search their ship";
            option3="Spare them";
            exit;
        }
        
        if (offer=3){
            var gender2;
            if (planet=1) then gender2="his";if (planet=2) then gender2="her";
            with(obj_en_fleet){
                if (trade_goods="male_her") or (trade_goods="female_her"){
                    with(obj_p_fleet){if (action!="") then instance_deactivate_object(id);}
                    with(instance_nearest(x,y,obj_p_fleet)){scr_add_corruption(true,"1d3");}
                    instance_activate_object(obj_p_fleet);
                    instance_destroy();
                }
            }
            title=string(obj_img.faction[4])+" Mission Completed";image="exploding_ship";
            text="You allow communications.  As soon as the vox turns on you hear a sickly, hateful voice.  They begin to speak of the inevitable death of your marines, the fall of all that is and ever shall be, and "+string(gender2)+" Lord of Decay.  Their ship is fired upon and destroyed without hesitation.";
            option1="";option2="";option3="";
            scr_event_log("",string(obj_img.faction[4])+" Mission Completed: The radical "+string(obj_img.faction_dude_formal[4])+" has been purged.");
            exit;
        }
        exit;
    }
    
    if (image="artifact"){
        if (target_comp!=7) and (target_comp&lt;9){
            obj_temp4.alarm[4]=1;
            obj_controller.cooldown=10;
            instance_destroy();
        }
        if (target_comp&gt;=9) or (target_comp=7){// NOPE
            scr_return_ship(obj_temp4.loc,obj_temp4,obj_temp4.num);
            var man_size,ship_id,comp,plan,i;
            i=0;ship_id=0;man_size=0;comp=0;plan=0;
            repeat(30){i+=1;if (obj_ini.ship[i]=obj_temp4.loc) then ship_id=i;}i=0;
            obj_controller.menu=0;obj_controller.managing=0;
            obj_controller.cooldown=10;
            with(obj_temp4){instance_destroy();}
            instance_destroy();exit;
        }
    }
    
    if (image="artifact2"){
            scr_return_ship(obj_temp4.loc,obj_temp4,obj_temp4.num);
            var man_size,ship_id,comp,plan,i;
            i=0;ship_id=0;man_size=0;comp=0;plan=0;
            repeat(30){i+=1;if (obj_ini.ship[i]=obj_temp4.loc) then ship_id=i;}i=0;
            obj_controller.menu=0;obj_controller.managing=0;
            obj_controller.cooldown=10;
            with(obj_temp4){instance_destroy();}
            instance_destroy();exit;
    }
    
    obj_controller.cooldown=10;
    
    if (obj_controller.complex_event=false){
        if (number!=0) then obj_turn_end.alarm[1]=4;instance_destroy();
    }
}




if (press=3) and (option3!=""){
    if (title="Artifact Offered"){
        with(obj_en_fleet){
            if (trade_goods="male_her") or (trade_goods="female_her"){
                action_x=choose(room_width*-1,room_width*2);action_y=choose(room_height*-1,room_height*2);
                alarm[4]=1;trade_goods="|DELETE|";action_spd=256;action="";
            }
        }
        if (obj_ini.fleet_type!=1) then scr_add_artifact("random","",4,obj_ini.ship[1],501);
        if (obj_ini.fleet_type=1) then scr_add_artifact("random","",4,obj_ini.home_name,2);
        var i,last_artifact;i=0;last_artifact=0;
        repeat(100){if (last_artifact=0){i+=1;if (obj_ini.artifact[i]="") then last_artifact=i-1;}}
        option1="";option2="";option3="";
        title=string(obj_img.faction[4])+" Mission Completed";
        text="Your ship sends over a boarding party, who retrieve the offered artifact- ";
        text+=" some form of "+string(obj_ini.artifact[last_artifact])+".  As promised you allow the "+string(obj_img.faction_dude_formal[4])+" to leave, hoping for the best.  What's the worst that could happen?";
        image="artifact_recovered";
        option1="";option2="";option3="";
        scr_event_log("","Artifact Recovered from radical "+string(obj_img.faction_dude_formal[4])+".");
        scr_event_log("",string(obj_img.faction[4])+" Mission Completed: The radical "+string(obj_img.faction_dude_formal[4])+" has been spared.");
        
        var v,ev,;v=0;ev=0;
        repeat(99){v+=1;if (ev=0) and (obj_controller.event[v]="") then ev=v;}
        obj_controller.event[ev]="inquisitor_spared1";obj_controller.event_duration[ev]=floor(random_range(6,18))+1;
        
        exit;
    }
    if (title="Mercy Plea"){
        with(obj_en_fleet){
            if (trade_goods="male_her") or (trade_goods="female_her"){
                action_x=choose(room_width*-1,room_width*2);action_y=choose(room_height*-1,room_height*2);
                trade_goods="|DELETE|";alarm[4]=1;action_spd=256;action="";
            }
        }
        title=string(obj_img.faction[4])+" Mission Completed";
        text="You allow the "+string(obj_img.faction_dude_formal[4])+" to leave, trusting in their words.  If they truly do have key information it is a risk you are willing to take.  What's the worst that could happen?";
        image="artifact_recovered";
        option1="";option2="";option3="";
        
        scr_event_log("",string(obj_img.faction[4])+" Mission Completed?: The radical "+string(obj_img.faction_dude_formal[4])+" has been allowed to flee in order to weaken the forces of "+string(obj_img.faction[11])+", as they promised.");
        
        var v,ev,;v=0;ev=0;
        repeat(99){v+=1;if (ev=0) and (obj_controller.event[v]="") then ev=v;}
        obj_controller.event[ev]="inquisitor_spared2";obj_controller.event_duration[ev]=floor(random_range(6,18))+1;
        
        exit;
    }


    if (image="artifact"){
        if (target_comp&lt;9) and (target_comp!=7){// This returns the marines to the ship
            scr_return_ship(obj_temp4.loc,obj_temp4,obj_temp4.num);
            var man_size,ship_id,comp,plan,i;
            i=0;ship_id=0;man_size=0;comp=0;plan=0;
            repeat(30){i+=1;if (obj_ini.ship[i]=obj_temp4.loc) then ship_id=i;}i=0;
        }
        
        if (target_comp!=3) and (target_comp!=4){
            // Here, have this gift
            var plan;plan=instance_nearest(obj_temp4.x,obj_temp4.y,obj_star);
            plan.p_feature[obj_temp4.num]=string_replace(plan.p_feature[obj_temp4.num],"Artifact|","");
            
            scr_return_ship(obj_temp4.loc,obj_temp4,obj_temp4.num);
            var man_size,ship_id,comp,plan,i;
            i=0;ship_id=0;man_size=0;comp=0;plan=0;
            repeat(30){i+=1;if (obj_ini.ship[i]=obj_temp4.loc) then ship_id=i;}i=0;
            obj_controller.menu=0;obj_controller.managing=0;
            obj_controller.cooldown=10;
            
            // Set disposition
            // 135
            
            obj_controller.menu=20;
            obj_controller.cooldown=10;
            obj_controller.diplomacy=target_comp;
            with(obj_controller){scr_dialogue("artifact_thanks");}
            obj_controller.force_goodbye=2;
            obj_controller.exit_all=1;
            
            // 135
            /*there should be a chance for things to go terribly wrong when you give a gift
            
            Imperium: if chaos, increase the global corruption of imperial planets a bit?
            Imperium: if daemonic, the commander goes chaos after a few turns?
            Mechanicus: if daemonic vastly increases corruption on forge worlds?
            Ecclesiarchy: if daemonic they get really pissed at you?
            Eldar: if daemonic they get really pissed at you?
            Tau: if daemonic all their worlds get big corruption boosts?*/
            
            with(obj_temp4){instance_destroy();}
            instance_destroy();exit;
        }
        
        if (target_comp=3) or (target_comp=4){// Not worth it, mang
            obj_controller.menu=0;obj_controller.managing=0;
            obj_controller.cooldown=10;
            with(obj_temp4){instance_destroy();}
            instance_destroy();
        }
    }
    
    obj_controller.cooldown=10;
    if (obj_controller.complex_event=false){
        if (number!=0) then obj_turn_end.alarm[1]=4;instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hide=true) then exit;
if (!instance_exists(obj_controller)) then exit;
if (instance_exists(obj_fleet)) then exit;

if (woopwoopwoop=1){woopwoopwoop=2;exit;}

if (battle_special&gt;0){
    alarm[0]=1;
    cooldown=10;exit;
}

if (option1="") and (type&lt;5){
obj_controller.cooldown=10;
if (number!=0) and (obj_controller.complex_event=false) then obj_turn_end.alarm[1]=4;
instance_destroy();
}

if (type=98){
    obj_controller.cooldown=10;
    obj_turn_end.current_battle+=1;
    obj_turn_end.alarm[0]=1;
    obj_controller.force_scroll=0;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="13">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hide=true) then exit;
if (!instance_exists(obj_controller)) then exit;
if (instance_exists(obj_fleet)) then exit;

if (woopwoopwoop=1){woopwoopwoop=2;exit;}

if (battle_special&gt;0){
    alarm[0]=1;
    cooldown=10;exit;
}

if (option1="") and (type&lt;5){
    obj_controller.cooldown=10;
    if (number!=0) and (obj_controller.complex_event=false) then obj_turn_end.alarm[1]=4;
    instance_destroy();
}

if (type=98){
    obj_controller.cooldown=10;
    obj_turn_end.current_battle+=1;
    obj_turn_end.alarm[0]=1;
    obj_controller.force_scroll=0;
    instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hide=true) then exit;
if (type=8) and (target_comp&gt;=0) and (obj_controller.man_max&gt;0){
    if ((obj_controller.man_current+9+1)&lt;obj_controller.man_max) then obj_controller.man_current+=1;
     if ((obj_controller.man_current+9+1)&lt;obj_controller.man_max) then obj_controller.man_current+=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hide=true) then exit;
if (type=8) and (target_comp&gt;=0) and (obj_controller.man_max&gt;0){
    if (obj_controller.man_current&gt;1) then obj_controller.man_current-=1;
    if (obj_controller.man_current&gt;1) then obj_controller.man_current-=1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>20</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>9000</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hide=true) then exit;

if (battle_special&gt;0){
    alarm[0]=1;cooldown=10;exit;
}

if (instance_exists(obj_controller)){
    if (obj_controller.force_scroll=1) and (type=99) and (instance_exists(obj_turn_end)){
    
        var p_strength,en_strength,ratio,diceh,mfleet,rdice;
        p_strength=0;en_strength=0;mfleet=obj_turn_end.battle_pobject[obj_turn_end.current_battle];
        p_strength+=mfleet.escort_number;
        p_strength+=mfleet.frigate_number*3;
        p_strength+=mfleet.capital_number*8;
        rdice=floor(random(100))+1;
        
        
        
        with(obj_temp3){instance_destroy();}
        obj_controller.temp[2000]=obj_turn_end.battle_location[obj_turn_end.current_battle];
        with(obj_star){if (name=obj_controller.temp[2000]) then instance_create(x,y,obj_temp3);}
        var that;that=instance_nearest(obj_temp3.x,obj_temp3.y,obj_star);
        with(obj_temp3){instance_destroy();}
        obj_controller.temp[2001]=real(that.id);
        obj_controller.temp[2002]=real(obj_turn_end.battle_opponent[obj_turn_end.current_battle]);
        
        with(obj_temp2){instance_destroy();}with(obj_temp3){instance_destroy();}with(obj_temp4){instance_destroy();}
        with(obj_en_fleet){
            if (orbiting=obj_controller.temp[2001]) and (owner=obj_controller.temp[2002]){
                if (capital_number&gt;0) then repeat(capital_number){instance_create(x,y,obj_temp2);}
                if (frigate_number&gt;0) then repeat(frigate_number){instance_create(x,y,obj_temp3);}
                if (escort_number&gt;0) then repeat(escort_number){instance_create(x,y,obj_temp4);}
            }
        }
        
        en_strength+=instance_number(obj_temp2)*4;
        en_strength+=instance_number(obj_temp3)*2;
        en_strength+=instance_number(obj_temp4);
        with(obj_temp2){instance_destroy();}with(obj_temp3){instance_destroy();}with(obj_temp4){instance_destroy();}
        
        ratio=9999;if (p_strength&gt;0) and (en_strength&gt;0){ratio=(en_strength/p_strength)*100;}
        
        var esc_lost,frig_lost,cap_lost,which,sayd;
        esc_lost=0;frig_lost=0;cap_lost=0;which=0;sayd=0;
        
        ship_lost=0;i=-1;// var ship_lost,i;
        repeat(50){i+=1;ship_lost[i]=0;}i=0;
        i=0;repeat(4){i+=1;if (obj_ini.adv[i]="Kings of Space") then rdice-=10;}
        if (rdice&lt;=80) and (p_strength&lt;=2) then rdice=-5;
        
        if (rdice!=-5){
            repeat(50){
                diceh=floor(random(100))+1;
                if (diceh&lt;=ratio){ratio-=100;
                    var onceh;onceh=0;
                    
                    if (mfleet.escort_number&gt;0) and (onceh=0){
                        esc_lost+=1;
                        which=floor(random(mfleet.escort_number))+1;
                        sayd=mfleet.escort_num[which];
                        
                        obj_ini.ship_hp[sayd]=0;ship_lost[sayd]=1;
                        onceh=1;mfleet.escort_number-=1;
                    }
                    if (mfleet.frigate_number&gt;0) and (onceh=0){
                        frig_lost+=1;
                        which=floor(random(mfleet.frigate_number))+1;
                        sayd=mfleet.frigate_num[which];
                        
                        obj_ini.ship_hp[sayd]=0;ship_lost[sayd]=1;
                        onceh=1;mfleet.frigate_number-=1;
                    }
                    if (mfleet.capital_number&gt;0) and (onceh=0){
                        cap_lost+=1;
                        which=floor(random(mfleet.capital_number))+1;
                        sayd=mfleet.capital_num[which];
                        
                        obj_ini.ship_hp[sayd]=0;ship_lost[sayd]=1;
                        onceh=1;mfleet.capital_number-=1;
                    }
                    
                    // show_message("Ship lost");
                }
            
            }
            scr_dead_marines(1);
        }
        
        obj_p_fleet.selected=0;
        obj_p_fleet.alarm[6]=1;
        with(obj_fleet_select){instance_destroy();}
        obj_controller.popup=0;
        if (obj_controller.zoomed=1){with(obj_controller){scr_zoom();}obj_controller.was_zoomed=0;}
        
        type=98;title="Fleet Retreating";
        cooldown=15;obj_controller.menu=0;
        
        // 139;
        with(obj_temp_inq){instance_destroy();}
        instance_create(obj_turn_end.battle_pobject[obj_turn_end.current_battle].x,obj_turn_end.battle_pobject[obj_turn_end.current_battle].y,obj_temp_inq);
        with(obj_en_fleet){
            if (navy=1) and (point_distance(x,y,obj_temp_inq.x,obj_temp_inq.y)&lt;40) and (trade_goods="player_hold") then trade_goods="";
        }
        with(obj_temp_inq){instance_destroy();}
        
        if (esc_lost+frig_lost+cap_lost&gt;0) and (mfleet.escort_number+mfleet.frigate_number+mfleet.capital_number&gt;0){
            text="Your fleet is given the command to fall back.  The vesels turn and prepare to enter the Warp, constantly under a hail of enemy fire.  Some of your ships remain behind to draw off the attack and give the rest of your fleet a chance to escape.  ";
            
            if (cap_lost=1) then text+=string(cap_lost)+" "+string(obj_img.ship[1,1])+" is destroyed.  ";
            if (frig_lost=1) then text+=string(frig_lost)+" "+string(obj_img.ship[1,2])+" is destroyed.  ";
            if (esc_lost=1) then text+=string(esc_lost)+" Escort is destroyed.  ";
            
            if (cap_lost&gt;1) then text+=string(cap_lost)+" "+string(obj_img.ship[1,1])+"s were destroyed.  ";
            if (frig_lost&gt;1) then text+=string(frig_lost)+" "+string(obj_img.ship[1,2])+"s were destroyed.  ";
            if (esc_lost&gt;1) then text+=string(esc_lost)+" Escorts were destroyed.  ";
        }
        
        if (esc_lost+frig_lost+cap_lost=0){
            text="Your fleet is given the command to fall back.  The vesels turn and prepare to enter "+string(obj_img.travel_formal)+", constantly under a hail of enemy fire.  The entire fleet manages to escape with minimal damage.";
        }
        
        if (mfleet.escort_number+mfleet.frigate_number+mfleet.capital_number=0){
            text="Your fleet is given the command to fall back.  The vessels turn and prepare to enter "+string(obj_img.travel_formal)+", constantly under a hail of enemy fire.  All of your ships are destroyed attempting to flee.";
        }
        
        with(obj_fleet_select){instance_destroy();}
        if (mfleet.escort_number+mfleet.frigate_number+mfleet.capital_number=0) and (instance_exists(mfleet)){with(mfleet){instance_destroy();}}
        
        /*
        with(obj_ini){scr_dead_marines(1);}
        with(obj_ini){scr_ini_ship_cleanup();}
        */
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>cooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hide=true) then exit;
if (!instance_exists(obj_controller)) then exit;
if (instance_exists(obj_fleet)) then exit;
if (obj_controller.scrollbar_engaged!=0) then exit;
if (cooldown&gt;0) then exit;

if (woopwoopwoop=1){woopwoopwoop=2;exit;}

if (battle_special&gt;0){
    alarm[0]=1;
    cooldown=10;exit;
}

if (type=98){
    obj_controller.cooldown=10;
    if (instance_exists(obj_turn_end)){
        obj_turn_end.current_battle+=1;
        obj_turn_end.alarm[0]=1;
    }
    obj_controller.force_scroll=0;
    instance_destroy();exit;
}




if (option1="") and (type&lt;5){
    obj_controller.cooldown=10;
    if (instance_exists(obj_turn_end)) and (obj_controller.complex_event=false){if (number!=0) then obj_turn_end.alarm[1]=4;}
    instance_destroy();exit;
}

if (type&gt;4) and (type!=9) and (cooldown&lt;=0){
    var xx,yy;xx=view_xview[0];yy=view_yview[0];
    
    if (mouse_x&gt;=xx+1006) and (mouse_y&gt;=yy+499) and (mouse_x&lt;=xx+1116) and (mouse_y&lt;yy+519){
        obj_controller.cooldown=10;
        instance_destroy();exit;
    }
}



if (type=5.1) and (cooldown&lt;=0){
    var xx,yy,before,before2;
    xx=view_xview[0];yy=view_yview[0];
    before=target_comp;
    before2=target_role;
    
    if (mouse_y&gt;=yy+210) and (mouse_y&lt;yy+230){
        if (mouse_x&gt;=xx+1468) and (mouse_x&lt;=xx+1515){target_comp=0;cooldown=8000;}
    }    
    if (mouse_y&gt;=yy+230) and (mouse_y&lt;yy+250){
        if (mouse_x&gt;=xx+1030) and (mouse_x&lt;=xx+1120){target_comp=1;cooldown=8000;}
        if (mouse_x&gt;=xx+1140) and (mouse_x&lt;=xx+1230){target_comp=2;cooldown=8000;}
        if (mouse_x&gt;=xx+1250) and (mouse_x&lt;=xx+1340){target_comp=3;cooldown=8000;}
        if (mouse_x&gt;=xx+1360) and (mouse_x&lt;=xx+1450){target_comp=4;cooldown=8000;}
        if (mouse_x&gt;=xx+1470) and (mouse_x&lt;=xx+1560){target_comp=5;cooldown=8000;}
    }
    if (mouse_y&gt;=yy+250) and (mouse_y&lt;yy+270){
        if (mouse_x&gt;=xx+1030) and (mouse_x&lt;=xx+1120){target_comp=6;cooldown=8000;}
        if (mouse_x&gt;=xx+1140) and (mouse_x&lt;=xx+1230){target_comp=7;cooldown=8000;}
        if (mouse_x&gt;=xx+1250) and (mouse_x&lt;=xx+1340){target_comp=8;cooldown=8000;}
        if (mouse_x&gt;=xx+1360) and (mouse_x&lt;=xx+1450){target_comp=9;cooldown=8000;}
        if (mouse_x&gt;=xx+1470) and (mouse_x&lt;=xx+1560){target_comp=10;cooldown=8000;}
    }
}
   
if (type=5) and (cooldown&lt;=0){
    var xx,yy,before,before2;
    xx=view_xview[0];yy=view_yview[0];
    before=target_comp;
    before2=target_role;
    
    /*if (unit_role=obj_ini.role[100,17]) and (obj_controller.command_set[1]!=0){
        if (mouse_y&gt;=yy+210) and (mouse_y&lt;yy+230){
            if (mouse_x&gt;=xx+1468) and (mouse_x&lt;=xx+1515) and (min_exp&gt;=0){target_comp=0;cooldown=8000;}
        }    
        if (mouse_y&gt;=yy+230) and (mouse_y&lt;yy+250) and (unit_role!="Lexicanum") and (unit_role!="Codiciery"){
            if (mouse_x&gt;=xx+1030) and (mouse_x&lt;=xx+1120) and (min_exp&gt;=0){target_comp=1;cooldown=8000;}
            if (mouse_x&gt;=xx+1140) and (mouse_x&lt;=xx+1230) and (min_exp&gt;=0){target_comp=2;cooldown=8000;}
            if (mouse_x&gt;=xx+1250) and (mouse_x&lt;=xx+1340) and (min_exp&gt;=0){target_comp=3;cooldown=8000;}
            if (mouse_x&gt;=xx+1360) and (mouse_x&lt;=xx+1450) and (min_exp&gt;=0){target_comp=4;cooldown=8000;}
            if (mouse_x&gt;=xx+1470) and (mouse_x&lt;=xx+1560) and (min_exp&gt;=0){target_comp=5;cooldown=8000;}
        }
        if (mouse_y&gt;=yy+250) and (mouse_y&lt;yy+270) and (unit_role!="Lexicanum") and (unit_role!="Codiciery"){
            if (mouse_x&gt;=xx+1030) and (mouse_x&lt;=xx+1120) and (min_exp&gt;=0){target_comp=6;cooldown=8000;}
            if (mouse_x&gt;=xx+1140) and (mouse_x&lt;=xx+1230) and (min_exp&gt;=0){target_comp=7;cooldown=8000;}
            if (mouse_x&gt;=xx+1250) and (mouse_x&lt;=xx+1340) and (min_exp&gt;=0){target_comp=8;cooldown=8000;}
            if (mouse_x&gt;=xx+1360) and (mouse_x&lt;=xx+1450) and (min_exp&gt;=0){target_comp=9;cooldown=8000;}
            if (mouse_x&gt;=xx+1470) and (mouse_x&lt;=xx+1560) and (min_exp&gt;=0){target_comp=10;cooldown=8000;}
        }
    }*/
    
    if (unit_role!=obj_ini.role[100,17]) or (obj_controller.command_set[1]!=0){
        if (mouse_y&gt;=yy+210) and (mouse_y&lt;yy+230){
            if (mouse_x&gt;=xx+1468) and (mouse_x&lt;=xx+1515) and (min_exp&gt;=0){target_comp=0;cooldown=8000;}
        }    
        if (mouse_y&gt;=yy+230) and (mouse_y&lt;yy+250) and (unit_role!="Lexicanum") and (unit_role!="Codiciery"){
            if (mouse_x&gt;=xx+1030) and (mouse_x&lt;=xx+1120) and (min_exp&gt;=80){target_comp=1;cooldown=8000;}
            if (mouse_x&gt;=xx+1140) and (mouse_x&lt;=xx+1230) and (min_exp&gt;=70){target_comp=2;cooldown=8000;}
            if (mouse_x&gt;=xx+1250) and (mouse_x&lt;=xx+1340) and (min_exp&gt;=60){target_comp=3;cooldown=8000;}
            if (mouse_x&gt;=xx+1360) and (mouse_x&lt;=xx+1450) and (min_exp&gt;=50){target_comp=4;cooldown=8000;}
            if (mouse_x&gt;=xx+1470) and (mouse_x&lt;=xx+1560) and (min_exp&gt;=40){target_comp=5;cooldown=8000;}
        }
        if (mouse_y&gt;=yy+250) and (mouse_y&lt;yy+270) and (unit_role!="Lexicanum") and (unit_role!="Codiciery"){
            if (mouse_x&gt;=xx+1030) and (mouse_x&lt;=xx+1120) and (min_exp&gt;=35){target_comp=6;cooldown=8000;}
            if (mouse_x&gt;=xx+1140) and (mouse_x&lt;=xx+1230) and (min_exp&gt;=30){target_comp=7;cooldown=8000;}
            if (mouse_x&gt;=xx+1250) and (mouse_x&lt;=xx+1340) and (min_exp&gt;=25){target_comp=8;cooldown=8000;}
            if (mouse_x&gt;=xx+1360) and (mouse_x&lt;=xx+1450) and (min_exp&gt;=20){target_comp=9;cooldown=8000;}
            if (mouse_x&gt;=xx+1470) and (mouse_x&lt;=xx+1560) and (min_exp&gt;=0){target_comp=10;cooldown=8000;}
        }
    }
    
    if (mouse_y&gt;=yy+310) and (mouse_y&lt;yy+330) and (type=5){
        if (mouse_x&gt;=xx+1030) and (mouse_x&lt;xx+1180) and (min_exp&gt;=role_exp[1]) and (role_name[1]!=""){target_role=1;cooldown=8;}
        if (mouse_x&gt;=xx+1200) and (mouse_x&lt;xx+1350) and (min_exp&gt;=role_exp[2]) and (role_name[2]!=""){target_role=2;cooldown=8;}
        if (mouse_x&gt;=xx+1370) and (mouse_x&lt;xx+1520) and (min_exp&gt;=role_exp[3]) and (role_name[3]!=""){target_role=3;cooldown=8;}
    }
    if (mouse_y&gt;=yy+330) and (mouse_y&lt;yy+350) and (type=5){
        if (mouse_x&gt;=xx+1030) and (mouse_x&lt;xx+1180) and (min_exp&gt;=role_exp[4]) and (role_name[4]!=""){target_role=4;cooldown=8;}
        if (mouse_x&gt;=xx+1200) and (mouse_x&lt;xx+1350) and (min_exp&gt;=role_exp[5]) and (role_name[5]!=""){target_role=5;cooldown=8;}
        if (mouse_x&gt;=xx+1370) and (mouse_x&lt;xx+1520) and (min_exp&gt;=role_exp[6]) and (role_name[6]!=""){target_role=6;cooldown=8;}
    }

    
    if (before!=target_comp) and (type=5){
        var i,cap,bear,spec,champ;i=0;cap=0;bear=0;spec=0;champ=0;
    
        var i;i=-1;
        repeat(10){i+=1;role_name[i]="";role_exp[i]=0;}
        req_armor="";req_armor_num=0;
        req_gear="";req_gear_num=0;
        req_mobi="";req_mobi_num=0;
        req_wep1="";req_wep1_num=0;
        req_wep2="";req_wep2_num=0;
        
        if (unit_role=obj_ini.role[100,16]){role_name[1]=obj_ini.role[100,16];role_exp[1]=5;spec=1;}
        if (unit_role=obj_ini.role[100,15]){role_name[1]=obj_ini.role[100,15];role_exp[1]=5;spec=1;}
        if (unit_role=obj_ini.role[100,6]){role_name[1]="Venerable "+string(obj_ini.role[100,6]);role_exp[1]=400;spec=0;}
        
        
        if (unit_role=obj_ini.role[100,14]) and (global.chapter_name!="Space Wolves") and (global.chapter_name!="Iron Hands"){role_name[1]=obj_ini.role[100,14];role_exp[1]=5;spec=1;}
        if (unit_role="Lexicanum") and (target_comp=0){
            role_name[1]=obj_ini.role[100,17];role_exp[1]=125;spec=1;
            role_name[2]="Codiciery";role_exp[2]=80;
        }
        if (unit_role="Codiciery") and (target_comp=0){
            role_name[1]=obj_ini.role[100,17];role_exp[1]=125;spec=1;
        }
        
        
        if ((target_comp=0) or (target_comp&gt;10)) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            i+=1;role_name[i]=obj_ini.role[100,2];role_exp[i]=90;// 136;
        }
        
        if (target_comp=1) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"1");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=100;}}
            if (units=1){bear=scr_role_count("Standard Bearer","1");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=95;}}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"1");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}
            // i+=1;role_name[i]=obj_ini.role[100,2];role_exp[i]=90;// 136;
            i+=1;role_name[i]="Terminator";role_exp[i]=90;
            i+=1;role_name[i]=obj_ini.role[100,3];role_exp[i]=80;
            if (units=1){i+=1;role_name[i]=obj_ini.role[100,6];role_exp[i]=80;}
        }
        
        if (target_comp=2) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"2");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=80;}}
            if (units=1){bear=scr_role_count("Standard Bearer","2");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=75;}}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"2");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}
            i+=1;role_name[i]=obj_ini.role[100,8];role_exp[i]=70;
            i+=1;role_name[i]=obj_ini.role[100,10];role_exp[i]=70;
            i+=1;role_name[i]=obj_ini.role[100,9];role_exp[i]=70;
            if (units=1){i+=1;role_name[i]=obj_ini.role[100,6];role_exp[i]=75;}
        }
        
        if (target_comp=3) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"3");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=70;}}
            if (units=1){bear=scr_role_count("Standard Bearer","3");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=65;}}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"3");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}
            i+=1;role_name[i]=obj_ini.role[100,8];role_exp[i]=60;
            i+=1;role_name[i]=obj_ini.role[100,10];role_exp[i]=60;
            i+=1;role_name[i]=obj_ini.role[100,9];role_exp[i]=60;
            if (units=1){i+=1;role_name[i]=obj_ini.role[100,6];role_exp[i]=60;}
        }
        
        if (target_comp=4) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"4");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=60;}}
            if (units=1){bear=scr_role_count("Standard Bearer","4");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=55;}}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"4");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}
            i+=1;role_name[i]=obj_ini.role[100,8];role_exp[i]=50;
            i+=1;role_name[i]=obj_ini.role[100,10];role_exp[i]=50;
            i+=1;role_name[i]=obj_ini.role[100,9];role_exp[i]=50;
            if (units=1){i+=1;role_name[i]=obj_ini.role[100,6];role_exp[i]=50;}
        }
        
        if (target_comp=5) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"5");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=50;}}
            if (units=1){bear=scr_role_count("Standard Bearer","5");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=45;}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"5");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}}
            i+=1;role_name[i]=obj_ini.role[100,8];role_exp[i]=40;
            i+=1;role_name[i]=obj_ini.role[100,10];role_exp[i]=40;
            i+=1;role_name[i]=obj_ini.role[100,9];role_exp[i]=40;
            if (units=1){i+=1;role_name[i]=obj_ini.role[100,6];role_exp[i]=40;}
        }
        
        if (target_comp=6) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"6");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=45;}}
            if (units=1){bear=scr_role_count("Standard Bearer","6");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=40;}}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"6");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}
            i+=1;role_name[i]=obj_ini.role[100,8];role_exp[i]=35;
            if (units=1){i+=1;role_name[i]=obj_ini.role[100,6];role_exp[i]=35;}
        }
        
        if (target_comp=7) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"7");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=40;}}
            if (units=1){bear=scr_role_count("Standard Bearer","7");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=35;}}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"7");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}
            i+=1;role_name[i]=obj_ini.role[100,8];role_exp[i]=30;
            if (units=1){i+=1;role_name[i]=obj_ini.role[100,6];role_exp[i]=30;}
        }
        
        if (target_comp=8) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"8");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=40;}}
            if (units=1){bear=scr_role_count("Standard Bearer","8");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=30;}}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"8");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}
            i+=1;role_name[i]=obj_ini.role[100,10];role_exp[i]=25;
            if (units=1){i+=1;role_name[i]=obj_ini.role[100,6];role_exp[i]=25;}
        }
        
        if (target_comp=9) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"9");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=40;}}
            if (units=1){bear=scr_role_count("Standard Bearer","9");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=25;}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"9");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}}
            i+=1;role_name[i]=obj_ini.role[100,9];role_exp[i]=20;
            if (units=1){i+=1;role_name[i]=obj_ini.role[100,6];role_exp[i]=20;}
        }
        
        if (target_comp=10) and (spec=0){
            i=0;cap=0;bear=0;champ=0;
            if (units=1){cap=scr_role_count(obj_ini.role[100,5],"10");if (cap=0){i+=1;role_name[i]=obj_ini.role[100,5];role_exp[i]=40;}}
            if (units=1){bear=scr_role_count("Standard Bearer","10");if (bear=0){i+=1;role_name[i]="Standard Bearer";role_exp[i]=25;}}
            if (units=1){champ=scr_role_count(obj_ini.role[100,7],"10");if (champ=0){i+=1;role_name[i]=obj_ini.role[100,7];role_exp[i]=120;}}
            i+=1;role_name[i]=obj_ini.role[100,12];role_exp[i]=0;
        }
        
        
        
        var huj;huj=1;
        if (unit_role=obj_ini.role[100,5]){
            huj-=scr_role_count(obj_ini.role[100,5],string(target_comp));
            huj-=scr_role_count("Company Champion",string(target_comp));
        }
        if (huj=1) and (target_comp!=0){i+=1;role_name[i]="DoNotChange";}
        
        target_role=0;all_good=0;
        
        
        if (obj_controller.command_set[2]=1){var w;w=0;
            repeat(10){w+=1;if (role_name[w]!="") and (role_exp[w]&gt;5) then role_exp[w]=5;}
        }
        
        /* More elaborate checking here; the EXP should be the minimum for that company.
        If any of the units are captain, dread, special, etc. then it should be greyed out.*/
        
    }
    
    
    
    if (before2!=target_role) and (type=5){
        var i,rall;i=0;rall="";all_good=0;
        
        req_armor="";req_armor_num=0;have_armor_num=0;
        req_gear="";req_gear_num=0;have_gear_num=0;
        req_mobi="";req_mobi_num=0;have_mobi_num=0;
        req_wep1="";req_wep1_num=0;have_wep1_num=0;
        req_wep2="";req_wep2_num=0;have_wep2_num=0;
        
        rall=role_name[target_role];
        
        if (rall=obj_ini.role[100,14]) and (global.chapter_name!="Space Wolves") and (global.chapter_name!="Iron Hands"){req_armor="";req_armor_num=0;req_wep1="";req_wep1_num=0;req_wep2="";req_wep2_num=0;req_mobi="";req_mobi_num=0;}
        if (rall=obj_ini.role[100,15]){req_armor="";req_armor_num=0;req_wep1="";req_wep1_num=0;req_wep2="";req_wep2_num=0;req_mobi="";req_mobi_num=0;}
        
        if (rall=obj_ini.role[100,17]){req_armor="";req_armor_num=0;req_wep1=obj_ini.wep1[100,17];req_wep1_num=units;req_wep2=obj_ini.wep2[100,17];req_wep2_num=units;req_gear=obj_ini.gear[100,17];req_gear_num=units;}
        if (rall="Codiciery"){req_armor="";req_armor_num=0;req_wep1="";req_wep1_num=0;req_wep2="";req_wep2_num=0;req_mobi="";req_mobi_num=0;req_gear=obj_ini.gear[100,17];req_gear_num=units;}
        if (rall="Lexicanum"){req_armor="";req_armor_num=0;req_wep1="";req_wep1_num=0;req_wep2="";req_wep2_num=0;req_mobi="";req_mobi_num=0;}
                
        if (rall=obj_ini.role[100,5]){req_armor=obj_ini.armor[100,5];req_armor_num=units;req_wep1=string(obj_img.blade)+"sword";req_wep1_num=units;req_wep2=string(obj_img.gyro_adj)+" Pistol";req_wep2_num=units;}
        if (rall="Standard Bearer"){req_armor="Power Armor";req_armor_num=units;req_wep2="Company Standard";req_wep2_num=units;}
        if (rall=obj_ini.role[100,3]){req_armor=obj_ini.armor[100,3];req_armor_num=units;req_wep1=obj_ini.wep1[100,3];req_wep1_num=units;req_wep2=obj_ini.wep2[100,3];req_wep2_num=units;}
        if (rall=obj_ini.role[100,4]){req_armor=obj_ini.armor[100,4];req_armor_num=units;req_wep1=obj_ini.wep1[100,4];req_wep1_num=units;req_wep2=obj_ini.wep2[100,4];req_wep2_num=units;}
        if (rall=obj_ini.role[100,8]){req_armor=obj_ini.armor[100,8];req_armor_num=units;req_wep1=obj_ini.wep1[100,8];req_wep1_num=units;req_wep2=obj_ini.wep2[100,8];req_wep2_num=units;}
        if (rall=obj_ini.role[100,9]){req_armor=obj_ini.armor[100,9];req_armor_num=units;req_wep1=obj_ini.wep1[100,9];req_wep1_num=units;req_wep2=obj_ini.wep2[100,9];req_wep2_num=units;}
        if (rall=obj_ini.role[100,10]){req_armor=obj_ini.armor[100,10];req_armor_num=units;req_wep1=obj_ini.wep1[100,10];req_wep1_num=units;req_wep2=obj_ini.wep2[100,10];req_wep2_num=units;req_mobi="Jump Pack";req_mobi_num=units;}
        
        if (rall=obj_ini.role[100,2]){req_wep1=obj_ini.wep1[100,2];req_wep1_num=units;req_wep2=obj_ini.wep2[100,2];req_wep2_num=units;req_mobi=obj_ini.mobi[100,2];req_mobi_num=units;}
        
        if (rall=obj_ini.role[100,6]){req_armor=obj_img.unit[1,6];req_armor_num=units;req_wep1=obj_ini.wep1[100,6];req_wep1_num=units;req_wep2=obj_ini.wep2[100,6];req_wep2_num=units;}
        if (rall="Venerable "+string(obj_ini.role[100,6])){req_armor="";req_armor_num=0;req_wep1="";req_wep1_num=0;req_wep2="";req_wep2_num=0;}
        
        
        
        repeat(obj_controller.man_max){
            i+=1;
            
            if (obj_controller.man[i]!="") and (obj_controller.man_sel[i]=1) and (obj_controller.ma_promote[i]=1) and (obj_controller.ma_exp[i]&gt;=min_exp){
                if (req_armor="Power Armor"){
                    if (obj_controller.ma_armor[i]="MK3 Iron Armor") or (obj_controller.ma_armor[i]="MK4 Maximus") or (obj_controller.ma_armor[i]="MK6 Corvus") then have_armor_num+=1;
                    if (obj_controller.ma_armor[i]="MK7 Aquila") or (obj_controller.ma_armor[i]="Power Armor") then have_armor_num+=1;
                }
                if (req_armor=string(obj_img.battlesuit)){if (obj_controller.ma_armor[i]=string(obj_img.battlesuit)) or (obj_controller.ma_armor[i]="Tartaros") then have_armor_num+=1;}
                
                if (obj_controller.ma_wep1[i]=req_wep1) or (obj_controller.ma_wep2[i]=req_wep1) then have_wep1_num+=1;
                if (obj_controller.ma_wep2[i]=req_wep2) or (obj_controller.ma_wep1[i]=req_wep2) then have_wep2_num+=1;
                
                
                if (obj_controller.ma_gear[i]=req_gear) then have_gear_num+=1;
                if (obj_controller.ma_mobi[i]=req_mobi) then have_mobi_num+=1;
                
                if (req_wep1="Heavy Ranged"){
                    if (obj_controller.ma_wep1[i]="Heavy "+string(obj_img.gyro)) or (obj_controller.ma_wep1[i]=string(obj_img.laser)+"cannon") or (obj_controller.ma_wep1[i]="Missile Launcher") then have_wep1_num+=1;
                }
            }
            
            // if (n_wep1=n_wep2) and ((o_wep1!=n_wep1) or (o_wep2!=n_wep2)){have_wep1_num-=1;have_wep2_num-=1;}
            
        }// End Repeat
        
        // This checks to see if there is any more in the armory
        if (req_armor="Power Armor"){
            have_armor_num+=scr_item_count("MK3 Iron Armor");
            have_armor_num+=scr_item_count("MK4 Maximus");
            have_armor_num+=scr_item_count("MK6 Corvus");
            have_armor_num+=scr_item_count("MK7 Aquila");
            have_armor_num+=scr_item_count("Power Armor");
        }
        if (req_armor=string(obj_img.battlesuit)){
            have_armor_num+=scr_item_count(string(obj_img.battlesuit));
            have_armor_num+=scr_item_count("Tartaros");
        }
        if (req_armor=obj_img.unit[1,6]) then have_armor_num+=scr_item_count(obj_img.unit[1,6]);
        
        if (req_wep1!="Heavy Ranged") then have_wep1_num+=scr_item_count(string(req_wep1));
        if (req_wep2!="Heavy Ranged") then have_wep2_num+=scr_item_count(string(req_wep2));
        if (req_wep1="Heavy Ranged"){
            have_wep1_num+=scr_item_count(string(obj_img.laser)+"cannon");
            have_wep1_num+=scr_item_count("Heavy "+string(obj_img.gyro));
            have_wep1_num+=scr_item_count("Missile Launcher");
        }
        if (req_wep2="Heavy Ranged"){
            have_wep2_num+=scr_item_count("Heavy "+string(obj_img.gyro));
            have_wep2_num+=scr_item_count("Heavy "+string(obj_img.gyro));
            have_wep2_num+=scr_item_count("Missile Launcher");
        }
        if (req_gear!="") then have_gear_num+=scr_item_count(string(req_gear));
        if (req_mobi!="") then have_mobi_num+=scr_item_count(string(req_mobi));
        
        if ((have_armor_num&gt;=req_armor_num) or (req_armor="")) and ((have_wep1_num&gt;=req_wep1_num) or (req_wep1="")) and ((have_wep2_num&gt;=req_wep2_num) or (req_wep2="")) then all_good=0.4;
        if (req_gear="") or (req_gear_num&lt;=have_gear_num) then all_good+=0.3;
        if (req_mobi="") or (req_mobi_num&lt;=have_mobi_num) then all_good+=0.3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Transfer Below</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var xx,yy,change_tab;
xx=view_xview[0];
yy=view_yview[0];
change_tab=0;


if (mouse_x&gt;=xx+1465) and (mouse_y&gt;=yy+499) and (mouse_x&lt;xx+1576) and (mouse_y&lt;yy+518){// Transfering right here
    
    if (type=5.1){
        if (target_comp&gt;10) then target_comp=0;
        if (company&gt;10) then company=0;
        manag=obj_controller.managing;
        if (manag&gt;10) then manag=0;
    }
    if (type=5.1) and (cooldown&lt;=0) and (company!=target_comp) and (target_comp!=-1){
        cooldown=999;obj_controller.cooldown=8000;
        
        var mahreens,w,god,vehi,god2;
        mahreens=0;w=0;god=0;vehi=0;god2=0;
        
        repeat(300){w+=1;if (god=0){if (obj_ini.name[target_comp,w]=""){god=1;mahreens=w;}}}// Gets the number of marines in the target company
        w=0;
        repeat(100){w+=1;if (god2=0){if (obj_ini.veh_role[target_comp,w]=""){god2=1;vehi=w;}}}// Gets the number of vehicles in the target company
        
        // The MAHREENS and TARGET/FROM seems to check out
        
        w=0;
        repeat(300){w+=1;
            if (obj_controller.man[w]="man") and (obj_controller.man_sel[w]=1){
                var check;check=0;
                // Pass variables here
                obj_ini.race[target_comp,mahreens]=obj_ini.race[company,obj_controller.ide[w]];
                obj_ini.loc[target_comp,mahreens]=obj_ini.loc[company,obj_controller.ide[w]];
                obj_ini.role[target_comp,mahreens]=obj_ini.role[company,obj_controller.ide[w]];
                obj_ini.name[target_comp,mahreens]=obj_ini.name[company,obj_controller.ide[w]];
                obj_ini.mobi[target_comp,mahreens]=obj_ini.mobi[company,obj_controller.ide[w]];
                obj_ini.wep1[target_comp,mahreens]=obj_ini.wep1[company,obj_controller.ide[w]];
                obj_ini.wep2[target_comp,mahreens]=obj_ini.wep2[company,obj_controller.ide[w]];
                obj_ini.armor[target_comp,mahreens]=obj_ini.armor[company,obj_controller.ide[w]];
                obj_ini.gear[target_comp,mahreens]=obj_ini.gear[company,obj_controller.ide[w]];
                obj_ini.hp[target_comp,mahreens]=obj_ini.hp[company,obj_controller.ide[w]];
                obj_ini.chaos[target_comp,mahreens]=obj_ini.chaos[company,obj_controller.ide[w]];
                obj_ini.god[target_comp,mahreens]=obj_ini.god[company,obj_controller.ide[w]];
                obj_ini.experience[target_comp,mahreens]=obj_ini.experience[company,obj_controller.ide[w]];
                obj_ini.age[target_comp,mahreens]=obj_ini.age[company,obj_controller.ide[w]];
                obj_ini.lid[target_comp,mahreens]=obj_ini.lid[company,obj_controller.ide[w]];
                obj_ini.wid[target_comp,mahreens]=obj_ini.wid[company,obj_controller.ide[w]];
                obj_ini.bio[target_comp,mahreens]=obj_ini.bio[company,obj_controller.ide[w]];
                obj_ini.spe[target_comp,mahreens]=obj_ini.spe[company,obj_controller.ide[w]];
                
                // This is pulling the name, correctly, and showing the right target CO/ID
                // show_message("Marine Number "+string(obj_controller.ide[w])+", Name: "+string(obj_ini.name[company,obj_controller.ide[w]])+", being moved to "+string(target_comp)+"/"+string(mahreens));
                // show_message("Moved to slot number: "+string(target_comp)+"/"+string(mahreens)+", that slot's Name: "+string(obj_ini.name[target_comp,mahreens]));
                
                // Clear variables here
                obj_ini.race[company,obj_controller.ide[w]]=0;
                obj_ini.loc[company,obj_controller.ide[w]]="";
                obj_ini.role[company,obj_controller.ide[w]]="";
                obj_ini.name[company,obj_controller.ide[w]]="";
                obj_ini.wep1[company,obj_controller.ide[w]]="";
                obj_ini.wep2[company,obj_controller.ide[w]]="";
                obj_ini.armor[company,obj_controller.ide[w]]="";
                obj_ini.gear[company,obj_controller.ide[w]]="";
                obj_ini.mobi[company,obj_controller.ide[w]]="";
                obj_ini.god[company,obj_controller.ide[w]]="";
                obj_ini.hp[company,obj_controller.ide[w]]=0;
                obj_ini.chaos[company,obj_controller.ide[w]]=0;
                obj_ini.experience[company,obj_controller.ide[w]]=0;
                obj_ini.age[company,obj_controller.ide[w]]=0;
                obj_ini.wid[company,obj_controller.ide[w]]=0;
                obj_ini.lid[company,obj_controller.ide[w]]=0;
                obj_ini.bio[company,obj_controller.ide[w]]=0;
                obj_ini.spe[company,obj_controller.ide[w]]="";
                mahreens+=1;
            }
            if (obj_controller.man[w]="vehicle") and (obj_controller.man_sel[w]=1){// This seems to execute the correct number of times
                var check;check=0;
                
                obj_ini.veh_race[target_comp,vehi]=obj_ini.veh_race[company,obj_controller.ide[w]];
                obj_ini.veh_loc[target_comp,vehi]=obj_ini.veh_loc[company,obj_controller.ide[w]];
                obj_ini.veh_role[target_comp,vehi]=obj_ini.veh_role[company,obj_controller.ide[w]];
                obj_ini.veh_wep1[target_comp,vehi]=obj_ini.veh_wep1[company,obj_controller.ide[w]];
                obj_ini.veh_wep2[target_comp,vehi]=obj_ini.veh_wep2[company,obj_controller.ide[w]];
                obj_ini.veh_upgrade[target_comp,vehi]=obj_ini.veh_upgrade[company,obj_controller.ide[w]];
                obj_ini.veh_hp[target_comp,vehi]=obj_ini.veh_hp[company,obj_controller.ide[w]];
                obj_ini.veh_chaos[target_comp,vehi]=obj_ini.veh_chaos[company,obj_controller.ide[w]];
                obj_ini.veh_pilots[target_comp,vehi]=0;
                obj_ini.veh_lid[target_comp,vehi]=obj_ini.veh_lid[company,obj_controller.ide[w]];
                obj_ini.veh_wid[target_comp,vehi]=obj_ini.veh_wid[company,obj_controller.ide[w]];
                
                obj_ini.veh_race[company,obj_controller.ide[w]]=0;obj_ini.veh_loc[company,obj_controller.ide[w]]="";
                obj_ini.veh_role[company,obj_controller.ide[w]]="";obj_ini.veh_wep1[company,obj_controller.ide[w]]="";
                obj_ini.veh_wep2[company,obj_controller.ide[w]]="";obj_ini.veh_upgrade[company,obj_controller.ide[w]]="";
                obj_ini.veh_hp[company,obj_controller.ide[w]]=0;obj_ini.veh_chaos[company,obj_controller.ide[w]]=0;
                obj_ini.veh_pilots[company,obj_controller.ide[w]]=0;obj_ini.veh_lid[company,obj_controller.ide[w]]=0;
                obj_ini.veh_wid[company,obj_controller.ide[w]]=0;
                
                vehi+=1;
            }
            
        }
        
        // Check this
        
        with(obj_controller){scr_management(1);}
        obj_ini.heh1=company;obj_ini.heh2=target_comp;
        with(obj_ini){
            scr_company_order(heh1);
            scr_company_order(heh2);
            scr_vehicle_order(heh1);
            scr_vehicle_order(heh2);
        }
        
        with(obj_controller){
            // man_current=0;
            var i;i=-1;man_size=0;selecting_location="";selecting_types="";selecting_ship=0;
            repeat(501){w+=1;
                man[w]="";ide[w]=0;man_sel[w]=0;ma_lid[w]=0;ma_wid[w]=0;ma_god[w]=0;ma_bio[w]=0;
                ma_race[w]=0;ma_loc[w]="";ma_name[w]="";ma_role[w]="";ma_wep1[w]="";
                ma_wep2[w]="";ma_armor[w]="";ma_health[w]=100;ma_chaos[w]=0;ma_exp[w]=0;ma_promote[w]=0;
                sh_ide[w]=0;sh_name[w]="";sh_class[w]="";sh_loc[w]="";sh_hp[w]="";sh_cargo[w]=0;sh_cargo_max[w]="";
            }
            alll=0;
            if (managing&lt;=10) and (managing!=0) then scr_company_view(managing);
            if (managing&gt;10) or (managing=0) then scr_special_view(managing);
            cooldown=10;sel_loading=0;unload=0;alarm[6]=30;
        }
        
        with(obj_managment_panel){instance_destroy();}
        
        obj_controller.cooldown=10;
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Promoting/Transfer Below</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var xx,yy,change_tab,dnc;
xx=view_xview[0];
yy=view_yview[0];
change_tab=0;
dnc=false;

if (type=6) and (cooldown&lt;=0){// Actually changing equipment right here
    if (target_comp=1) or (target_comp=2){
        if (mouse_y&gt;=yy+318) and (mouse_y&lt;yy+330) and (mouse_x&gt;=xx+1190) and (mouse_x&lt;xx+1216) and (tab!=1){change_tab=1;tab=1;obj_controller.last_weapons_tab=1;cooldown=8000;}
        if (mouse_y&gt;=yy+318) and (mouse_y&lt;yy+330) and (mouse_x&gt;=xx+1263) and (mouse_x&lt;xx+1289) and (tab!=2){change_tab=1;tab=2;obj_controller.last_weapons_tab=2;cooldown=8000;}
        if (mouse_y&gt;=yy+318) and (mouse_y&lt;yy+330) and (mouse_x&gt;=xx+1409) and (mouse_x&lt;xx+1435) and (target_comp&lt;3){
            var onceh;onceh=0;cooldown=8000;
            if (onceh=0) and (master_crafted=0){master_crafted=1;obj_controller.popup_master_crafted=1;onceh=1;scr_weapons_equip();}
            if (onceh=0) and (master_crafted=1){master_crafted=0;obj_controller.popup_master_crafted=0;onceh=1;scr_weapons_equip();}
        }
    }
    
    
    if ((mouse_x&gt;=xx+1296) and (mouse_x&lt;xx+1578)) or (change_tab=1){
        var befi;befi=target_comp;
        
        if (change_tab=0){
            if (mouse_y&gt;=yy+220) and (mouse_y&lt;yy+240){target_comp=1;cooldown=8000;tab=obj_controller.last_weapons_tab;}
            if (mouse_y&gt;=yy+240) and (mouse_y&lt;yy+260){target_comp=2;cooldown=8000;tab=obj_controller.last_weapons_tab;}
            if (mouse_y&gt;=yy+260) and (mouse_y&lt;yy+280){target_comp=3;cooldown=8000;}
            if (mouse_y&gt;=yy+280) and (mouse_y&lt;yy+300){target_comp=4;cooldown=8000;}
            if (mouse_y&gt;=yy+300) and (mouse_y&lt;yy+320){target_comp=5;cooldown=8000;}
        }
        
        if ((befi!=target_comp) and (vehicle_equipment=0)) or (change_tab=1){
            var i;i=0;repeat(40){i+=1;item_name[i]="";}
            
            scr_weapons_equip();
            
        }
        
        
        
    }
    
    
    
    var top;top=0;
    if (mouse_x&gt;=xx+1016) and (mouse_x&lt;xx+1160){
        if (mouse_y&gt;=yy+335) and (mouse_y&lt;yy+355) and (item_name[1]!=""){top=1;cooldown=8000;}
        if (mouse_y&gt;=yy+355) and (mouse_y&lt;yy+375) and (item_name[2]!=""){top=2;cooldown=8000;}
        if (mouse_y&gt;=yy+375) and (mouse_y&lt;yy+395) and (item_name[3]!=""){top=3;cooldown=8000;}
        if (mouse_y&gt;=yy+395) and (mouse_y&lt;yy+415) and (item_name[4]!=""){top=4;cooldown=8000;}
        if (mouse_y&gt;=yy+415) and (mouse_y&lt;yy+435) and (item_name[5]!=""){top=5;cooldown=8000;}
        if (mouse_y&gt;=yy+435) and (mouse_y&lt;yy+455) and (item_name[6]!=""){top=6;cooldown=8000;}
        if (mouse_y&gt;=yy+455) and (mouse_y&lt;yy+475) and (item_name[7]!=""){top=7;cooldown=8000;}
    }
    if (mouse_x&gt;=xx+1170) and (mouse_x&lt;xx+1314){
        if (mouse_y&gt;=yy+335) and (mouse_y&lt;yy+355) and (item_name[8]!=""){top=8;cooldown=8000;}
        if (mouse_y&gt;=yy+355) and (mouse_y&lt;yy+375) and (item_name[9]!=""){top=9;cooldown=8000;}
        if (mouse_y&gt;=yy+375) and (mouse_y&lt;yy+395) and (item_name[10]!=""){top=10;cooldown=8000;}
        if (mouse_y&gt;=yy+395) and (mouse_y&lt;yy+415) and (item_name[11]!=""){top=11;cooldown=8000;}
        if (mouse_y&gt;=yy+415) and (mouse_y&lt;yy+435) and (item_name[12]!=""){top=12;cooldown=8000;}
        if (mouse_y&gt;=yy+435) and (mouse_y&lt;yy+455) and (item_name[13]!=""){top=13;cooldown=8000;}
        if (mouse_y&gt;=yy+455) and (mouse_y&lt;yy+475) and (item_name[14]!=""){top=14;cooldown=8000;}
    }
    if (mouse_x&gt;=xx+1324) and (mouse_x&lt;xx+1468){
        if (mouse_y&gt;=yy+335) and (mouse_y&lt;yy+355) and (item_name[15]!=""){top=15;cooldown=8000;}
        if (mouse_y&gt;=yy+355) and (mouse_y&lt;yy+375) and (item_name[16]!=""){top=16;cooldown=8000;}
        if (mouse_y&gt;=yy+375) and (mouse_y&lt;yy+395) and (item_name[17]!=""){top=17;cooldown=8000;}
        if (mouse_y&gt;=yy+395) and (mouse_y&lt;yy+415) and (item_name[18]!=""){top=18;cooldown=8000;}
        if (mouse_y&gt;=yy+415) and (mouse_y&lt;yy+435) and (item_name[19]!=""){top=19;cooldown=8000;}
        if (mouse_y&gt;=yy+435) and (mouse_y&lt;yy+455) and (item_name[20]!=""){top=20;cooldown=8000;}
        if (mouse_y&gt;=yy+455) and (mouse_y&lt;yy+475) and (item_name[21]!=""){top=21;cooldown=8000;}
    }
    if (mouse_x&gt;=xx+1468) and (mouse_x&lt;xx+1612){
        if (mouse_y&gt;=yy+335) and (mouse_y&lt;yy+355) and (item_name[22]!=""){top=22;cooldown=8000;}
        if (mouse_y&gt;=yy+355) and (mouse_y&lt;yy+375) and (item_name[23]!=""){top=23;cooldown=8000;}
        if (mouse_y&gt;=yy+375) and (mouse_y&lt;yy+395) and (item_name[24]!=""){top=24;cooldown=8000;}
        if (mouse_y&gt;=yy+395) and (mouse_y&lt;yy+415) and (item_name[25]!=""){top=25;cooldown=8000;}
        if (mouse_y&gt;=yy+415) and (mouse_y&lt;yy+435) and (item_name[26]!=""){top=26;cooldown=8000;}
        if (mouse_y&gt;=yy+435) and (mouse_y&lt;yy+455) and (item_name[27]!=""){top=27;cooldown=8000;}
        if (mouse_y&gt;=yy+455) and (mouse_y&lt;yy+475) and (item_name[28]!=""){top=28;cooldown=8000;}
    }
    
    
    
    if (top!=0){
        warning="";// Add have right here?
        if (target_comp=1){n_wep1=item_name[top];sel1=top;}
        if (target_comp=2){n_wep2=item_name[top];sel2=top;}
        if (target_comp=3){n_armor=item_name[top];sel3=top;}
        if (target_comp=4){n_gear=item_name[top];sel4=top;}
        if (target_comp=5){n_mobi=item_name[top];sel5=top;}
    }
    
    if (target_comp=1) and ((n_wep1="(None)") or (n_wep1="")){n_good1=1;}
    if (target_comp=2) and ((n_wep2="(None)") or (n_wep2="")){n_good2=1;}
    if (target_comp=3) and ((n_armor="(None)") or (n_armor="")){n_good2=1;}
    if (target_comp=4) and ((n_gear="(None)") or (n_gear="")){n_good4=1;}
    if (target_comp=5) and ((n_mobi="(None)") or (n_mobi="")){n_good5=1;}
    // Removed EXIT; from each of these
    
    
    // if (n_wep1=n_wep2){if (o_wep1=n_wep1) and (o_wep2!=n_wep2) then have_wep2_num-=1;if (o_wep2=n_wep2) and (o_wep1!=n_wep1) then have_wep1_num-=1;}
    
    
    
    if (target_comp=1) and (n_wep1!="Assortment") and (n_wep1!="(None)"){// Check numbers
        req_wep1_num=units;have_wep1_num=0;
        var i;i=0;
        repeat(obj_controller.man_max){i+=1;
            // if (vehicle_equipment=0) and (obj_controller.man[i]="man") and (obj_controller.man_sel[i]=1) and (obj_controller.ma_wep1[i]=n_wep1) then req_wep1_num+=1;
            // if (vehicle_equipment=0) and (obj_controller.man[i]="man") and (obj_controller.man_sel[i]=1) and (obj_controller.ma_wep2[i]=n_wep1) then req_wep1_num+=1;
            if (vehicle_equipment=0) and (obj_controller.ma_wep1[i]=n_wep1) then have_wep1_num+=1;
        }
        // req_wep1_num+=scr_item_count(n_wep1);
        have_wep1_num+=scr_item_count(n_wep1);
        // req_wep1_num=units;
        
        if (have_wep1_num&gt;=req_wep1_num) or (n_wep1="(None") then n_good1=1;
        if (have_wep1_num&lt;req_wep1_num){n_good1=0;warning="Not enough "+string(n_wep1)+"; "+string(req_wep1_num-have_wep1_num)+" more are required.";}
        if (n_wep1=string(obj_img.hammer)){
            var g,exp_check;g=0;exp_check=0;
            repeat(obj_controller.man_max){
                g+=1;if (obj_controller.man[g]="man") and (obj_controller.man_sel[g]=1) and (obj_controller.ma_exp[g]&lt;70) then exp_check=1;
            }
            if (exp_check=1){n_good1=0;warning="A unit must have 70+ EXP to use a "+string(obj_img.hammer)+".";}
        }
        if (string_count("Terminator",n_armor)=0) and (string_count(obj_img.unit[1,6],n_armor)=0) and (string_count("Tartaros",n_armor)=0) and (n_wep1="Assault Cannon"){n_good1=0;warning="Cannot use Assault Cannons without Terminator/Dreadnought Armor.";}
        if (string_count(obj_img.unit[1,6],n_armor)=0) and (n_wep1="Close Combat Weapon"){n_good1=0;warning="Only "+string(obj_ini.role[100,6])+" can use Close Combat Weapons.";}
    }
    if (target_comp=2) and (n_wep2!="Assortment") and (n_wep2!="(None)"){// Check numbers
        req_wep2_num=units;have_wep2_num=0;
        var i;i=0;
        repeat(obj_controller.man_max){i+=1;
            // if (vehicle_equipment=0) and (obj_controller.man[i]="man") and (obj_controller.man_sel[i]=1) and (obj_controller.ma_wep1[i]=n_wep2) then req_wep2_num+=1;
            // if (vehicle_equipment=0) and (obj_controller.man[i]="man") and (obj_controller.man_sel[i]=1) and (obj_controller.ma_wep2[i]=n_wep2) then req_wep2_num+=1;
            if (vehicle_equipment=0) and (obj_controller.ma_wep2[i]=n_wep2) then have_wep2_num+=1;
        }
        // req_wep2_num+=scr_item_count(n_wep2);
        have_wep2_num+=scr_item_count(n_wep2);
        // req_wep2_num=units;
        
        if (have_wep2_num&gt;=req_wep2_num) or (n_wep2="(None") then n_good2=1;
        if (have_wep2_num&lt;req_wep2_num){n_good2=0;warning="Not enough "+string(n_wep2)+"; "+string(req_wep2_num-have_wep2_num)+" more are required.";}
        if (n_wep2=string(obj_img.hammer)){
            var g,exp_check;g=0;exp_check=0;
            repeat(obj_controller.man_max){
                g+=1;if (obj_controller.man[g]="man") and (obj_controller.man_sel[g]=1) and (obj_controller.ma_exp[g]&lt;70) then exp_check=1;
            }
            if (exp_check=1){n_good2=0;warning="A unit must have 70+ EXP to use a "+string(obj_img.hammer)+".";}
        }
        if (string_count("Terminator",n_armor)=0) and (string_count(obj_img.unit[1,6],n_armor)=0) and (string_count("Tartaros",n_armor)=0) and (n_wep2="Assault Cannon"){n_good2=0;warning="Cannot use Assault Cannons without Terminator/Dreadnought Armor.";}
        if (string_count(obj_img.unit[1,6],n_armor)=0) and (n_wep2="Close Combat Weapon"){n_good2=0;warning="Only "+string(obj_ini.role[100,6])+" can use Close Combat Weapons.";}
        if ((string_count("Terminator",n_armor)&gt;0) or (string_count("Tartaros",n_armor)&gt;0) or (string_count(obj_img.unit[1,6],n_armor)&gt;0)) and (n_mobi!="") then n_good2=0;
        if ((string_count("Terminator",o_armor)&gt;0) or (string_count("Tartaros",o_armor)&gt;0) or (string_count(obj_img.unit[1,6],o_armor)&gt;0)) and (n_mobi!="") then n_good2=0;
    }
    if (target_comp=3) and (n_armor!="Assortment") and (n_armor!="(None)"){// Check numbers
        req_armor_num=units;have_armor_num=0;
        var i;i=0;
        repeat(obj_controller.man_max){i+=1;
            if (vehicle_equipment=0) and (obj_controller.man[i]="man") and (obj_controller.man_sel[i]=1) and (obj_controller.ma_armor[i]=n_armor) then have_armor_num+=1;
        }
        have_armor_num+=scr_item_count(n_armor);
        
        if (have_armor_num&gt;=req_armor_num) or (n_armor="(None") then n_good3=1;
        if (have_armor_num&lt;req_armor_num){n_good3=0;warning="Not enough "+string(n_armor)+"; "+string(units-req_armor_num)+" more are required.";}
        
        var g,exp_check;g=0;exp_check=0;
        if (n_armor=string(obj_img.battlesuit)) or (n_armor="Tartaros") then repeat(obj_controller.man_max){
            g+=1;
            if (obj_controller.man[g]="man") and (obj_controller.man_sel[g]=1) and (obj_controller.ma_exp[g]&lt;90) then exp_check=1;
        }
        if (exp_check=1){n_good3=0;warning="A unit must have 90+ EXP to use Terminator armor.";}
        if (string_count("Dread",o_armor)&gt;0) and (string_count("Dread",n_armor)=0){
            n_good4=0;warning="Marines may not exit Dreadnoughts.";
        }
        
    }
    if (target_comp=4) and (n_gear!="Assortment") and (n_gear!="(None)"){// Check numbers
        req_gear_num=units;have_gear_num=0;
        var i;i=0;
        repeat(obj_controller.man_max){i+=1;
            if (vehicle_equipment=0) and (obj_controller.man[i]="man") and (obj_controller.man_sel[i]=1) and (obj_controller.ma_gear[i]=n_gear) then have_gear_num+=1;
        }
        have_gear_num+=scr_item_count(n_gear);
        
        if (have_gear_num&gt;=req_gear_num) or (n_gear="(None") then n_good4=1;
        if (have_gear_num&lt;req_gear_num){n_good4=0;warning="Not enough "+string(n_gear)+"; "+string(units-req_gear_num)+" more are required.";}
        
        if (n_gear!="(None)") and (n_gear!="") and (string_count(obj_img.unit[1,6],n_armor)&gt;0){
            n_good4=0;warning="Dreadnoughts may not use infantry equipment.";
        }
    }
    if (target_comp=5) and (n_mobi!="Assortment") and (n_mobi!="(None)"){// Check numbers
        req_mobi_num=units;have_mobi_num=0;
        var i;i=0;
        repeat(obj_controller.man_max){i+=1;
            if (vehicle_equipment=0) and (obj_controller.man[i]="man") and (obj_controller.man_sel[i]=1) and (obj_controller.ma_mobi[i]=n_mobi) then have_mobi_num+=1;
        }
        have_mobi_num+=scr_item_count(n_mobi);
        
        if (have_mobi_num&gt;=req_mobi_num) or (n_mobi="(None")  then n_good5=1;
        if (have_mobi_num&lt;req_mobi_num){n_good5=0;warning="Not enough "+string(n_mobi)+"; "+string(units-req_mobi_num)+" more are required.";}
        
        if (n_mobi!="") and ((n_armor=string(obj_img.battlesuit)) or (n_armor="Tartaros")){
            n_good5=0;warning="Terminators cannot use Mobility gear.";
        }
        if (n_mobi!="(None)") and (n_mobi!="") and (n_armor=obj_img.unit[1,6]){
            n_good5=0;warning=string(obj_ini.role[100,6])+"s may not use mobility gear.";
        }
        
    }
}







if (mouse_x&gt;=xx+1465) and (mouse_y&gt;=yy+499) and (mouse_x&lt;xx+1576) and (mouse_y&lt;yy+518){// Promoting right here
    if (type=5) and (cooldown&lt;=0) and (all_good=1) and (target_comp!=-1) and (role_name[target_role]!=""){
        cooldown=999;obj_controller.cooldown=8000;
        
        var mahreens,i,god;
        mahreens=0;i=0;god=0;
        
        if (target_comp&gt;10) then target_comp=0;
        if (company&gt;10) then company=0;
        manag=obj_controller.managing;
        if (manag&gt;10) then manag=0;
        
        repeat(300){i+=1;if (god=0){if (obj_ini.name[target_comp,i]=""){god=1;mahreens=i;}}}// Gets the number of marines in the target company
        i=0;if (role_name[target_role]="DoNotChange") then dnc=true;
        
        repeat(obj_controller.man_max){
            i+=1;
            
            if (obj_controller.man[i]!="") and (obj_controller.man_sel[i]=1) and (obj_controller.ma_promote[i]&gt;=1) and (obj_controller.ma_exp[i]&gt;=min_exp){
                var check;check=0;
                
                if (req_armor="") or (dnc=true) then check=1;
                if (req_armor="Power Armor"){
                    if (obj_controller.ma_armor[i]="MK3 Iron Armor") or (obj_controller.ma_armor[i]="MK4 Maximus") or (obj_controller.ma_armor[i]="MK6 Corvus") then check=1;
                    if (obj_controller.ma_armor[i]="MK7 Aquila") or (obj_controller.ma_armor[i]="Power Armor") then check=1;
                }
                if (req_armor=string(obj_img.battlesuit)){if (obj_controller.ma_armor[i]=string(obj_img.battlesuit)) or (obj_controller.ma_armor[i]="Tartaros") then check=1;}
                if (req_armor="Scout Armor"){if (obj_controller.ma_armor[i]="Scout Armor") then check=1;}
                if (req_armor=obj_img.unit[1,6]){if (obj_controller.ma_armor[i]=obj_img.unit[1,6]) then check=1;}
                
                if (check=0) and (req_armor="Power Armor"){
                    if (obj_controller.ma_armor[i]!=""){// Move current armor to armory
                        scr_add_item(obj_ini.armor[company,obj_controller.ide[i]],1);
                        obj_controller.ma_armor[i]="";obj_ini.armor[company,obj_controller.ide[i]]="";
                    }
                    
                    if (obj_controller.ma_armor[i]=""){// Check for Aquila
                        var satisfied;satisfied=scr_item_count("MK7 Aquila");
                        if (satisfied&gt;0){scr_add_item("MK7 Aquila",-1);obj_controller.ma_armor[i]="MK7 Aquila";obj_ini.armor[company,obj_controller.ide[i]]="MK7 Aquila";}
                    }
                    if (obj_controller.ma_armor[i]=""){// Check for Corvus
                        var satisfied;satisfied=scr_item_count("MK6 Corvus");
                        if (satisfied&gt;0){scr_add_item("MK6 Corvus",-1);obj_controller.ma_armor[i]="MK6 Corvus";obj_ini.armor[company,obj_controller.ide[i]]="MK6 Corvus";}
                    }
                    if (obj_controller.ma_armor[i]=""){// Check for generic
                        var satisfied;satisfied=scr_item_count("Power Armor");
                        if (satisfied&gt;0){scr_add_item("Power Armor",-1);obj_controller.ma_armor[i]="Power Armor";obj_ini.armor[company,obj_controller.ide[i]]="Power Armor";}
                    }
                    if (obj_controller.ma_armor[i]=""){// Check for Maximus
                        var satisfied;satisfied=scr_item_count("MK4 Maximus");
                        if (satisfied&gt;0){scr_add_item("MK4 Maximus",-1);obj_controller.ma_armor[i]="MK4 Maximus";obj_ini.armor[company,obj_controller.ide[i]]="MK4 Maximus";}
                    }
                    if (obj_controller.ma_armor[i]=""){// Check for Iron
                        var satisfied;satisfied=scr_item_count("MK3 Iron Armor");
                        if (satisfied&gt;0){scr_add_item("MK3 Iron Armor",-1);obj_controller.ma_armor[i]="MK3 Iron Armor";obj_ini.armor[company,obj_controller.ide[i]]="MK3 Iron Armor";}
                    }
                }
                if (check=0) and (req_armor=string(obj_img.battlesuit)){
                    if (obj_controller.ma_armor[i]!=""){// Move current armor to armory
                        scr_add_item(obj_ini.armor[company,obj_controller.ide[i]],1);
                        obj_controller.ma_armor[i]="";obj_ini.armor[company,obj_controller.ide[i]]="";
                    }
                    
                    if (obj_controller.ma_armor[i]=""){
                        var satisfied;satisfied=scr_item_count(string(obj_img.battlesuit));
                        if (satisfied&gt;0){scr_add_item(string(obj_img.battlesuit),-1);obj_controller.ma_armor[i]=string(obj_img.battlesuit);obj_ini.armor[company,obj_controller.ide[i]]=string(obj_img.battlesuit);}
                    }
                    if (obj_controller.ma_armor[i]=""){
                        var satisfied;satisfied=scr_item_count("Tartarus");
                        if (satisfied&gt;0){scr_add_item("Tartarus",-1);obj_controller.ma_armor[i]="Tartarus";obj_ini.armor[company,obj_controller.ide[i]]="Tartarus";}
                    }
                }
                if (check=0) and (req_armor="Scout Armor"){
                    if (obj_controller.ma_armor[i]!=""){// Move current armor to armory
                        scr_add_item(obj_ini.armor[company,obj_controller.ide[i]],1);
                        obj_controller.ma_armor[i]="";obj_ini.armor[company,obj_controller.ide[i]]="";
                    }
                    
                    if (obj_controller.ma_armor[i]=""){
                        var satisfied;satisfied=scr_item_count("Scout Armor");
                        if (satisfied&gt;0){scr_add_item("Scout Armor",-1);obj_controller.ma_armor[i]="Scout Armor";obj_ini.armor[company,obj_controller.ide[i]]="Scout Armor";}
                    }
                }
                if (check=0) and (req_armor=obj_img.unit[1,6]){
                    if (obj_controller.ma_armor[i]!=""){// Move current armor to armory
                        scr_add_item(obj_ini.armor[company,obj_controller.ide[i]],1);
                        obj_controller.ma_armor[i]="";obj_ini.armor[company,obj_controller.ide[i]]="";
                        if (obj_ini.age[company,obj_controller.ide[i]]!=floor(obj_ini.age[company,obj_controller.ide[i]])) then obj_ini.age[company,obj_controller.ide[i]]=floor(obj_ini.age[company,obj_controller.ide[i]]);
                    }
                    
                    if (obj_controller.ma_armor[i]=""){
                        var satisfied;satisfied=scr_item_count(obj_img.unit[1,6]);
                        if (satisfied&gt;0){scr_add_item(obj_img.unit[1,6],-1);obj_controller.ma_armor[i]=obj_img.unit[1,6];obj_ini.armor[company,obj_controller.ide[i]]=obj_img.unit[1,6];}
                    }
                }
                
                // End swap armor
                
                
                if (obj_controller.ma_wep1[i]!=req_wep1) and (req_wep1!="Heavy Ranged") and (req_wep1!="") and (dnc=false){// NOT HEAVY RANGED
                    check=0;var satisfied;satisfied=0;
                    
                    if (obj_controller.ma_wep2[i]=req_wep1)/* and (role_name[target_role]!=obj_ini.role[100,6])*/{
                        var temp;temp="";temp=obj_controller.ma_wep1[i];// Get temp
                        obj_controller.ma_wep1[i]=obj_controller.ma_wep2[i];obj_ini.wep1[company,obj_controller.ide[i]]=obj_ini.wep2[company,obj_controller.ide[i]];// Wep2 -&gt; Wep1
                        obj_controller.ma_wep2[i]=temp;obj_ini.wep2[company,obj_controller.ide[i]]=temp;// Temp -&gt; Wep2
                    }
                    
                    if (obj_controller.ma_wep1[i]!=req_wep1){// If still not it, and has weapon, return to armory
                        if (obj_controller.ma_wep1[i]!=""){
                            scr_add_item(obj_ini.wep1[company,obj_controller.ide[i]],1);
                            obj_controller.ma_wep1[i]="";obj_ini.wep1[company,obj_controller.ide[i]]="";
                        }
                        if (obj_controller.ma_wep1[i]="") and (req_wep1!="")/* and (role_name[target_role]!=obj_ini.role[100,6])*/{// Check armory for the weapon
                            satisfied=scr_item_count(req_wep1);
                            if (satisfied&gt;0){scr_add_item(req_wep1,-1);obj_controller.ma_wep1[i]=req_wep1;obj_ini.wep1[company,obj_controller.ide[i]]=req_wep1;}
                        }
                    }
                }
                if (obj_controller.ma_wep1[i]!="Heavy "+string(obj_img.gyro)) and (obj_controller.ma_wep1[i]!=string(obj_img.laser)+"cannon") and (obj_controller.ma_wep1[i]!="Missile Launcher") and (req_wep1="Heavy Ranged") and (req_wep1!="") and (dnc=false){// HEAVY RANGED
                    check=0;var satisfied;satisfied=0;
                    
                    if (obj_controller.ma_wep2[i]="Heavy "+string(obj_img.gyro)) or (obj_controller.ma_wep2[i]=string(obj_img.laser)+"cannon") or (obj_controller.ma_wep2[i]="Missile Launcher"){
                        var temp;temp="";temp=obj_controller.ma_wep1[i];// Get temp
                        obj_controller.ma_wep1[i]=obj_controller.ma_wep2[i];obj_ini.wep1[company,obj_controller.ide[i]]=obj_ini.wep2[company,obj_controller.ide[i]];// Wep2 -&gt; Wep1
                        obj_controller.ma_wep2[i]=temp;obj_ini.wep2[company,obj_controller.ide[i]]=temp;// Temp -&gt; Wep2
                    }
                    
                    if (obj_controller.ma_wep1[i]!="Heavy "+string(obj_img.gyro)) and (obj_controller.ma_wep1[i]!=string(obj_img.laser)+"cannon") and (obj_controller.ma_wep1[i]!="Missile Launcher"){// If still not it, and has weapon, return to armory
                        if (obj_controller.ma_wep1[i]!=""){
                            scr_add_item(obj_ini.wep1[company,obj_controller.ide[i]],1);
                            obj_controller.ma_wep1[i]="";obj_ini.wep1[company,obj_controller.ide[i]]="";
                        }
                        
                        if (obj_controller.ma_wep1[i]=""){// Check armory for lascannon
                            satisfied=scr_item_count(string(obj_img.laser)+"cannon");
                            if (satisfied&gt;0){scr_add_item(string(obj_img.laser)+"cannon",-1);obj_controller.ma_wep1[i]=string(obj_img.laser)+"cannon";obj_ini.wep1[company,obj_controller.ide[i]]=string(obj_img.laser)+"cannon";}
                        }
                        if (obj_controller.ma_wep1[i]=""){// Check armory for Heavy string(obj_img.gyro)
                            satisfied=scr_item_count("Heavy "+string(obj_img.gyro));
                            if (satisfied&gt;0){scr_add_item("Heavy "+string(obj_img.gyro),-1);obj_controller.ma_wep1[i]="Heavy "+string(obj_img.gyro);obj_ini.wep1[company,obj_controller.ide[i]]="Heavy "+string(obj_img.gyro);}
                        }
                        if (obj_controller.ma_wep1[i]=""){// Check armory for Missile Launcher
                            satisfied=scr_item_count("Missile Launcher");
                            if (satisfied&gt;0){scr_add_item("Missile Launcher",-1);obj_controller.ma_wep1[i]="Missile Launcher";obj_ini.wep1[company,obj_controller.ide[i]]="Missile Launcher";}
                        }
                    }
                }
                // End swap first weapon
                
                if (obj_controller.ma_wep2[i]!=req_wep1) and (req_wep2!="") and (dnc=false){// SECOND WEAPON
                    check=0;var satisfied;satisfied=0;
                    
                    if (obj_controller.ma_wep2[i]!=req_wep2){// If still not it, and has weapon, return to armory
                        if (obj_controller.ma_wep2[i]!=""){
                            scr_add_item(obj_ini.wep2[company,obj_controller.ide[i]],1);
                            obj_controller.ma_wep2[i]="";obj_ini.wep2[company,obj_controller.ide[i]]="";
                        }
                        if (obj_controller.ma_wep2[i]="") and (req_wep2!="")/* and (role_name[target_role]!=obj_ini.role[100,6])*/{// Check armory for the weapon
                            satisfied=scr_item_count(req_wep2);
                            if (satisfied&gt;0){scr_add_item(req_wep2,-1);obj_controller.ma_wep2[i]=req_wep2;obj_ini.wep2[company,obj_controller.ide[i]]=req_wep2;}
                        }
                    }
                }
                // End swap second weapon
                
                if (obj_controller.ma_gear[i]!=req_gear) and (req_gear!="") and (dnc=false){// GEAR
                    check=0;var satisfied;satisfied=0;
                    
                    if (obj_controller.ma_gear[i]!=req_gear){// If still not it, and have gear, return to armory
                        if (obj_controller.ma_gear[i]!=""){
                            scr_add_item(obj_ini.gear[company,obj_controller.ide[i]],1);
                            obj_controller.ma_gear[i]="";obj_ini.gear[company,obj_controller.ide[i]]="";
                        }
                        if (obj_controller.ma_gear[i]="") and (req_gear!=""){// Check armory for the gear
                            satisfied=scr_item_count(req_gear);
                            if (satisfied&gt;0){scr_add_item(req_gear,-1);obj_controller.ma_gear[i]=req_gear;obj_ini.gear[company,obj_controller.ide[i]]=req_gear;}
                        }
                    }
                }
                
                // End swap gear
                
                if (obj_controller.ma_mobi[i]!=req_mobi) and (req_mobi!="") and (dnc=false){// mobi
                    check=0;var satisfied;satisfied=0;
                    
                    if (obj_controller.ma_mobi[i]!=req_mobi){// If still not it, and have mobi, return to armory
                        if (obj_controller.ma_mobi[i]!=""){
                            scr_add_item(obj_ini.mobi[company,obj_controller.ide[i]],1);
                            obj_controller.ma_mobi[i]="";obj_ini.mobi[company,obj_controller.ide[i]]="";
                        }
                        if (obj_controller.ma_mobi[i]="") and (req_mobi!=""){// Check armory for the mobi
                            satisfied=scr_item_count(req_mobi);
                            if (satisfied&gt;0){scr_add_item(req_mobi,-1);obj_controller.ma_mobi[i]=req_mobi;obj_ini.mobi[company,obj_controller.ide[i]]=req_mobi;}
                        }
                    }
                }
                
                // Pass variables here
                
                // This changes a marine from MARINE to COMMAND if they get put into a dreadnought
                var bef,aft,wco,wca;
                bef="";aft="";wco=false;wca=false;
                bef=obj_controller.ma_role[i];
                aft=role_name[target_role];
                
                if (dnc=true) then aft=obj_ini.role[company,obj_controller.ide[i]];
                
                wco=is_specialist(bef);wca=is_specialist(aft);
                if (wco=false) and (wca=true){obj_controller.marines-=1;obj_controller.command+=1;}
                if (wco=true) and (wca=false){obj_controller.marines+=1;obj_controller.command-=1;}
                
                /*if (bef=obj_ini.role[100,5]) then wco=1;
                if (bef=obj_ini.role[100,14]) then wco=1;
                if (bef=obj_ini.role[100,15]) then wco=1;
                if (bef=obj_ini.role[100,16]) then wco=1;
                if (bef=obj_ini.role[100,17]) then wco=1;
                
                if (wco=0) and (role_name[target_role]=obj_ini.role[100,6]) and (dnc=false){obj_controller.marines-=1;obj_controller.command+=1;}
                */
                
                if (role_name[target_role]=obj_ini.role[100,5]) and (dnc=false){// Restock recruiter or admiral dude
                    if (target_comp=4) then obj_ini.lord_admiral_name=obj_controller.ma_name[i];
                    if (target_comp=10) then obj_ini.recruiter_name=obj_controller.ma_name[i];
                }
                
                
                // obj_ini.race[target_comp,mahreens]=target_comp;
                obj_ini.race[target_comp,mahreens]=obj_ini.race[company,obj_controller.ide[i]];
                obj_ini.loc[target_comp,mahreens]=obj_controller.ma_loc[i];
                // obj_ini.role[target_comp,mahreens]=obj_ini.role[company,obj_controller.ide[i]];
                // 135 ;
                // obj_ini.role[target_comp,mahreens]=string_replace(role_name[target_role]," Marine","");
                obj_ini.role[target_comp,mahreens]=aft;
                
                obj_ini.name[target_comp,mahreens]=obj_controller.ma_name[i];obj_ini.mobi[target_comp,mahreens]=obj_controller.ma_mobi[i];
                obj_ini.wep1[target_comp,mahreens]=obj_controller.ma_wep1[i];obj_ini.wep2[target_comp,mahreens]=obj_controller.ma_wep2[i];
                obj_ini.armor[target_comp,mahreens]=obj_controller.ma_armor[i];obj_ini.gear[target_comp,mahreens]=obj_controller.ma_gear[i];
                obj_ini.hp[target_comp,mahreens]=obj_controller.ma_health[i];obj_ini.chaos[target_comp,mahreens]=obj_controller.ma_chaos[i];
                obj_ini.god[target_comp,mahreens]=obj_controller.ma_god[i];
                obj_ini.spe[target_comp,mahreens]=obj_ini.spe[company,obj_controller.ide[i]]
                
                if (role_name[target_role]=obj_ini.role[100,6]) and (dnc=false){
                    obj_ini.hp[target_comp,mahreens]=100;
                    
                    // Remove illegal weapons here
                    var dread_good;dread_good=false;
                    if (obj_ini.wep1[target_comp,mahreens]="") then dread_good=true;
                    if (string_count("Close Combat Weapon",obj_ini.wep1[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Force Weapon",obj_ini.wep1[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count(string(obj_img.laser)+"cannon",obj_ini.wep1[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Assault Cannon",obj_ini.wep1[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Autocannon",obj_ini.wep1[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Missile Launcher",obj_ini.wep1[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Heavy "+string(obj_img.gyro),obj_ini.wep1[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (dread_good=false){scr_add_item(obj_ini.wep1[target_comp,mahreens],1);obj_ini.wep1[target_comp,mahreens]="";}
                    
                    dread_good=false;
                    if (obj_ini.wep2[target_comp,mahreens]="") then dread_good=true;
                    if (string_count("Close Combat Weapon",obj_ini.wep2[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Force Weapon",obj_ini.wep2[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count(string(obj_img.laser)+"cannon",obj_ini.wep2[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Assault Cannon",obj_ini.wep2[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Autocannon",obj_ini.wep2[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Missile Launcher",obj_ini.wep2[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (string_count("Heavy "+string(obj_img.gyro),obj_ini.wep2[target_comp,mahreens])&gt;0) then dread_good=true;
                    if (dread_good=false){scr_add_item(obj_ini.wep2[target_comp,mahreens],1);obj_ini.wep2[target_comp,mahreens]="";}
                    
                    if (obj_ini.mobi[target_comp,mahreens]!=""){scr_add_item(obj_ini.mobi[target_comp,mahreens],1);obj_ini.mobi[target_comp,mahreens]="";}
                    if (obj_ini.gear[target_comp,mahreens]!=""){scr_add_item(obj_ini.gear[target_comp,mahreens],1);obj_ini.gear[target_comp,mahreens]="";}
                }
                
                obj_ini.experience[target_comp,mahreens]=obj_controller.ma_exp[i];obj_ini.age[target_comp,mahreens]=obj_ini.age[company,obj_controller.ide[i]];
                obj_ini.lid[target_comp,mahreens]=obj_controller.ma_lid[i];obj_ini.wid[target_comp,mahreens]=obj_controller.ma_wid[i];
                
                mahreens+=1;
                
                if (role_name[target_role]=obj_ini.role[100,5]) then scr_recent("captain_promote",obj_ini.name[target_comp,mahreens],target_comp);
                if (role_name[target_role]=obj_ini.role[100,4]) then scr_recent("terminator_promote",obj_ini.name[target_comp,mahreens],target_comp);
                if (role_name[target_role]=obj_ini.role[100,2]) then scr_recent("honor_promote",obj_ini.name[target_comp,mahreens],target_comp);
                
                // show_message(string(company)+" - "+string(obj_ini.role[company,obj_controller.ide[i]]));
                
                // Clear variables here
                obj_ini.race[company,obj_controller.ide[i]]=0;obj_ini.loc[company,obj_controller.ide[i]]="";
                obj_ini.role[company,obj_controller.ide[i]]="";obj_ini.name[company,obj_controller.ide[i]]="";
                obj_ini.wep1[company,obj_controller.ide[i]]="";obj_ini.wep2[company,obj_controller.ide[i]]="";
                obj_ini.armor[company,obj_controller.ide[i]]="";obj_ini.gear[company,obj_controller.ide[i]]="";
                obj_ini.mobi[company,obj_controller.ide[i]]="";obj_ini.god[company,obj_controller.ide[i]]="";
                obj_ini.hp[company,obj_controller.ide[i]]=0;obj_ini.chaos[company,obj_controller.ide[i]]=0;
                obj_ini.experience[company,obj_controller.ide[i]]=0;obj_ini.age[company,obj_controller.ide[i]]=0;
                obj_ini.wid[company,obj_controller.ide[i]]=0;obj_ini.lid[company,obj_controller.ide[i]]=0;
                obj_ini.spe[company,obj_controller.ide[i]]="";
                
                // show_message(string(company)+" - "+string(obj_ini.role[company,obj_controller.ide[i]]));
                
            }// End that [i]
            
        }// End repeat
        
        
        with(obj_controller){scr_management(1);}
        
        with(obj_ini){
            scr_company_order(obj_popup.manag);
            scr_company_order(obj_popup.target_comp);
        }
        

        with(obj_controller){
            // man_current=0;
            var i;i=-1;man_size=0;selecting_location="";selecting_types="";selecting_ship=0;
            repeat(501){i+=1;
                man[i]="";ide[i]=0;man_sel[i]=0;ma_lid[i]=0;ma_wid[i]=0;ma_god[i]=0;
                ma_race[i]=0;ma_loc[i]="";ma_name[i]="";ma_role[i]="";ma_wep1[i]="";
                ma_wep2[i]="";ma_armor[i]="";ma_health[i]=100;ma_chaos[i]=0;ma_exp[i]=0;ma_promote[i]=0;
                sh_ide[i]=0;sh_name[i]="";sh_class[i]="";sh_loc[i]="";sh_hp[i]="";sh_cargo[i]=0;sh_cargo_max[i]="";
            }
            alll=0;
            if (managing&lt;=10) and (managing!=0) then scr_company_view(managing);
            if (managing&gt;10) or (managing=0) then scr_special_view(managing);
            cooldown=10;sel_loading=0;unload=0;alarm[6]=30;
        }
        
        with(obj_managment_panel){instance_destroy();}
        
        obj_controller.cooldown=10;
        instance_destroy();
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Requip Below</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (mouse_x&gt;=xx+1465) and (mouse_y&gt;=yy+499) and (mouse_x&lt;xx+1577) and (mouse_y&lt;yy+520){// Equipment
    if (type=6) and (cooldown&lt;=0) and (n_good1+n_good2+n_good3+n_good4+n_good5=5){
        cooldown=999;obj_controller.cooldown=8;
        
        if (n_wep1="(None)") then n_wep1="";
        if (n_wep2="(None)") then n_wep2="";
        if (n_armor="(None)") then n_armor="";
        if (n_gear="(None)") then n_gear="";
        if (n_mobi="(None)") then n_mobi="";
        
        
        if (company&gt;10) then company=0;
        
        i=0;
        repeat(obj_controller.man_max){
            i+=1;
            
            if (obj_controller.man[i]!="") and (obj_controller.man_sel[i]=1) and (vehicle_equipment=0) and (obj_controller.man[i]="man"){
                var check,scout_check;
                
                check=0;scout_check=0;
                if (n_armor=obj_controller.ma_armor[i]) then check=1;
                if (check=0) and (n_armor!=obj_controller.ma_armor[i]) and (n_armor!="Assortment"){
                    if (string_count(obj_img.unit[1,6],obj_ini.armor[company,obj_controller.ide[i]])=0){
                        /* if (obj_controller.ma_role[i]=obj_ini.role[100,12]){
                            if (n_armor!="") and (n_armor!="Power Armor") and (n_armor!="Scout Armor") then scout_check=1;
                        }*/
                        if (scout_check=0){
                            if (obj_ini.armor[company,obj_controller.ide[i]]!="") then scr_add_item(obj_ini.armor[company,obj_controller.ide[i]],1);
                            obj_controller.ma_armor[i]="";obj_ini.armor[company,obj_controller.ide[i]]="";
                            scr_add_item(n_armor,-1);obj_controller.ma_armor[i]=n_armor;obj_ini.armor[company,obj_controller.ide[i]]=n_armor;
                            
                            if (n_armor=obj_img.unit[1,6]) and (obj_ini.age[company,obj_controller.ide[i]]!=floor(obj_ini.age[company,obj_controller.ide[i]])) then obj_ini.age[company,obj_controller.ide[i]]=floor(obj_ini.age[company,obj_controller.ide[i]]);
                        }
                    }
                    
                    // NOPE
                    if ((n_armor=string(obj_img.battlesuit)) or (n_armor="Tartaros")) and (obj_ini.mobi[company,obj_controller.ide[i]]!=""){
                        scr_add_item(obj_ini.mobi[company,obj_controller.ide[i]],1);
                        obj_ini.mobi[company,obj_controller.ide[i]]="";obj_controller.ma_mobi[i]="";
                    }
                    if (obj_ini.wep1[company,obj_controller.ide[i]]="Assault Cannon") or (obj_ini.wep2[company,obj_controller.ide[i]]="Assault Cannon"){
                        var bgn,bed;bed=0;bgn=obj_ini.armor[company,obj_controller.ide[i]];
                        if (bgn!=string(obj_img.battlesuit)) and (bgn!="Tartaros") then bed+=1;
                        if (string_count("Termi",bgn)=0) then bed+=1;
                        if (bed=2){
                            if (obj_ini.wep1[company,obj_controller.ide[i]]="Assault Cannon"){
                                scr_add_item(obj_ini.wep1[company,obj_controller.ide[i]],1);obj_ini.wep1[company,obj_controller.ide[i]]="";
                            }
                            if (obj_ini.wep2[company,obj_controller.ide[i]]="Assault Cannon"){
                                scr_add_item(obj_ini.wep2[company,obj_controller.ide[i]],1);obj_ini.wep2[company,obj_controller.ide[i]]="";
                            }
                        }
                    }
                    
                    
                }
                // End swap armor
                
                
                // if (n_wep1=n_wep2) and (
                
                
                if (n_wep1=obj_controller.ma_wep2[i]) and (n_wep2!="Assortment") and (n_wep1!="Assortment"){
                    var temp;temp="";
                    temp=obj_controller.ma_wep1[i];// Get temp
                    obj_controller.ma_wep1[i]=obj_controller.ma_wep2[i];
                    obj_ini.wep1[company,obj_controller.ide[i]]=obj_ini.wep2[company,obj_controller.ide[i]];// Wep2 -&gt; Wep1
                    obj_controller.ma_wep2[i]=temp;
                    obj_ini.wep2[company,obj_controller.ide[i]]=temp;
                }
                if (n_wep2=obj_controller.ma_wep1[i]) and (n_wep2!="Assortment") and (n_wep1!="Assortment"){
                    var temp;temp="";
                    temp=obj_controller.ma_wep2[i];// Get temp
                    obj_controller.ma_wep2[i]=obj_controller.ma_wep1[i];
                    obj_ini.wep2[company,obj_controller.ide[i]]=obj_ini.wep1[company,obj_controller.ide[i]];// Wep1 -&gt; Wep2
                    obj_controller.ma_wep1[i]=temp;
                    obj_ini.wep1[company,obj_controller.ide[i]]=temp;
                }
                
                
                
                check=0;
                if (obj_controller.ma_role[i]="Standard Bearer"){
                    if (obj_controller.ma_wep1[i]="Company Standard") and (n_wep1!="Company Standard") and (n_wep2!="Company Standard") then check=1;
                }
                if (n_wep1=obj_controller.ma_wep1[i]) or (n_wep1="Assortment") then check=1;
                if (check=0) and (obj_controller.ma_wep1[i]!=n_wep1) and (obj_controller.ma_wep1[i]!=n_wep2) and (n_wep1!="Assortment"){
                    if (obj_ini.wep1[company,obj_controller.ide[i]]!="") and (obj_controller.ma_wep1[i]!=n_wep1){
                        scr_add_item(obj_ini.wep1[company,obj_controller.ide[i]],1);
                        obj_controller.ma_wep1[i]="";obj_ini.wep1[company,obj_controller.ide[i]]="";
                    }
                    if (n_wep1!=""){
                        scr_add_item(n_wep1,-1);
                        obj_controller.ma_wep1[i]=n_wep1;obj_ini.wep1[company,obj_controller.ide[i]]=n_wep1;
                    }
                    /*if (obj_ini.wep1[company,obj_controller.ide[i]]!="") and (obj_controller.ma_wep1[i]=""){
                        obj_controller.ma_wep1[i]=n_wep1;obj_ini.wep1[company,obj_controller.ide[i]]=n_wep1;
                        scr_add_item(n_wep1,-1);check=5;
                    }*/
                }
                /*if (check=0) and (obj_controller.ma_wep2[i]=n_wep1) and (n_wep1!="Assortment"){
                    var temp;temp="";temp=obj_controller.ma_wep1[i];// Get temp
                    obj_controller.ma_wep1[i]=obj_controller.ma_wep2[i];obj_ini.wep1[company,obj_controller.ide[i]]=obj_ini.wep2[company,obj_controller.ide[i]];// Wep2 -&gt; Wep1
                    obj_controller.ma_wep2[i]=temp;obj_ini.wep2[company,obj_controller.ide[i]]=temp;check=5;
                }*/
                // End swap weapon
                
                check=0;
                if (obj_controller.ma_role[i]="Standard Bearer"){
                    if (obj_controller.ma_wep2[i]="Company Standard") and (n_wep1!="Company Standard") and (n_wep2!="Company Standard") then check=1;
                }
                if (n_wep2=obj_controller.ma_wep2[i]) or (n_wep2="Assortment") then check=1;
                if (check=0) and (n_wep2!=obj_controller.ma_wep2[i]) and (n_wep1!=obj_controller.ma_wep2[i]) and (n_wep2!="Assortment"){
                    if (obj_ini.wep2[company,obj_controller.ide[i]]!="") and (obj_controller.ma_wep2[i]!=n_wep2){
                        scr_add_item(obj_ini.wep2[company,obj_controller.ide[i]],1);
                        obj_controller.ma_wep2[i]="";obj_ini.wep2[company,obj_controller.ide[i]]="";
                    }
                    if (n_wep2!=""){
                        scr_add_item(n_wep2,-1);
                        obj_controller.ma_wep2[i]=n_wep2;obj_ini.wep2[company,obj_controller.ide[i]]=n_wep2;
                    }
                    /*if (obj_ini.wep2[company,obj_controller.ide[i]]!="") and (obj_controller.ma_wep2[i]=""){
                        obj_controller.ma_wep2[i]=n_wep2;obj_ini.wep2[company,obj_controller.ide[i]]=n_wep2;
                        scr_add_item(n_wep2,-1);check=5;
                    }*/
                }
                /*if (check=0) and (n_wep1=obj_controller.ma_wep2[i]) and (n_wep2!="Assortment"){
                    var temp;temp="";temp=obj_controller.ma_wep2[i];// Get temp
                    obj_controller.ma_wep2[i]=obj_controller.ma_wep2[i];obj_ini.wep2[company,obj_controller.ide[i]]=obj_ini.wep1[company,obj_controller.ide[i]];// Wep2 -&gt; Wep1
                    obj_controller.ma_wep1[i]=temp;obj_ini.wep1[company,obj_controller.ide[i]]=temp;
                }*/
                // End swap weapon
                
                check=0;
                if (n_gear=obj_controller.ma_gear[i]) then check=1;
                if (check=0) and (n_gear!=obj_controller.ma_gear[i]) and (n_gear!="Assortment"){
                    if (obj_ini.gear[company,obj_controller.ide[i]]!="") then scr_add_item(obj_ini.gear[company,obj_controller.ide[i]],1);
                    obj_controller.ma_gear[i]="";obj_ini.gear[company,obj_controller.ide[i]]="";
                    if (n_gear!="(None") and (n_gear!=""){obj_controller.ma_gear[i]=n_gear;obj_ini.gear[company,obj_controller.ide[i]]=n_gear;}
                    if (n_gear!="") then scr_add_item(n_gear,-1);
                }
                // End swap gear
                
                check=0;
                if (n_mobi=obj_controller.ma_mobi[i]) then check=1;
                if (check=0) and (n_mobi!=obj_controller.ma_mobi[i]) and (n_mobi!="Assortment"){
                    if (string_count("Terminator",obj_ini.armor[company,obj_controller.ide[i]])=0) and (obj_ini.armor[company,obj_controller.ide[i]]!="Tartaros"){
                        if (obj_ini.mobi[company,obj_controller.ide[i]]!="") then scr_add_item(obj_ini.mobi[company,obj_controller.ide[i]],1);
                        obj_controller.ma_mobi[i]="";obj_ini.mobi[company,obj_controller.ide[i]]="";
                        obj_controller.ma_mobi[i]=n_mobi;obj_ini.mobi[company,obj_controller.ide[i]]=n_mobi;
                        if (n_mobi!="") then scr_add_item(n_mobi,-1);
                    }
                }
                // End mobility
                
                /*
                if (obj_controller.ma_wep1[i]="(None)") then obj_controller.ma_wep1[i]="";
                if (obj_controller.ma_wep2[i]="(None)") then obj_controller.ma_wep2[i]="";
                if (obj_controller.ma_armor[i]="(None)") then obj_controller.ma_armor[i]="";
                if (obj_controller.ma_gear[i]="(None)") then obj_controller.ma_gear[i]="";
                if (obj_controller.ma_mobi[i]="(None)") then obj_controller.ma_mobi[i]="";
                if (obj_ini.wep1[company,obj_controller.ide[i]]="(None)") then obj_ini.wep1[company,obj_controller.ide[i]]="";
                if (obj_ini.wep2[company,obj_controller.ide[i]]="(None)") then obj_ini.wep2[company,obj_controller.ide[i]]="";
                if (obj_ini.armor[company,obj_controller.ide[i]]="(None)") then obj_ini.armor[company,obj_controller.ide[i]]="";
                if (obj_ini.gear[company,obj_controller.ide[i]]="(None)") then obj_ini.gear[company,obj_controller.ide[i]]="";
                if (obj_ini.mobi[company,obj_controller.ide[i]]="(None)") then obj_ini.mobi[company,obj_controller.ide[i]]="";
                */
                
            }// End that [i]
            
        }// End repeat
        
        obj_controller.cooldown=10;
        instance_destroy();exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Give/Gift Below</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

// if ((mouse_x&gt;=xx+240) and (mouse_x&lt;=xx+387) and (type!=88)) or (((type=9) or (type=9.1)) and (mouse_x&gt;=xx+240+420) and (mouse_x&lt;xx+387+420)){
if ((type=9) or (type=9.1)) and (mouse_x&gt;=xx+240+420) and (mouse_x&lt;xx+387+420){
    if ((type=9) or (type=9.1)) and (cooldown&lt;=0){
        giveto=0;
    
        if (mouse_y&gt;=yy+325) and (mouse_y&lt;yy+342){
            obj_controller.cooldown=8000;
            instance_destroy();
            exit;
        }
        
        inq_hide=0;
        if (type=9){
            if (string_count("inq",obj_ini.artifact_tags[obj_controller.menu_artifact])&gt;0){
                var i;i=0;
                repeat(10){
                    i+=1;
                    if (obj_controller.quest[i]="artifact_loan") then inq_hide=1;
                    if (obj_controller.quest[i]="artifact_return") then inq_hide=2;
                }
            }
        }
        
        
        if (mouse_y&gt;=yy+121) and (mouse_y&lt;=yy+149) and (obj_controller.known[2]&gt;1) then giveto=2;
        if (mouse_y&gt;=yy+151) and (mouse_y&lt;=yy+179) and (obj_controller.known[3]&gt;1) then giveto=3;
        if (mouse_y&gt;=yy+181) and (mouse_y&lt;=yy+209) and ((obj_controller.known[4]&gt;1) or (inq_hide=2)) and (inq_hide!=1) then giveto=4;
        if (mouse_y&gt;=yy+211) and (mouse_y&lt;=yy+239) and (obj_controller.known[5]&gt;1) then giveto=5;
        if (mouse_y&gt;=yy+241) and (mouse_y&lt;=yy+269) and (obj_controller.known[6]&gt;1) then giveto=6;
        if (mouse_y&gt;=yy+271) and (mouse_y&lt;=yy+299) and (obj_controller.known[8]&gt;1) then giveto=8;
        
        
        
        
        
        if (giveto&gt;0) and (type=9.1){
            var r1,r2,cn;r2=0;cn=obj_controller;
            r1=floor(random(cn.stc_wargear_un+cn.stc_vehicles_un+cn.stc_ships_un))+1;
            
            if (r1&lt;cn.stc_wargear_un) and (cn.stc_wargear_un&gt;0) then r2=1;
            if (r1&gt;cn.stc_wargear_un) and (r1&lt;=cn.stc_wargear_un+cn.stc_vehicles_un) and (cn.stc_vehicles_un&gt;0) then r2=2;
            if (r1&gt;cn.stc_wargear_un+cn.stc_vehicles_un) and (r2&lt;=cn.stc_wargear_un+cn.stc_vehicles_un+cn.stc_ships_un) and (cn.stc_ships_un&gt;0) then r2=3;
            
            if (cn.stc_wargear_un&gt;0) and (cn.stc_vehicles_un+cn.stc_ships_un=0) then r2=1;
            if (cn.stc_vehicles_un&gt;0) and (cn.stc_wargear_un+cn.stc_ships_un=0) then r2=2;
            if (cn.stc_ships_un&gt;0) and (cn.stc_vehicles_un+cn.stc_wargear_un=0) then r2=3;
            
            cn.stc_un_total-=1;
            if (r2=1) then cn.stc_wargear_un-=1;
            if (r2=2) then cn.stc_vehicles_un-=1;
            if (r2=3) then cn.stc_ships_un-=1;
            
            // Modify disposition here
            if (giveto=2) then obj_controller.disposition[2]+=3;
            if (giveto=3) then obj_controller.disposition[3]+=choose(5,6,7,8);
            if (giveto=4) then obj_controller.disposition[4]+=3;
            if (giveto=5){
                obj_controller.disposition[5]+=3;
                var o;o=0;repeat(4){if (o&lt;=4){o+=1;if (obj_ini.adv[o]="Reverent Guardians") then o=500;}}if (o&gt;100) then obj_controller.disposition[5]+=2;
            }
            if (giveto=6) then obj_controller.disposition[6]+=2;
            if (giveto=8){obj_controller.disposition[8]+=15;}// 137 ; chance for mechanicus to get very pissed
            // End disposition
            obj_controller.cooldown=7000;
            obj_controller.menu=20;
            obj_controller.diplomacy=giveto;
            obj_controller.force_goodbye=-1;
            var the;the="";if (giveto!=7) and (giveto!=10) then the="the ";
            scr_event_log("","STC Fragment gifted to "+string(the)+string(obj_controller.faction[giveto])+".");
            
            with(obj_controller){scr_dialogue("stc_thanks");}
            instance_destroy();exit;
        }
        
        if (giveto&gt;0) and (type=9){
        
        
            var e;e=0;
            repeat(50){e+=1;
                if (obj_controller.fest_display=obj_controller.menu_artifact) then obj_controller.fest_display=0;
                
                /*
                
                This is causing some sort of crash
                
                if (obj_ini.artifact_tags[obj_controller.menu_artifact]=obj_controller.recent_keyword[e]){
                    obj_controller.recent_keyword[e]="";obj_controller.recent_type[e]="";
                    obj_controller.recent_turn[e]=0;obj_controller.recent_number[e]=0;
                    scr_recent("artifact_gifted",obj_controller.recent_keyword,giveto);
                    scr_recent("","",0);
                }*/
            }
        
            
        
        
            old_tags=obj_ini.artifact_tags[obj_controller.menu_artifact];
            obj_ini.artifact[obj_controller.menu_artifact]="";obj_ini.artifact_tags[obj_controller.menu_artifact]="";
            obj_ini.artifact_identified[obj_controller.menu_artifact]=0;obj_ini.artifact_condition[obj_controller.menu_artifact]=100;
            obj_ini.artifact_loc[obj_controller.menu_artifact]="";obj_ini.artifact_sid[obj_controller.menu_artifact]=0;
            obj_controller.artifacts-=1;cooldown=7000;
            
            var g;g=obj_controller.menu_artifact;
            repeat(20){
                if (obj_ini.artifact[g]="") and (obj_ini.artifact[g+1]!=""){
                    obj_ini.artifact[g]=obj_ini.artifact[g+1];obj_ini.artifact_tags[g]=obj_ini.artifact_tags[g+1];
                    obj_ini.artifact_identified[g]=obj_ini.artifact_identified[g+1];
                    obj_ini.artifact_condition[g]=obj_ini.artifact_condition[g+1];
                    obj_ini.artifact_loc[g]=obj_ini.artifact_loc[g+1];obj_ini.artifact_sid[g]=obj_ini.artifact_sid[g+1];
                    // 
                    obj_ini.artifact[g+1]="";obj_ini.artifact_tags[g+1]="";
                    obj_ini.artifact_identified[g+1]=0;obj_ini.artifact_condition[g+1]=100;
                    obj_ini.artifact_loc[g+1]="";obj_ini.artifact_sid[g+1]=0;
                }
                g+=1;
            }
            obj_controller.cooldown=10;
            if (obj_controller.menu_artifact&gt;obj_controller.artifacts) then obj_controller.menu_artifact=obj_controller.artifacts;
            
            obj_controller.menu=20;
            obj_controller.diplomacy=giveto;
            obj_controller.force_goodbye=-1;
            var the;the="";if (giveto!=7) and (giveto!=10) then the="the ";
            scr_event_log("","Artifact gifted to "+string(the)+string(obj_controller.faction[giveto])+".");
            
            if (inq_hide!=2) then with(obj_controller){
                if (string_count("Daemon",obj_popup.old_tags)=0) or ((diplomacy!=4) and (diplomacy!=5) and (diplomacy!=2)) then scr_dialogue("artifact_thanks");
                if (string_count("Daemon",obj_popup.old_tags)&gt;0) and ((diplomacy=4) or (diplomacy=5) or (diplomacy=2)) then scr_dialogue("artifact_daemon");
            }
            if (inq_hide=2) and (obj_controller.diplomacy=4) then with(obj_controller){scr_dialogue("artifact_returned");}
            
            if (string_count("mnr",old_tags)=0){
                if (giveto=2) then obj_controller.disposition[2]+=6;
                if (giveto=3) then obj_controller.disposition[3]+=4;
                if (giveto=4) and (inq_hide!=2) then obj_controller.disposition[4]+=4;
                if (giveto=4) and (inq_hide=2) then obj_controller.disposition[4]+=2;
                if (giveto=5) and (string_count(old_tags,"Daemon")=0){
                    obj_controller.disposition[5]+=4;
                    var o;o=0;repeat(4){if (o&lt;=4){o+=1;if (obj_ini.adv[o]="Reverent Guardians") then o=500;}}if (o&gt;100) then obj_controller.disposition[5]+=2;
                }
                if (giveto=6) then obj_controller.disposition[6]+=3;
                if (giveto=8) then obj_controller.disposition[8]+=4;
            }
            
            // Need to modify ^^^^ based on if it is chaos or daemonic
            
            if (giveto=2){
                if (string_count("Daemon",old_tags)&gt;0){
                    var v,ev;v=0;ev=0;repeat(99){v+=1;if (ev=0) and (obj_controller.event[v]="") then ev=v;}
                    obj_controller.event[ev]="imperium_daemon";obj_controller.event_duration[ev]=1;
                    with(obj_star){
                        if (p_owner[1]=2) then p_heresy[1]+=choose(30,40,50,60);
                        if (p_owner[2]=2) then p_heresy[2]+=choose(30,40,50,60);
                        if (p_owner[3]=2) then p_heresy[3]+=choose(30,40,50,60);
                        if (p_owner[4]=2) then p_heresy[4]+=choose(30,40,50,60);
                    }
                }
                if (string_count("Chaos",old_tags)&gt;0){
                    with(obj_star){
                        if (p_owner[1]=2) and (p_heresy[1]&gt;0) then p_heresy[1]+=10;
                        if (p_owner[2]=2) and (p_heresy[2]&gt;0) then p_heresy[2]+=10;
                        if (p_owner[3]=2) and (p_heresy[3]&gt;0) then p_heresy[3]+=10;
                        if (p_owner[4]=2) and (p_heresy[4]&gt;0) then p_heresy[4]+=10;
                    }
                }
            }
            if (giveto=8){
                if (string_count("Daemon",old_tags)&gt;0){
                    with(obj_star){
                        if (p_owner[1]=8) then p_heresy[1]+=40;
                        if (p_owner[2]=8) then p_heresy[2]+=40;
                        if (p_owner[3]=8) then p_heresy[3]+=40;
                        if (p_owner[4]=8) then p_heresy[4]+=40;
                    }
                }
            }
            instance_destroy();exit;
        }
    
    }
}










xx=view_xview[0]+951;yy=view_yview[0]+398;
if (mouse_x&gt;=xx+121) and (mouse_y&gt;=yy+393) and (mouse_x&lt;xx+231) and (mouse_y&lt;yy+414){
    if (type=8) and (cooldown&lt;=0){
        obj_controller.cooldown=8000;
        instance_destroy();exit;
    }
}
if (mouse_x&gt;=xx+408) and (mouse_y&gt;=yy+393) and (mouse_x&lt;xx+518) and (mouse_y&lt;yy+414){
    if (type=8) and (cooldown&lt;=0) and (all_good=1){
        cooldown=100;obj_controller.cooldown=8000;
        
        var i,this,dwarn;i=0;this=0;dwarn=false;
        repeat(obj_controller.man_max){
            i+=1;if (this=0) and (obj_controller.man_sel[i]=1) then this=i;
        }
        i=this;
        
        if (obj_controller.man[i]!="") and (obj_controller.man_sel[i]=1){
            var replace;replace="";
            
            if (target_role=1) then replace="weapon1";
            if (target_role=2) then replace="weapon2";
            if (target_role&gt;3){
                if (obj_ini.artifact[obj_controller.menu_artifact]="Power Armor") then replace="armor";
                if (obj_ini.artifact[obj_controller.menu_artifact]=string(obj_img.battlesuit)) then replace="armor";
                if (obj_ini.artifact[obj_controller.menu_artifact]="Artificer Armor") then replace="armor";
                if (obj_ini.artifact[obj_controller.menu_artifact]=string(obj_img.unit[1,6])+" Armor") or (obj_ini.artifact[obj_controller.menu_artifact]=obj_img.unit[1,6]) then replace="armor";
            
                if (obj_ini.artifact[obj_controller.menu_artifact]="Rosarius") then replace="gear";
                if (obj_ini.artifact[obj_controller.menu_artifact]="Bionics") then replace="gear";
                if (obj_ini.artifact[obj_controller.menu_artifact]="Psychic Hood") then replace="gear";
                if (obj_ini.artifact[obj_controller.menu_artifact]="Servo Arms") then replace="gear";
                
                if (obj_ini.artifact[obj_controller.menu_artifact]="Jump Pack") then replace="mobility";
                if (obj_ini.artifact[obj_controller.menu_artifact]="Bike") then replace="mobility";
            }
            if (replace="armor") and (obj_controller.ma_race[i]&gt;5){cooldown=8;obj_controller.cooldown=8;exit;}
            
            if (target_comp&gt;10) then target_comp=0;
            
            if (string_count("aemon",obj_ini.artifact_tags[obj_controller.menu_artifact])&gt;0){
                obj_ini.chaos[target_comp,obj_controller.ide[i]]+=choose(1,2,3,4,5,6)+choose(1,2,3,4,5,6);
                if (string_count("dwarn|",obj_controller.useful_info)=0) and (obj_ini.role[target_comp,obj_controller.ide[i]]=obj_img.faction_title[1]){
                    obj_controller.useful_info+="dwarn|";dwarn=true;
                }
            }
                
            if (replace="armor"){
                if (obj_controller.ma_armor[i]!="") and (obj_controller.ma_armor[i]!="None") then scr_add_item(obj_ini.armor[target_comp,obj_controller.ide[i]],1);
                
                if (obj_controller.menu_artifact=obj_controller.fest_display) then obj_controller.fest_display=0;
                
                if (obj_ini.artifact[obj_controller.menu_artifact]=string(obj_img.battlesuit)) or (obj_ini.artifact[obj_controller.menu_artifact]="Dreadnought Armor"){
                    if (obj_ini.mobi[target_comp,obj_controller.ide[i]]!=""){// NOPE
                        scr_add_item(obj_ini.mobi[target_comp,obj_controller.ide[i]],1);
                        obj_ini.mobi[target_comp,obj_controller.ide[i]]="";obj_controller.ma_mobi[i]="";
                        if (obj_ini.artifact[obj_controller.menu_artifact]="Dreadnought Armor"){
                            if (obj_ini.age[target_comp,obj_controller.ide[i]]!=floor(obj_ini.age[target_comp,obj_controller.ide[i]])) then obj_ini.age[target_comp,obj_controller.ide[i]]=floor(obj_ini.age[target_comp,obj_controller.ide[i]]);
                        }
                        
                    }
                }
                obj_controller.ma_armor[i]="";obj_ini.armor[target_comp,obj_controller.ide[i]]="";
                obj_controller.ma_armor[i]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
                obj_ini.armor[target_comp,obj_controller.ide[i]]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
            
                // NOPE
                if (obj_ini.wep1[target_comp,obj_controller.ide[i]]="Assault Cannon") or (obj_ini.wep2[target_comp,obj_controller.ide[i]]="Assault Cannon"){
                    var bgn,bed;bed=0;bgn=obj_ini.armor[target_comp,obj_controller.ide[i]];
                    if (string_count("Termi",bgn)=0) then bed+=2;
                    if (bed=2){
                        if (obj_ini.wep1[target_comp,obj_controller.ide[i]]="Assault Cannon"){
                            scr_add_item(obj_ini.wep1[target_comp,obj_controller.ide[i]],1);obj_ini.wep1[target_comp,obj_controller.ide[i]]="";
                        }
                        if (obj_ini.wep2[target_comp,obj_controller.ide[i]]="Assault Cannon"){
                            scr_add_item(obj_ini.wep2[target_comp,obj_controller.ide[i]],1);obj_ini.wep2[target_comp,obj_controller.ide[i]]="";
                        }
                    }
                }
            
            
            }
            if (replace="gear"){
                if (obj_controller.ma_gear[i]!="") and (obj_controller.ma_gear[i]!="None") then scr_add_item(obj_ini.gear[target_comp,obj_controller.ide[i]],1);
                obj_controller.ma_gear[i]="";obj_ini.gear[target_comp,obj_controller.ide[i]]="";
                obj_controller.ma_gear[i]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
                obj_ini.gear[target_comp,obj_controller.ide[i]]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
            }
            if (replace="mobility"){
                if (obj_controller.ma_mobi[i]!="") and (obj_controller.ma_mobi[i]!="None") then scr_add_item(obj_ini.mobi[target_comp,obj_controller.ide[i]],1);
                obj_controller.ma_mobi[i]="";obj_ini.mobi[target_comp,obj_controller.ide[i]]="";
                obj_controller.ma_mobi[i]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
                obj_ini.mobi[target_comp,obj_controller.ide[i]]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
            }
            if (replace="weapon1"){
                if (obj_controller.ma_wep1[i]!="") and (obj_controller.ma_wep1[i]!="None") then scr_add_item(obj_ini.wep1[target_comp,obj_controller.ide[i]],1);
                obj_controller.ma_wep1[i]="";obj_ini.wep1[target_comp,obj_controller.ide[i]]="";
                obj_controller.ma_wep1[i]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
                obj_ini.wep1[target_comp,obj_controller.ide[i]]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
            }
            if (replace="weapon2"){
                if (obj_controller.ma_wep2[i]!="") and (obj_controller.ma_wep2[i]!="None") then scr_add_item(obj_ini.wep2[target_comp,obj_controller.ide[i]],1);
                obj_controller.ma_wep2[i]="";obj_ini.wep2[target_comp,obj_controller.ide[i]]="";
                obj_controller.ma_wep2[i]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
                obj_ini.wep2[target_comp,obj_controller.ide[i]]=obj_ini.artifact[obj_controller.menu_artifact]+string("&amp;")+obj_ini.artifact_tags[obj_controller.menu_artifact];
            }
            
            
            obj_ini.artifact[obj_controller.menu_artifact]="";obj_ini.artifact_tags[obj_controller.menu_artifact]="";
            obj_ini.artifact_identified[obj_controller.menu_artifact]=0;obj_ini.artifact_condition[obj_controller.menu_artifact]=100;
            obj_ini.artifact_loc[obj_controller.menu_artifact]="";obj_ini.artifact_sid[obj_controller.menu_artifact]=0;
            obj_controller.artifacts-=1;cooldown=12;
            
            var g;g=obj_controller.menu_artifact;
            repeat(20){
                if (obj_ini.artifact[g]="") and (obj_ini.artifact[g+1]!=""){
                    obj_ini.artifact[g]=obj_ini.artifact[g+1];obj_ini.artifact_tags[g]=obj_ini.artifact_tags[g+1];
                    obj_ini.artifact_identified[g]=obj_ini.artifact_identified[g+1];
                    obj_ini.artifact_condition[g]=obj_ini.artifact_condition[g+1];
                    obj_ini.artifact_loc[g]=obj_ini.artifact_loc[g+1];obj_ini.artifact_sid[g]=obj_ini.artifact_sid[g+1];
                    // 
                    obj_ini.artifact[g+1]="";obj_ini.artifact_tags[g+1]="";
                    obj_ini.artifact_identified[g+1]=0;obj_ini.artifact_condition[g+1]=100;
                    obj_ini.artifact_loc[g+1]="";obj_ini.artifact_sid[g+1]=0;
                }
                g+=1;
            }
            obj_controller.cooldown=10;
            
            if (obj_controller.menu_artifact&gt;obj_controller.artifacts) then obj_controller.menu_artifact=obj_controller.artifacts;
            
            if (dwarn=true){
                var pip;pip=instance_create(0,0,obj_popup);
                pip.title=string(obj_img.demon_formal)+" Artifacts";
                pip.text="Some artifacts, like the one you now wield, are a blasphemous union of the "+string(obj_img.real_world)+"'s matter and the "+string(obj_img.magic_world)+"'s spirit, containing the essence of a bound "+string_lower(obj_img.demon_formal)+".  While they may offer great power, and enhanced perception, they are known to whisper poisonous lies to the wielder.  The path to damnation begins with good intentions, and many times artifacts such as these have been the cause.";
                pip.image="";pip.cooldown=8;obj_controller.cooldown=8;
            }
            
            
            instance_destroy();exit;
        }
    }
}

if (type=8) and (cooldown&lt;=0){
    var xx,yy,before;
    xx=view_xview[0]+951;yy=view_yview[0]+48;
    before=target_comp;

    if (mouse_y&gt;=yy+71) and (mouse_y&lt;yy+87){
        if (mouse_x&gt;=xx+75) and (mouse_x&lt;=xx+125){target_comp=0;cooldown=8000;}
    }
    if (mouse_y&gt;=yy+87) and (mouse_y&lt;yy+103){
        if (mouse_x&gt;=xx+77) and (mouse_x&lt;=xx+125){target_comp=1;cooldown=8000;}
        if (mouse_x&gt;=xx+158) and (mouse_x&lt;=xx+203){target_comp=2;cooldown=8000;}
        if (mouse_x&gt;=xx+275) and (mouse_x&lt;=xx+320){target_comp=3;cooldown=8000;}
        if (mouse_x&gt;=xx+386) and (mouse_x&lt;=xx+430){target_comp=4;cooldown=8000;}
        if (mouse_x&gt;=xx+497) and (mouse_x&lt;=xx+545){target_comp=5;cooldown=8000;}
    }
    if (mouse_y&gt;=yy+103) and (mouse_y&lt;yy+129){
        if (mouse_x&gt;=xx+77) and (mouse_x&lt;=xx+125){target_comp=6;cooldown=8000;}
        if (mouse_x&gt;=xx+158) and (mouse_x&lt;=xx+203){target_comp=7;cooldown=8000;}
        if (mouse_x&gt;=xx+275) and (mouse_x&lt;=xx+320){target_comp=8;cooldown=8000;}
        if (mouse_x&gt;=xx+386) and (mouse_x&lt;=xx+430){target_comp=9;cooldown=8000;}
        if (mouse_x&gt;=xx+497) and (mouse_x&lt;=xx+545){target_comp=10;cooldown=8000;}
    }
    
    if (mouse_y&gt;=yy+124) and (mouse_y&lt;yy+146) and (target_role&lt;3){
        if (mouse_x&gt;=xx+196) and (mouse_x&lt;xx+291){target_role=1;cooldown=8;}
        if (mouse_x&gt;=xx+424) and (mouse_x&lt;=xx+525){target_role=2;cooldown=8;}
    }
    
    if (before!=target_comp){units=0;
        with(obj_controller){
            if (obj_popup.target_comp&gt;0) then scr_company_view(obj_popup.target_comp);
            if (obj_popup.target_comp=0) then scr_special_view(0);
        }
        var i;i=0;
        repeat(obj_controller.man_max){i+=1;
            obj_controller.man_sel[i]=0;
        }i=0;
    }
    
    
    if (cooldown&lt;=0) and (target_comp!=-1){
        var xx,yy,bb;bb="";x2=view_xview[0]+951;y2=view_yview[0]+398;
        var top,sel,temp1,temp2,temp3,temp4,temp5;temp1="";temp2="";temp3="";temp4="";temp5="";
        top=obj_controller.man_current;var stop;stop=0;sel=top;
        
        repeat(min(obj_controller.man_max,23)){
            if (mouse_x&gt;=xx+29) and (mouse_y&gt;=yy+150) and (mouse_x&lt;xx+569) and (mouse_y&lt;yy+175.4){
                var onceh;onceh=0;stop=0;
                if (obj_controller.man_sel[sel]=0) and (onceh=0){cooldown=8000;units=1;
                    if (stop=0){onceh=1;obj_controller.man_sel[sel]=1;stop=sel;}
                }
                if (obj_controller.man_sel[sel]=1) and (onceh=0){
                    onceh=1;units=0;obj_controller.man_sel[sel]=0;cooldown=8000;
                }
            }
            yy+=25.4;sel+=1;
        }
        
        if (stop!=0){var i;i=0;
            repeat(obj_controller.man_max){i+=1;
                if (i!=stop) then obj_controller.man_sel[i]=0;
            }
        }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hide=true) then exit;

var xx,yy;
xx=view_xview[0];
yy=view_yview[0];

// if (!instance_exists(obj_controller)) then exit;
if (instance_exists(obj_fleet)) then exit;

if (type=99){
    draw_set_font(fnt_large);
    draw_set_halign(fa_center);
    draw_set_color(38144);
    
    if (obj_controller.zoomed=0){draw_text_transformed(view_xview[0]+320,view_yview[0]+60,"SELECT DESTINATION",0.5,0.5,0);}
    if (obj_controller.zoomed=1){draw_text_transformed(room_width/2,60*3,"SELECT DESTINATION",1.5,1.5,0);}
    
    draw_set_halign(fa_left);
}


if (type=10){
    target_comp+=1;
    draw_set_color(0);
    draw_set_alpha(target_comp/60);
    draw_rectangle(0,0,room_width,room_height,0);
    draw_set_alpha(1);
    exit;
}

if ((type=9) or (type=9.1)) and (instance_exists(obj_controller)){
    draw_sprite(spr_planet_screen,0,xx+231,yy+112);
    draw_set_font(fnt_40k_14);
    draw_set_halign(fa_center);
    draw_set_color(c_gray);
    
    var ch,inq_hide;ch="";inq_hide=0;
    if (type=9){
        if (string_count("inq",obj_ini.artifact_tags[obj_controller.menu_artifact])&gt;0){
            var i;i=0;
            repeat(10){i+=1;
                if (obj_controller.quest[i]="artifact_loan") then inq_hide=1;
                if (obj_controller.quest[i]="artifact_return") then inq_hide=2;
            }
        }
    }
    
    if (obj_controller.disposition[2]&gt;0) then ch="+";
    if (obj_controller.known[2]&gt;1) then draw_text(xx+740,yy+120,"Imperium ("+string(ch)+string(obj_controller.disposition[2])+")#"+string(obj_controller.faction_title[2]));
    draw_line(xx+239+420,yy+150,xx+398+420,yy+150);ch="";if (obj_controller.disposition[3]&gt;0) then ch="+";
    if (obj_controller.known[3]&gt;1) then draw_text(xx+740,yy+150,"Mechanicus ("+string(ch)+string(obj_controller.disposition[3])+")#"+string(obj_controller.faction_title[3]));
    draw_line(xx+239+420,yy+180,xx+398+420,yy+180);ch="";if (obj_controller.disposition[4]&gt;0) then ch="+";
    if ((obj_controller.known[4]&gt;1) or (inq_hide=2)) and (inq_hide!=1) then draw_text(xx+740,yy+180,"Inquisition ("+string(ch)+string(obj_controller.disposition[4])+")#"+string(obj_controller.faction_title[4]));
    draw_line(xx+239+420,yy+210,xx+398+420,yy+210);ch="";if (obj_controller.disposition[5]&gt;0) then ch="+";
    if (obj_controller.known[5]&gt;1) then draw_text(xx+740,yy+210,"Ecclesiarchy ("+string(ch)+string(obj_controller.disposition[5])+")#"+string(obj_controller.faction_title[5]));
    draw_line(xx+239+420,yy+240,xx+398+420,yy+240);ch="";if (obj_controller.disposition[6]&gt;0) then ch="+";
    if (obj_controller.known[6]&gt;1) then draw_text(xx+740,yy+240,"Eldar ("+string(ch)+string(obj_controller.disposition[6])+")#"+string(obj_controller.faction_title[6]));
    draw_line(xx+239+420,yy+270,xx+398+420,yy+270);ch="";if (obj_controller.disposition[8]&gt;0) then ch="+";
    if (obj_controller.known[8]&gt;1) then draw_text(xx+740,yy+270,"Tau ("+string(ch)+string(obj_controller.disposition[8])+")#"+string(obj_controller.faction_title[8]));
    draw_line(xx+239+420,yy+300,xx+398+420,yy+300);
    
    if (mouse_x&gt;=xx+240+420) and (mouse_x&lt;=xx+387+420){
        draw_set_alpha(0.33);draw_set_color(c_gray);
        if (mouse_y&gt;=yy+121) and (mouse_y&lt;=yy+149) and (obj_controller.known[2]&gt;1) then draw_rectangle(xx+340+420,yy+121,xx+398+420,yy+149,0);
        if (mouse_y&gt;=yy+151) and (mouse_y&lt;=yy+179) and (obj_controller.known[3]&gt;1) then draw_rectangle(xx+340+420,yy+151,xx+398+420,yy+179,0);
        if (mouse_y&gt;=yy+181) and (mouse_y&lt;=yy+209) and ((obj_controller.known[4]&gt;1) or (inq_hide=2)) and (inq_hide!=1) then draw_rectangle(xx+340,yy+181,xx+398+420,yy+209,0);
        if (mouse_y&gt;=yy+211) and (mouse_y&lt;=yy+239) and (obj_controller.known[5]&gt;1) then draw_rectangle(xx+340+420,yy+211,xx+398+420,yy+239,0);
        if (mouse_y&gt;=yy+241) and (mouse_y&lt;=yy+269) and (obj_controller.known[6]&gt;1) then draw_rectangle(xx+340+420,yy+241,xx+398+420,yy+269,0);
        if (mouse_y&gt;=yy+271) and (mouse_y&lt;=yy+299) and (obj_controller.known[8]&gt;1) then draw_rectangle(xx+340+420,yy+271,xx+398+420,yy+299,0);
    }
    
    draw_set_alpha(1);
    draw_set_color(38144);
    draw_text(xx+740,yy+326,"[Cancel]");
}


var zm;zm=0;
if (instance_exists(obj_controller)) then zm=obj_controller.zoomed;
if ((zm=0) and (type&lt;=4)) or (type=98){

    
    var widd,image_bot;
    image_bot=0;

    if (size=0) or (size=2){
        sprite_index=spr_popup_medium;image_alpha=0;widd=sprite_width-50;
        draw_sprite_ext(spr_popup_medium,type,xx+((1600-sprite_width)/2),yy+((900-sprite_height)/2),1,y_scale,0,c_white,1);
        if (image!=""){image_wid=100;image_hei=100;}
    }
    if (size=1){
        sprite_index=spr_popup_small;image_alpha=0;widd=sprite_width-10;
        draw_sprite_ext(spr_popup_small,type,xx+((1600-sprite_width)/2),yy+((900-sprite_height)/2),1,y_scale,0,c_white,1);
        if (image!=""){image_wid=150;image_hei=150;}
    }
    if (size=3){
        sprite_index=spr_popup_large;image_alpha=0;widd=sprite_width-50;
        draw_sprite_ext(spr_popup_large,type,xx+((1600-sprite_width)/2),yy+((900-sprite_height)/2),1,y_scale,0,c_white,1);
        if (image!=""){image_wid=200;image_hei=200;}
    }
    
    if (image_wid&gt;0) then widd-=(image_wid+10);
    
    var x1,y1;
    x1=xx+((1600-sprite_width)/2);
    y1=yy+((900-sprite_height)/2);
    
    draw_set_font(fnt_40k_14b);
    draw_set_halign(fa_center);
    draw_set_color(38144);
    
    if (fancy_title=1){
        draw_set_font(fnt_fancy);    
        if (type=1) then draw_set_color(255);
    }
    draw_text(x1+(sprite_width/2),y1+(sprite_height*0.07),string(title));
    // draw_text(xx+320.5,yy+123.5,string(title));
    
    draw_set_font(fnt_40k_14);
    draw_set_halign(fa_left);
    draw_set_color(38144);
    
    if (instance_exists(obj_turn_end)){
        if (obj_turn_end.popups&gt;0) then draw_text(x1+20,y1+(sprite_height*0.07),string(obj_turn_end.current_popup)+"/"+string(obj_turn_end.popups));
    }
    
    if (image=""){
        if (size=1) then draw_text_ext(x1+5,y1+(sprite_height*0.18),string(text),-1,widd);
        if (size!=1) then draw_text_ext(x1+25,y1+(sprite_height*0.18),string(text),-1,widd);
        str_h=string_height_ext(string(text),-1,widd)+(sprite_height*0.18);
    }
    if (image!=""){
        if (size=1) then draw_text_ext(x1+15+image_wid,y1+(sprite_height*0.18),string(text),-1,widd);
        if (size!=1) then draw_text_ext(x1+35+image_wid,y1+(sprite_height*0.18),string(text),-1,widd);
        str_h=string_height_ext(string(text),-1,widd)+(sprite_height*0.18);
    }
    
    // if (image!="") then draw_text_ext(x1+126+150,y1+152,string(text),-1,384-150);
    // if (text2!="") then draw_text_ext(x1+126,y1+309,string(text2),-1,384);
    
    var img;img=-1;
    if (image="") then img=-1;
    if (image="orks") then img=0;
    if (image="tau") then img=1;
    if (image="chaos") then img=2;
    if (image="shadow") then img=3;
    if (image="distinguished") then img=4;
    if (image="tech_build") then img=5;
    if (image="sororitas") then img=6;
    if (image="angry") then img=7;
    if (image="gene_bad") then img=8;
    if (image="lost_warp") then img=10;
    if (image=obj_img.travel) then img=11;
    if (image="crusade") then img=12;
    if (image="fuklaw") then img=13;
    if (image="artifact") or (image="artifact2") then img=14;
    if (image="artifact_recovered") then img=15;
    if (image="artifact_given") then img=15;
    if (image="waaagh") then img=16;
    if (image="shipyard") then img=17;
    if (image="inquisition") then img=18;
    if (image="succession") then img=19;
    if (image="rogue_trader") then img=20;
    if (image="necron_tomb") then img=21;
    if (image="webber") then img=22;
    if (image="spyrer") then img=23;
    if (image="fortress") then img=24;
    if (image="fortress_hive") then img=25;
    if (image="fortress_feral") then img=26;
    if (image="fortress_ice") then img=27;
    if (image="fortress_lava") then img=28;
    if (image="fortress_dorf") then img=29;
    if (image="exploding_ship") then img=30;
    if (image="necron_cave") then img=31;
    if (image="exterminatus_new") then img=32;
    if (image="necron_tunnels_1") then img=33;
    if (image="necron_tunnels_2") then img=34;
    if (image="necron_tunnels_3") then img=35;
    if (image="necron_army") then img=36;
    if (image="harlequin") then img=37;
    if (image="black_rage") then img=39;
    if (image="exterminatus") then img=40;
    if (image="stc") then img=41;
    if (image="thallax") then img=42;
    if (image="space_hulk_done") then img=44;
    if (image="ancient_ruins") then img=45;
    if (image="geneseed_lab") then img=47;
    if (image="ruins_bunker") then img=48;
    if (image="ruins_fort") then img=49;
    if (image="ruins_ship") then img=50;
    if (image="fallen") then img=51;
    if (image="debug_banshee") then img=52;
    if (image="mechanicus") then img=53;
    if (image="chaos_cultist") then img=54;
    if (image="chaos_symbol") then img=55;
    if (image="chaos_messenger") then img=56;
    if (image="event_feast") then img=57;
    if (image="event_tournament") then img=58;
    if (image="event_deathmatch") then img=59;
    if (image="event_mass") then img=60;
    if (image="event_ccult") then img=61;
    if (image="event_crelic") then img=62;
    if (image="event_march") then img=63;
    
    
    // if (img!=-1) then draw_sprite_stretched(spr_popup_pic,img,x1+(sprite_width/2),y1+(sprite_height*0.07),image_wid,image_hei);
    if (img!=-1) and (image!="") and (image_wid&gt;0){
        // if (size=1) then draw_sprite_stretched(spr_popup_pic,img,x1+5,y1+(sprite_height*0.07)+24,image_wid,image_hei);
        // if (size&gt;=2) then draw_sprite_stretched(spr_popup_pic,img,x1+25,y1+(sprite_height*0.07)+24,image_wid,image_hei);
        
        var sh;sh=999;
        if (size=1){sh=24;scr_image("popup",img,x1+5,y1+sh+24,image_wid,image_hei);}
        if (size&gt;=2){sh=24;scr_image("popup",img,x1+25,y1+sh+24,image_wid,image_hei);}
        
        image_bot=(sprite_height*0.07)+image_hei+5;
    }
    
    
    
    // if (img!=-1) then draw_sprite(spr_popup_pic,img,xx+130,yy+149);
    
    // if (instance_exists(obj_turn_end)){if (obj_turn_end.popups&gt;1) draw_text(xx+126,yy+123,string(obj_turn_end.current_popup)+"/"+string(obj_turn_end.popups));}
    
    
    
    // if (option1!="") and ((string_count("Servitors and Skitarii",option1)=0) or (img!=14)){
    if (option1!="") and (string_count("Servitors and Skitarii",option1)=0){
        
        var tox;tox="";
        tox+="1. "+string(option1);
        if (option2!="") then tox+="#2. "+string(option2);
        if (option3!="") then tox+="#3. "+string(option3);
        // if (option4!="") then tox+="#4. "+string(option4);
        
        // if (size&lt;2){
            var top;top=y1+0.5+(sprite_height*0.6);
            if (str_h!=0) then top=y1+str_h+20;
            if (image!="") then top=max(top,y1+image_bot);
            
            draw_text_ext(x1+25.5,top,"  Choices:",-1,widd);
            draw_text_ext(x1+25,top+0.5,"  Choices:",-1,widd);
            
            var sz,sz2,oy,t8;sz=0;sz2=0;oy=y1;t8=0;
            if (str_h!=0){y1+=str_h+20;y1-=(sprite_height*0.6);}
            
            // XDDDD
            y1=top;
            // if (size=2) and (image!="") then y1+=15;
            
            
            
            if (option1!="") then draw_text_ext(x1+25.5,y1+20,"1. "+string(option1),-1,widd);
            
            sz=string_height_ext("1. "+string(option1),-1,widd);
            if (option2!="") then draw_text_ext(x1+25.5,y1+20+sz,"2. "+string(option2),-1,widd);
            
            sz2=string_height_ext("1. "+string(option1),-1,widd);
            sz2+=string_height_ext("2. "+string(option2),-1,widd);
            if (option3!="") then draw_text_ext(x1+25.5,y1+20+sz2,"3. "+string(option3),-1,widd);
            
            if (option1!="") then t8=(y1+20)+5;
            if (option2!="") then t8=(y1+20+sz)+5;
            if (option3="") then t8=(y1+20+sz2+string_height_ext("3. "+string(option3),-1,widd))+5;
            
            
            if (option1!="") and (mouse_x&gt;=x1) and (mouse_y&gt;=y1+21) and (mouse_x&lt;=x1+30+string_width_ext("1. "+string(option1),-1,widd)) and (mouse_y&lt;y1+39){
                draw_sprite(spr_popup_select,0,x1+8.5,y1+21);
                if (mouse_check_button(mb_left)) then press=1;
            }
            if (option2!="") and (mouse_x&gt;=x1) and (mouse_y&gt;=y1+21+sz) and (mouse_x&lt;=x1+30+string_width_ext("2. "+string(option2),-1,widd)) and (mouse_y&lt;y1+39+sz){
                draw_sprite(spr_popup_select,0,x1+8.5,y1+21+sz);
                if (mouse_check_button(mb_left)) then press=2;
            }
            if (option3!="") and (mouse_x&gt;=x1) and (mouse_y&gt;=y1+21+sz2) and (mouse_x&lt;=x1+30+string_width_ext("3. "+string(option3),-1,widd)) and (mouse_y&lt;y1+39+sz2){
                draw_sprite(spr_popup_select,0,x1+8.5,y1+21+sz2);
                if (mouse_check_button(mb_left)) then press=3;
            }
            
            
            
            
            
            if (t8&lt;(oy+sprite_height)){
                y_scale=(t8/(oy+sprite_height));
            }
            if (t8&gt;(oy+sprite_height)){
                y_scale=(t8/(oy+sprite_height));
            }
        
        
    }
    /*
    
    if (option1=""){
        draw_set_halign(fa_center);
        draw_text(xx+320,yy+372,"(Press Any Key)");
    }
    if (option1!="") and ((string_count("Mechanicus",option1)=0) or (img!=14)){
        draw_text(xx+130,yy+304,"Choices:");
        if (option3="") then draw_text_ext(xx+130,yy+320,"1. "+string(option1)+"#2. "+string(option2),-1,384);
        if (option3!="") then draw_text_ext(xx+130,yy+320,"1. "+string(option1)+"#2. "+string(option2)+"#3. "+string(option3),-1,384);
    }
    if (option1!="") and (string_count("Mechanicus",option1)&gt;0) and (img=14){
        // draw_text(xx+130,yy+304,"Choices:");
        if (option3="") then draw_text_ext(xx+130,yy+304,"1. "+string(option1)+"#2. "+string(option2),-1,384);
        if (option3!="") then draw_text_ext(xx+130,yy+304,"1. "+string(option1)+"#2. "+string(option2)+"#3. "+string(option3),-1,384);
    }
    */
    
    
}




if (type=8) and (instance_exists(obj_controller)){// Equip Artifact
    var x2,y2;x2=view_xview[0]+951;y2=view_yview[0]+48;
    
    // draw_sprite(spr_popup_large,0,x2,y2);
    
    draw_set_font(fnt_40k_14b);
    draw_set_halign(fa_center);
    draw_set_color(c_gray);
    
    draw_text(x2+312,y2+26,"Equip Artifact ("+string(obj_ini.artifact[obj_controller.menu_artifact])+")");
    // draw_text(xx+320.5,yy+123.5,"Equip Artifact ("+string(obj_ini.artifact[obj_controller.menu_artifact])+")");
    
    draw_set_font(fnt_40k_12);draw_set_halign(fa_left);
    draw_text(x2+31,y2+55,"View Company:");
    var check;check=" ";
    
    if (target_comp=0) then check="x";draw_text(x2+73,y2+71," HQ ["+string(check)+"]");check=" ";
    
    if (target_comp=1) then check="x";draw_text(x2+77,y2+87,"1st ["+string(check)+"]");check=" ";
    if (target_comp=2) then check="x";draw_text(x2+158,y2+87,"2nd ["+string(check)+"]");check=" ";
    if (target_comp=3) then check="x";draw_text(x2+275,y2+87,"3rd ["+string(check)+"]");check=" ";
    if (target_comp=4) then check="x";draw_text(x2+386,y2+87,"4th ["+string(check)+"]");check=" ";
    if (target_comp=5) then check="x";draw_text(x2+497,y2+87,"5th ["+string(check)+"]");check=" ";
    
    if (target_comp=6) then check="x";draw_text(x2+73,y2+103,"6th ["+string(check)+"]");check=" ";
    if (target_comp=7) then check="x";draw_text(x2+160,y2+103,"7th ["+string(check)+"]");check=" ";
    if (target_comp=8) then check="x";draw_text(x2+275,y2+103,"8th ["+string(check)+"]");check=" ";
    if (target_comp=9) then check="x";draw_text(x2+386,y2+103,"9th ["+string(check)+"]");check=" ";
    if (target_comp=10) then check="x";draw_text(x2+497,y2+103,"10th ["+string(check)+"]");check=" ";
    
    if (target_role&gt;2) then draw_set_alpha(0.25);check=" ";draw_text(x2+30,y2+128,"Replace:");
    if (target_role=1) then check="x";draw_text(x2+200,y2+128,"1st Weapon ["+string(check)+"]");check=" ";
    if (target_role=2) then check="x";draw_text(x2+426,y2+128,"2nd Weapon ["+string(check)+"]");check=" ";
    draw_set_alpha(1);
    
    
    draw_set_font(fnt_40k_12);
    draw_rectangle(x2+29,y2+160,x2+569,y2+363+356,1);// Main rectangle?
    
    scr_scrollbar(1520,220,1543,761,23,obj_controller.man_max,obj_controller.man_current);
    draw_rectangle(x2+569,y2+171,x2+592,y2+357+356,1);// Inside of scroll
    draw_rectangle(x2+569,y2+150,x2+592,y2+378+356,1);// Outside of scroll
    draw_sprite_stretched(spr_arrow,2,x2+569,y2+150,23,22);
    draw_sprite_stretched(spr_arrow,3,x2+569,y2+357+356,23,22);
    
    if (target_comp!=-1){
        var x2,y2,bb;bb="";
        x2=view_xview[0]+951;y2=view_yview[0]+48;
    
        var top,sel,temp1,temp2,temp3,temp4,temp5;temp1="";temp2="";temp3="";temp4="";temp5="";
        top=obj_controller.man_current;sel=top;
        
        var ma_ar,ma_we1,ma_we2,ma_ge,ma_mb,ttt;
        ma_ar="";ma_we1="";ma_we2="";ma_ge="";ma_mb="";ttt=0;
        
        repeat(min(obj_controller.man_max,23)){
            if (obj_controller.man[sel]="man"){
                temp1=string(obj_controller.ma_role[sel])+" "+string(obj_controller.ma_name[sel]);
                temp2=string(obj_controller.ma_loc[sel]);
                if (obj_controller.ma_wid[sel]!=0){
                    if (obj_controller.ma_wid[sel]=1) then temp2+=" I";
                    if (obj_controller.ma_wid[sel]=2) then temp2+=" II";
                    if (obj_controller.ma_wid[sel]=3) then temp2+=" III";
                    if (obj_controller.ma_wid[sel]=4) then temp2+=" IV";
                }
                if (obj_controller.ma_health[sel]&gt;=100) then temp3="Unwounded";
                if (obj_controller.ma_health[sel]&gt;=70) and (obj_controller.ma_health[sel]&lt;100) then temp3="Lightly Wounded";
                if (obj_controller.ma_health[sel]&gt;=40) and (obj_controller.ma_health[sel]&lt;70) then temp3="Wounded";
                if (obj_controller.ma_health[sel]&gt;=8) and (obj_controller.ma_health[sel]&lt;40) then temp3="Badly Wounded";
                if (obj_controller.ma_health[sel]&lt;8) then temp3="CRITICAL";
                temp4=string(obj_controller.ma_exp[sel])+" exp";
                
                ma_ar="";ma_we1="";ma_we2="";ma_ge="";ma_mb="";ttt=0;
                if (string_count("&amp;",obj_controller.ma_gear[sel])=0) then ma_ge=obj_controller.ma_gear[sel];
                if (string_count("&amp;",obj_controller.ma_gear[sel])&gt;0) then ma_ge=clean_tags(obj_controller.ma_gear[sel]);
                if (string_count("&amp;",obj_controller.ma_mobi[sel])=0) then ma_mb=obj_controller.ma_mobi[sel];
                if (string_count("&amp;",obj_controller.ma_mobi[sel])&gt;0) then ma_mb=clean_tags(obj_controller.ma_mobi[sel]);
                if (string_count("&amp;",obj_controller.ma_armor[sel])=0) then ma_ar=obj_controller.ma_armor[sel];
                if (string_count("&amp;",obj_controller.ma_armor[sel])&gt;0) then ma_ar=clean_tags(obj_controller.ma_armor[sel]);
                if (string_count("&amp;",obj_controller.ma_wep1[sel])=0) then ma_we1=obj_controller.ma_wep1[sel];
                if (string_count("&amp;",obj_controller.ma_wep1[sel])&gt;0) then ma_we1=clean_tags(obj_controller.ma_wep1[sel]);
                if (string_count("&amp;",obj_controller.ma_wep2[sel])=0) then ma_we2=obj_controller.ma_wep2[sel];
                if (string_count("&amp;",obj_controller.ma_wep2[sel])&gt;0) then ma_we2=clean_tags(obj_controller.ma_wep2[sel]);
                
                if (obj_controller.ma_gear[sel]!="") then temp5="(("+string(ma_ar)+" + "+string(ma_mb)+")) | "+string(ma_we1)+" | "+string(ma_we2)+" + ("+string(ma_ge)+")";
                if (obj_controller.ma_gear[sel]="") then temp5="(("+string(ma_ar)+" + "+string(ma_mb)+")) | "+string(ma_we1)+" | "+string(ma_we2)+"";
            }
            if (obj_controller.man[sel]="vehicle"){
                temp1=string(obj_controller.ma_role[sel]);
                temp2=string(obj_controller.ma_loc[sel]);
                if (obj_controller.ma_wid[sel]!=0){
                    if (obj_controller.ma_wid[sel]=1) then temp2+=" I";
                    if (obj_controller.ma_wid[sel]=2) then temp2+=" II";
                    if (obj_controller.ma_wid[sel]=3) then temp2+=" III";
                    if (obj_controller.ma_wid[sel]=4) then temp2+=" IV";
                }
                temp3="Undamaged";
                temp4="";
                temp5="("+string(obj_controller.ma_wep1[sel])+" | "+string(obj_controller.ma_wep2[sel])+" | "+string(obj_controller.ma_gear[sel])+")";
            }
            
            
            if (obj_controller.man_sel[sel]=0) then draw_set_color(c_black);
            if (obj_controller.man_sel[sel]!=0) then draw_set_color(6052956);
            draw_rectangle(x2+29,y2+150,x2+569,y2+175.4,0);
            draw_set_color(c_gray);draw_rectangle(x2+29,y2+150,x2+569,y2+175.4,1);
            
            // if (obj_controller.man[sel]="man") and (obj_controller.ma_promote[sel]&gt;0) then draw_set_color(c_yellow);
            if (ma_ar="") then draw_set_alpha(0.5);
            draw_text_transformed(x2+32,y2+151,string(temp1),1,1,0);draw_text_transformed(x2+32.5,y2+151.5,string(temp1),1,1,0);
            draw_set_color(c_gray);draw_set_alpha(1);
                
            /*
            if (string_count(obj_img.faction_title[1],temp1)&gt;0){
                draw_text_transformed(xx+27+16,y2+64,string(temp1),0.7,0.7,0);draw_text_transformed(xx+28+16,y2+64,string(temp1),0.7,0.7,0);
                draw_text_transformed(xx+27+16,y2+65,string(temp1),0.7,0.7,0);draw_text_transformed(xx+28+16,y2+65,string(temp1),0.7,0.7,0);
                // draw inspect icon
                draw_sprite(spr_inspect_small,0,xx+27,y2+68);
            }
            */
            
            draw_text_transformed(x2+271,y2+151,string(temp2),1,1,0);
            if (obj_controller.man[sel]="man") and (obj_controller.ma_lid[sel]=0) then draw_text_transformed(x2+271,y2+151,string(temp2),1,1,0);
            if (obj_controller.man[sel]="vehicle") and (obj_controller.ma_lid[sel]=0) then draw_text_transformed(x2+271,y2+151,string(temp2),1,1,0);
            
            if (temp3="CRITICAL") then draw_set_color(c_red);
            draw_text_transformed(x2+400,y2+151,string(temp3),1,1,0);
            draw_set_color(c_gray);
            
            draw_text_transformed(x2+506,y2+151,string(temp4),1,1,0);
            
            draw_set_color(c_gray);
            if (string_count("Artifact",temp5)&gt;0) then draw_set_color(881503);
            draw_text_transformed(x2+38,y2+164,string(temp5),1,1,0);draw_set_color(38144);
            
            y2+=25.4;
            sel+=1;
        }
    }
    
    x2=view_xview[0]+951;
    y2=view_yview[0]+398;
    
    draw_set_alpha(1);
    draw_set_font(fnt_small);
    draw_set_color(c_gray);
    draw_rectangle(x2+121,y2+393,x2+231,y2+414,1);
    draw_set_alpha(0.5);
    draw_rectangle(x2+122,y2+394,x2+230,y2+413,1);
    
    if (all_good=1){
        draw_set_alpha(1);
        draw_rectangle(x2+408,y2+393,x2+518,y2+414,1);
        draw_set_alpha(0.5);
        draw_rectangle(x2+409,y2+394,x2+517,y2+413,1);
    }
    if (all_good!=1){
        draw_set_alpha(0.25);
        draw_rectangle(x2+408,y2+393,x2+518,y2+414,1);
        draw_rectangle(x2+409,y2+394,x2+517,y2+413,1);
    }
    
    draw_set_alpha(1);
    
    draw_set_halign(fa_center);
    draw_text(x2+173,y2+397,"Cancel");draw_text(x2+173.5,y2+397.5,"Cancel");
    
    if (all_good=1){
        draw_text(x2+464,y2+397,"Equip!");
        draw_text(x2+464.5,y2+397.5,"Equip!");
    }
    if (all_good!=1){
        draw_set_alpha(0.25);
        draw_text(x2+464,y2+397,"Equip!");
        draw_text(x2+464.5,y2+397.5,"Equip!");
    }
    draw_set_alpha(1);
    
}






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx,yy;
xx=view_xview[0];
yy=view_yview[0];

if (zm=0) and (type=6) and (instance_exists(obj_controller)){// Changing Equipment
    // draw_sprite(spr_popup,0,xx+112,yy+112);
    draw_set_color(0);draw_rectangle(xx+1006,yy+143,xx+1577,yy+518,0);
    
    draw_set_font(fnt_40k_14b);
    draw_set_halign(fa_center);
    draw_set_color(c_gray);
    
    draw_text(xx+1292,yy+145,"Change Equipment");
    
    draw_set_font(fnt_40k_12);
    
    var comp;comp="";
    if (company=1) then comp="1st";if (company=2) then comp="2nd";
    if (company=3) then comp="3rd";if (company&gt;=4) then comp=string(company)+"th";
    if (company&gt;10) then comp="HQ";
    if (vehicle_equipment=0) then draw_text(xx+1292,yy+170,string(comp)+" Company, "+string(units)+" Marines");
    if (vehicle_equipment=1) then draw_text(xx+1292,yy+170,string(comp)+" Company, "+string(units)+" Vehicles");
    
    /*if (target_comp=1) or (target_comp=2){var si;
        si=83;if (tab!=1) then si=40;draw_sprite_stretched(spr_red_button,3,xx+528,yy+238,si,15);
        si=83;if (tab!=2) then si=40;draw_sprite_stretched(spr_red_button,3,xx+528,yy+238+17,si,15);
    }*/
    
    draw_set_halign(fa_left);
    draw_set_color(c_gray);
    
    draw_rectangle(xx+1010,yy+215,xx+1288,yy+315,1);
    draw_rectangle(xx+1574,yy+215,xx+1296,yy+315,1);
    
    
    var show_name;show_name="";
    // Need to not show the artifact tags here somehow
    
    draw_text(xx+1010,yy+195,"Before");draw_text(xx+1010.5,yy+195.5,"Before");
    
    show_name=o_wep1;if (a_wep1!="") then show_name=a_wep1;
    if (o_wep1!="") then draw_text(xx+1014,yy+215,show_name);
    else draw_text(xx+1014,yy+215,"(None)");
    
    show_name=o_wep2;if (a_wep2!="") then show_name=a_wep2;
    if (o_wep2!="") then draw_text(xx+1014,yy+235,string(show_name));
    else draw_text(xx+1014,yy+235,"(None)");
    
    show_name=o_armor;if (a_armor!="") then show_name=a_armor;
    if (o_armor!="") then draw_text(xx+1014,yy+255,string(show_name));
    else draw_text(xx+1014,yy+255,"(None)");
    
    show_name=o_gear;if (a_gear!="") then show_name=a_gear;
    if (o_gear!="") then draw_text(xx+1014,yy+275,string(show_name));
    else draw_text(xx+1014,yy+275,"(None)");
    
    show_name=o_mobi;if (a_mobi!="") then show_name=a_mobi;
    if (o_mobi!="") then draw_text(xx+1014,yy+295,string(show_name));
    else draw_text(xx+1014,yy+295,"(None)");
    
    
    draw_text(xx+1296,yy+195,"After");draw_text(xx+1296.5,yy+195.5,"After");
    
    draw_set_color(c_gray);if (n_good1=0) then draw_set_color(255);
    show_name=n_wep1;if (a_wep1!="") and (n_wep1=o_wep1) then show_name=a_wep1;
    if (n_wep1!="") then draw_text(xx+1300,yy+215,string(show_name));
    else draw_text(xx+1300,yy+215,"(None)");
    
    draw_set_color(c_gray);if (n_good2=0) then draw_set_color(255);
    show_name=n_wep2;if (a_wep2!="") and (n_wep2=o_wep2) then show_name=a_wep2;
    if (n_wep2!="") then draw_text(xx+1300,yy+235,string(show_name));
    else draw_text(xx+1300,yy+235,"(None)");
    
    draw_set_color(c_gray);if (n_good3=0) then draw_set_color(255);
    show_name=n_armor;if (a_armor!="") and (n_armor=o_armor) then show_name=a_armor;
    if (n_armor!="") then draw_text(xx+1300,yy+255,string(show_name));
    else draw_text(xx+1300,yy+255,"(None)");
    
    draw_set_color(c_gray);if (n_good4=0) then draw_set_color(255);
    show_name=n_gear;if (a_gear!="") and (n_gear=o_gear) then show_name=a_gear;
    if (n_gear!="") then draw_text(xx+1300,yy+275,string(show_name));
    else draw_text(xx+1300,yy+275,"(None)");
    
    draw_set_color(c_gray);if (n_good5=0) then draw_set_color(255);
    show_name=n_mobi;if (a_mobi!="") and (n_mobi=o_mobi) then show_name=a_mobi;
    if (n_mobi!="") then draw_text(xx+1300,yy+295,string(show_name));
    else draw_text(xx+1300,yy+295,"(None)");
    
    draw_set_color(c_gray);
    
    if (target_comp=1) then draw_text(xx+1292,yy+215,"-&gt;");
    if (target_comp=2) then draw_text(xx+1292,yy+235,"-&gt;");
    if (target_comp=3) then draw_text(xx+1292,yy+255,"-&gt;");
    if (target_comp=4) then draw_text(xx+1292,yy+275,"-&gt;");
    if (target_comp=5) then draw_text(xx+1292,yy+295,"-&gt;");
    
    
    if (mouse_x&gt;=xx+1296) and (mouse_x&lt;xx+1574){
        if (mouse_y&gt;=yy+215) and (mouse_y&lt;yy+235){draw_set_alpha(0.5);draw_line(xx+1296,yy+225,xx+1574,yy+225);}
        if (mouse_y&gt;=yy+235) and (mouse_y&lt;yy+255){draw_set_alpha(0.5);draw_line(xx+1296,yy+245,xx+1574,yy+245);}
        if (mouse_y&gt;=yy+255) and (mouse_y&lt;yy+275){draw_set_alpha(0.5);draw_line(xx+1296,yy+265,xx+1574,yy+265);}
        if (mouse_y&gt;=yy+275) and (mouse_y&lt;yy+295){draw_set_alpha(0.5);draw_line(xx+1296,yy+285,xx+1574,yy+285);}
        if (mouse_y&gt;=yy+295) and (mouse_y&lt;yy+315){draw_set_alpha(0.5);draw_line(xx+1296,yy+305,xx+1574,yy+305);}
    }
    draw_set_alpha(1);
     
     
     if (target_comp!=-1){
         var check,mct,o;check=" ";o=1;mct=1;if (master_crafted=1) then mct=0.7;
         
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1016,yy+335,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1016,yy+355,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1016,yy+375,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1016,yy+395,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1016,yy+415,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1016,yy+435,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1016,yy+455,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1170,yy+335,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1170,yy+355,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1170,yy+375,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1170,yy+395,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1170,yy+415,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1170,yy+435,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1170,yy+455,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1324,yy+335,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1324,yy+355,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1324,yy+375,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1324,yy+395,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1324,yy+415,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1324,yy+435,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1324,yy+455,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1478,yy+335,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1478,yy+355,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1478,yy+375,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1478,yy+395,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1478,yy+415,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1478,yy+435,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
         if (item_name[o]!=""){if (target_role=o) then check="x";draw_text_transformed(xx+1478,yy+455,"["+string(check)+"] "+string(item_name[o]),mct,1,0);check=" ";}o+=1;
    }
    
    draw_set_halign(fa_center);
    if (target_comp=1) or (target_comp=2){
        var msc;msc=" ";if (master_crafted=1) then msc="x";
         if (tab=1) then draw_text(xx+1292,yy+318,"Tab 1 [x]    Tab 2 [ ]        Master-Crafted ["+string(msc)+"]");
         if (tab=2) then draw_text(xx+1292,yy+318,"Tab 1 [ ]    Tab 2 [x]        Master-Crafted ["+string(msc)+"]");
    }
    
    draw_set_color(255);draw_set_halign(fa_center);
    draw_text(xx+1292,yy+476,warning);
    
    draw_set_color(c_gray);draw_set_halign(fa_left);
    draw_rectangle(xx+1006,yy+499,xx+1115,yy+518,1);
    draw_set_alpha(0.5);
    draw_rectangle(xx+1007,yy+500,xx+1114,yy+517,1);
    
    
    if (n_good1+n_good2+n_good3+n_good4+n_good5=5){
        draw_set_alpha(1);
        draw_rectangle(xx+1465,yy+499,xx+1576,yy+518,1);
        draw_set_alpha(0.5);
        draw_rectangle(xx+1466,yy+500,xx+1575,yy+517,1);
    }
    if (n_good1+n_good2+n_good3+n_good4+n_good5!=5){
        draw_set_alpha(0.25);
        draw_rectangle(xx+1465,yy+499,xx+1576,yy+518,1);
        draw_rectangle(xx+1466,yy+500,xx+1575,yy+517,1);
    }
    
    draw_set_alpha(1);draw_set_halign(fa_center);
    draw_text(xx+1061,yy+501,"Cancel");draw_text(xx+1061.5,yy+501.5,"Cancel");
    
    if (n_good1+n_good2+n_good3+n_good4=4){
        draw_text(xx+1521,yy+501,"Equip!");
        draw_text(xx+1521.5,yy+501.5,"Equip!");
    }
    if (n_good1+n_good2+n_good3+n_good4!=4){
        draw_set_alpha(0.25);
        draw_text(xx+1521,yy+501,"Equip!");
        draw_text(xx+1521.5,yy+501.5,"Equip!");
    }
    draw_set_alpha(1);
    
    
    
}


if (zm=0) and (type=5) and (instance_exists(obj_controller)){// Promoting
    // draw_sprite(spr_popup,0,xx+112,yy+112);
    draw_set_color(0);draw_rectangle(xx+1006,yy+143,xx+1577,yy+518,0);
    
    draw_set_font(fnt_40k_14b);
    draw_set_halign(fa_center);
    draw_set_color(c_gray);
    draw_text(xx+1292,yy+145,"Promoting");
    
    draw_set_font(fnt_40k_12);
    var comp;comp="";
    if (company=1) then comp="1st";
    if (company=2) then comp="2nd";
    if (company=3) then comp="3rd";
    if (company&gt;=4) then comp=string(company)+"th";
    if (company&gt;10) then comp="HQ";
    draw_text(xx+1292,yy+170,string(comp)+" Company "+string(unit_role));
    
    draw_set_halign(fa_left);
    draw_set_color(c_gray);
    draw_text(xx+1014,yy+210,"Target Company:");
    
    var check;check=" ";
    draw_set_alpha(1);
    // if (company=0) or (company&gt;10) or (company=1) or (unit_role=obj_ini.role[100,15]) or (unit_role=obj_ini.role[100,14]){
        // draw_set_alpha(0.25);
    if (target_comp=0) or (target_comp&gt;10) then check="x";
    draw_text(xx+1470,yy+210,"HQ ["+string(check)+"]");
    check=" ";
    // }
    
    if ((unit_role!=obj_ini.role[100,17]) or (obj_controller.command_set[1]!=0)) and (unit_role!="Lexicanum") and (unit_role!="Codiciery"){
    if (min_exp&lt;80) then draw_set_alpha(0.25);if (target_comp=1) then check="x";draw_text(xx+1030,yy+230,"1st ["+string(check)+"]");check=" ";draw_set_alpha(1);
    if (min_exp&lt;70) then draw_set_alpha(0.25);if (target_comp=2) then check="x";draw_text(xx+1140,yy+230,"2nd ["+string(check)+"]");check=" ";draw_set_alpha(1);
    if (min_exp&lt;60) then draw_set_alpha(0.25);if (target_comp=3) then check="x";draw_text(xx+1250,yy+230,"3rd ["+string(check)+"]");check=" ";draw_set_alpha(1);
    if (min_exp&lt;50) then draw_set_alpha(0.25);if (target_comp=4) then check="x";draw_text(xx+1360,yy+230,"4th ["+string(check)+"]");check=" ";draw_set_alpha(1);
    if (min_exp&lt;40) then draw_set_alpha(0.25);if (target_comp=5) then check="x";draw_text(xx+1470,yy+230,"5th ["+string(check)+"]");check=" ";draw_set_alpha(1);
    
    if (min_exp&lt;35) then draw_set_alpha(0.25);if (target_comp=6) then check="x";draw_text(xx+1030,yy+250,"6th ["+string(check)+"]");check=" ";draw_set_alpha(1);
    if (min_exp&lt;30) then draw_set_alpha(0.25);if (target_comp=7) then check="x";draw_text(xx+1140,yy+250,"7th ["+string(check)+"]");check=" ";draw_set_alpha(1);
    if (min_exp&lt;25) then draw_set_alpha(0.25);if (target_comp=8) then check="x";draw_text(xx+1250,yy+250,"8th ["+string(check)+"]");check=" ";draw_set_alpha(1);
    if (min_exp&lt;20) then draw_set_alpha(0.25);if (target_comp=9) then check="x";draw_text(xx+1360,yy+250,"9th ["+string(check)+"]");check=" ";draw_set_alpha(1);
    if (target_comp=10) then check="x";draw_text(xx+1470,yy+250,"10th ["+string(check)+"]");check=" ";}
    
    draw_text(xx+1014,yy+290,"Target Role:");
    
    if (target_comp!=-1){
        if (role_name[1]!=""){draw_set_alpha(1);check=" ";if (target_role=1) then check="x";
            if (min_exp&lt;role_exp[1]) then draw_set_alpha(0.25);
            draw_text(xx+1030,yy+310,string(role_name[1])+" ["+string(check)+"]");
        }
        if (role_name[2]!=""){draw_set_alpha(1);check=" ";if (target_role=2) then check="x";
            if (min_exp&lt;role_exp[2]) then draw_set_alpha(0.25);
            draw_text(xx+1200,yy+310,string(role_name[2])+" ["+string(check)+"]");
        }
        if (role_name[3]!=""){draw_set_alpha(1);check=" ";if (target_role=3) then check="x";
            if (min_exp&lt;role_exp[3]) then draw_set_alpha(0.25);
            draw_text(xx+1370,yy+310,string(role_name[3])+" ["+string(check)+"]");
        }
        
        if (role_name[4]!=""){draw_set_alpha(1);check=" ";if (target_role=4) then check="x";
            if (min_exp&lt;role_exp[4]) then draw_set_alpha(0.25);
            draw_text(xx+1030,yy+330,string(role_name[4])+" ["+string(check)+"]");
        }
        if (role_name[5]!=""){draw_set_alpha(1);check=" ";if (target_role=5) then check="x";
            if (min_exp&lt;role_exp[5]) then draw_set_alpha(0.25);
            draw_text(xx+1200,yy+330,string(role_name[5])+" ["+string(check)+"]");
        }
        if (role_name[6]!=""){draw_set_alpha(1);check=" ";if (target_role=6) then check="x";
            if (min_exp&lt;role_exp[6]) then draw_set_alpha(0.25);
            draw_text(xx+1370,yy+330,string(role_name[6])+" ["+string(check)+"]");
        }
    }
    
    draw_set_alpha(1);
    
    draw_text(xx+1014,yy+370,"Required Gear:");
    var gr,tox;gr=0;tox="";
    
    if (target_role&gt;0){
        if (req_armor!=""){
            gr=req_armor_num-have_armor_num;tox="";
            if (gr&gt;0){draw_set_color(255);draw_text(xx+1030,yy+390,string(req_armor)+" (-"+string(gr)+")");}
            if (gr&lt;=0) and (req_armor!=""){draw_set_color(c_gray);draw_text(xx+1030,yy+390,string(req_armor)+" ("+string(have_armor_num)+"-"+string(req_armor_num)+")");}
        }
        
        if (req_gear!=""){
            gr=req_gear_num-have_gear_num;tox="";
            if (gr&gt;0){draw_set_color(255);draw_text(xx+1030,yy+410,string(req_gear)+" (-"+string(gr)+")");}
            if (gr&lt;=0) and (req_gear!=""){draw_set_color(c_gray);draw_text(xx+1030,yy+390,string(req_gear)+" ("+string(have_gear_num)+"-"+string(req_gear_num)+")");}
        }
        if (req_mobi!=""){
            gr=req_mobi_num-have_mobi_num;tox="";
            if (gr&gt;0){draw_set_color(255);draw_text(xx+1030,yy+410,string(req_mobi)+" (-"+string(gr)+")");}
            if (gr&lt;=0) and (req_mobi!=""){draw_set_color(c_gray);draw_text(xx+1030,yy+410,string(req_mobi)+" ("+string(have_mobi_num)+"-"+string(req_mobi_num)+")");}
        }
        
        
        if (req_wep1!=""){
            gr=req_wep1_num-have_wep1_num;tox="";
            if (gr&gt;0){draw_set_color(255);draw_text(xx+1200,yy+390,string(req_wep1)+" (-"+string(gr)+")");}
            if (gr&lt;=0) and (req_wep1!=""){draw_set_color(c_gray);draw_text(xx+1140,yy+390,string(req_wep1)+" ("+string(have_wep1_num)+"-"+string(req_wep1_num)+")");}
        }
        if (req_wep2!=""){
            gr=req_wep2_num-have_wep2_num;tox="";
            if (gr&gt;0){draw_set_color(255);draw_text(xx+1200,yy+410,string(req_wep2)+" (-"+string(gr)+")");}
            if (gr&lt;=0) and (req_wep2!=""){draw_set_color(c_gray);draw_text(xx+1140,yy+410,string(req_wep2)+" ("+string(have_wep2_num)+"-"+string(req_wep2_num)+")");}
        }
        
    }
    
    draw_set_alpha(1);
    
    draw_set_color(c_gray);draw_set_halign(fa_left);
    draw_rectangle(xx+1006,yy+499,xx+1115,yy+518,1);
    draw_set_alpha(0.5);
    draw_rectangle(xx+1007,yy+500,xx+1114,yy+517,1);
    
    if (all_good=1){
        draw_set_alpha(1);
        draw_rectangle(xx+1465,yy+499,xx+1576,yy+518,1);
        draw_set_alpha(0.5);
        draw_rectangle(xx+1466,yy+500,xx+1575,yy+517,1);
    }
    if (all_good!=1){
        draw_set_alpha(0.25);
        draw_rectangle(xx+1465,yy+499,xx+1576,yy+518,1);
        draw_rectangle(xx+1466,yy+500,xx+1575,yy+517,1);
    }
    
    draw_set_alpha(1);draw_set_halign(fa_center);
    draw_text(xx+1061,yy+501,"Cancel");draw_text(xx+1061.5,yy+501.5,"Cancel");
    
    if (all_good=1){
        draw_text(xx+1521,yy+501,"Promote!");
        draw_text(xx+1521.5,yy+501.5,"Promote!");
    }
    if (all_good!=1){
        draw_set_alpha(0.25);
        draw_text(xx+1521,yy+501,"Promote!");
        draw_text(xx+1521.5,yy+501.5,"Promote!");
    }
    draw_set_alpha(1);
    
}



if (zm=0) and (type=5.1) and (instance_exists(obj_controller)){// Transfering
    // draw_sprite(spr_popup,0,xx+112,yy+112);
    draw_set_color(0);draw_rectangle(xx+1006,yy+143,xx+1577,yy+518,0);
    
    draw_set_font(fnt_40k_14b);
    draw_set_halign(fa_center);
    draw_set_color(c_gray);
    draw_text(xx+1292,yy+145,"Transfering");
    
    draw_set_font(fnt_40k_12);
    var comp;comp="";
    if (company=1) then comp="1st";
    if (company=2) then comp="2nd";
    if (company=3) then comp="3rd";
    if (company&gt;=4) then comp=string(company)+"th";
    if (company&gt;10) then comp="HQ";
    draw_text(xx+1292,yy+170,string(comp)+" Company "+string(unit_role));
    
    draw_set_halign(fa_left);
    draw_set_color(c_gray);
    draw_text(xx+1014,yy+210,"Target Company:");
    
    var check;check=" ";
    if (target_comp=0) or (target_comp&gt;10) then check="x";
    draw_text(xx+1470,yy+210,"HQ ["+string(check)+"]");
    check=" ";
    // }
    
    if ((unit_role!=obj_ini.role[100,17]) or (obj_controller.command_set[1]!=0)) and (unit_role!="Lexicanum") and (unit_role!="Codiciery"){
    if (target_comp=1) then check="x";draw_text(xx+1030,yy+230,"1st ["+string(check)+"]");check=" ";
    if (target_comp=2) then check="x";draw_text(xx+1140,yy+230,"2nd ["+string(check)+"]");check=" ";
    if (target_comp=3) then check="x";draw_text(xx+1250,yy+230,"3rd ["+string(check)+"]");check=" ";
    if (target_comp=4) then check="x";draw_text(xx+1360,yy+230,"4th ["+string(check)+"]");check=" ";
    if (target_comp=5) then check="x";draw_text(xx+1470,yy+230,"5th ["+string(check)+"]");check=" ";
    
    if (target_comp=6) then check="x";draw_text(xx+1030,yy+250,"6th ["+string(check)+"]");check=" ";
    if (target_comp=7) then check="x";draw_text(xx+1140,yy+250,"7th ["+string(check)+"]");check=" ";
    if (target_comp=8) then check="x";draw_text(xx+1250,yy+250,"8th ["+string(check)+"]");check=" ";
    if (target_comp=9) then check="x";draw_text(xx+1360,yy+250,"9th ["+string(check)+"]");check=" ";
    if (target_comp=10) then check="x";draw_text(xx+1470,yy+250,"10th ["+string(check)+"]");check=" ";}
    
    draw_set_alpha(1);
    
    draw_set_color(c_gray);draw_set_halign(fa_left);
    draw_rectangle(xx+1006,yy+499,xx+1115,yy+518,1);
    draw_set_alpha(0.5);
    draw_rectangle(xx+1007,yy+500,xx+1114,yy+517,1);
    
    if (company!=target_comp) and (target_comp&gt;=0){
        draw_set_alpha(1);
        draw_rectangle(xx+1465,yy+499,xx+1576,yy+518,1);
        draw_set_alpha(0.5);
        draw_rectangle(xx+1466,yy+500,xx+1575,yy+517,1);
    }
    if (company=target_comp) or (target_comp&lt;0){
        draw_set_alpha(0.25);
        draw_rectangle(xx+1465,yy+499,xx+1576,yy+518,1);
        draw_rectangle(xx+1466,yy+500,xx+1575,yy+517,1);
    }
    
    draw_set_alpha(1);draw_set_halign(fa_center);
    draw_text(xx+1061,yy+501,"Cancel");draw_text(xx+1061.5,yy+501.5,"Cancel");
    
    if (company!=target_comp) and (target_comp&gt;=0){
        draw_text(xx+1521,yy+501,"Transfer!");
        draw_text(xx+1521.5,yy+501.5,"Transfer!");
    }
    if (company=target_comp) or (target_comp&lt;0){
        draw_set_alpha(0.25);
        draw_text(xx+1521,yy+501,"Transfer!");
        draw_text(xx+1521.5,yy+501.5,"Transfer!");
    }
    draw_set_alpha(1);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (type=99){
    var onceh;onceh=0;
    if (obj_controller.zoomed=0) and (onceh=0){obj_controller.zoomed=1;onceh=1;view_visible[0]=false;view_visible[1]=true;obj_cursor.image_xscale=2;obj_cursor.image_yscale=2;}
    if (obj_controller.zoomed=1) and (onceh=0){obj_controller.zoomed=0;onceh=1;view_visible[0]=true;view_visible[1]=false;obj_cursor.image_xscale=1;obj_cursor.image_yscale=1;}
}

if (woopwoopwoop=1){woopwoopwoop=2;exit;}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
