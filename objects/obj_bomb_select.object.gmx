<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
ship_names="";
sh_target=0;
p_target=0;
max_ships=0;
ships_selected=0;
target=0;
target_score=0;
targets=0;
all_sel=0;

bomb=0;
bomb_score=0;
bomb_a=0;
bomb_b=0;
bomb_c=0;


var i;i=-1;
repeat(31){
    i+=1;
    ship[i]="";
    ship_all[i]=0;
    ship_use[i]=0;
    ship_max[i]=0;
    ship_ide[i]=0;
}


menu=0;

attacking=0;
eldar=0;
ork=0;
tau=0;
chaos=0;
tyranids=0;
traitors=0;
imp=0;
pdf=0;
sisters=0;
mechanicus=0;
necrons=0;


with(obj_en_fleet){if (owner=2) or (owner=3) or (owner=4) or (action!="") then instance_deactivate_object(id);}
instance_create(obj_star_select.target.x,obj_star_select.target.y,obj_temp3);
with(obj_fleet){if (point_distance(x,y,obj_temp3.x,obj_temp3.y)&gt;35) then instance_deactivate_object(id);}


var bib;bib=instance_nearest(obj_temp3.x,obj_temp3.y,obj_en_fleet);
if (instance_exists(bib)){
    if (point_distance(obj_temp3.x,obj_temp3.y,bib.x,bib.y)&lt;=35){
        // show_message("Enemy fleets are preventing bombardment!");
        
        scr_popup("Cannot Bombard","Enemy fleets are preventing bombardment!","","");
        
        with(obj_temp3){instance_destroy();}
        instance_activate_object(obj_en_fleet);
        instance_destroy();
        exit;
    }
    with(obj_temp3){instance_destroy();}
}
instance_activate_object(obj_en_fleet);



alarm[1]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;i=-1;
repeat(31){
    i+=1;
    ship[i]="";
    ship_all[i]=0;
    ship_use[i]=0;
    ship_max[i]=0;
    ship_ide[i]=0;
}

max_ships=sh_target.capital_number+sh_target.frigate_number+sh_target.escort_number;


var tump;tump=0;

var i, q, b;i=0;q=0;b=0;
repeat(sh_target.capital_number){
    b+=1;
    if (sh_target.capital[b]!=""){
        i+=1;
        ship[i]=sh_target.capital[i];
        
        ship_use[i]=0;
        tump=sh_target.capital_num[i];
        ship_max[i]=obj_ini.ship_carrying[tump];
        ship_ide[i]=tump;
        
        bomb_a+=3;
        bomb_b+=ship_max[i];bomb_c+=ship_max[i];
    }
}
q=0;
repeat(sh_target.frigate_number){
    q+=1;
    if (sh_target.frigate[q]!=""){
        i+=1;
        ship[i]=sh_target.frigate[q];
        
        ship_use[i]=0;
        tump=sh_target.frigate_num[q];
        ship_max[i]=obj_ini.ship_carrying[tump];
        ship_ide[i]=tump;
        
        bomb_a+=1;
        bomb_b+=ship_max[i];bomb_c+=ship_max[i];
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
max_ships=sh_target.capital_number+sh_target.frigate_number+sh_target.escort_number;


if (sh_target.acted=1) then instance_destroy();

var tump;tump=0;

var i, q, b;i=0;q=0;b=0;
repeat(sh_target.capital_number){
    b+=1;
    if (sh_target.capital[b]!=""){
        i+=1;
        ship[i]=sh_target.capital[i];
        
        ship_use[i]=0;
        tump=sh_target.capital_num[i];
        ship_max[i]=obj_ini.ship_carrying[tump];
        ship_ide[i]=tump;
        
        purge_a+=3;
        purge_b+=ship_max[i];purge_c+=ship_max[i];
    }
}
q=0;
repeat(sh_target.frigate_number){
    q+=1;
    if (sh_target.frigate[q]!=""){
        i+=1;
        ship[i]=sh_target.frigate[q];
        
        ship_use[i]=0;
        tump=sh_target.frigate_num[q];
        ship_max[i]=obj_ini.ship_carrying[tump];
        ship_ide[i]=tump;
        
        purge_a+=1;
        purge_b+=ship_max[i];purge_c+=ship_max[i];
    }
}
q=0;
repeat(sh_target.escort_number){
    q+=1;
    if (sh_target.escort[q]!="") and (obj_ini.ship_carrying[sh_target.escort_num[q]]&gt;0){
        i+=1;
        ship[i]=sh_target.escort[q];
        
        ship_use[i]=0;
        tump=sh_target.escort_num[q];
        ship_max[i]=obj_ini.ship_carrying[tump];
        ship_ide[i]=tump;
        
        purge_b+=ship_max[i];purge_c+=ship_max[i];
    }
}*/

var i;i=-1;
repeat(31){
    i+=1;
    ship[i]="";
    ship_all[i]=0;
    ship_use[i]=0;
    ship_max[i]=0;
    ship_ide[i]=0;
}

max_ships=sh_target.capital_number+sh_target.frigate_number+sh_target.escort_number;

var tump;tump=0;

var i, q, b;i=0;q=0;b=0;
repeat(sh_target.capital_number){
    b+=1;
    if (sh_target.capital[b]!=""){
        i+=1;
        ship[i]=sh_target.capital[i];
        
        ship_use[i]=0;
        tump=sh_target.capital_num[i];
        ship_max[i]=obj_ini.ship_carrying[tump];
        ship_ide[i]=tump;
        
        bomb_a+=3;
        bomb_b+=ship_max[i];bomb_c+=ship_max[i];
    }
}
q=0;
repeat(sh_target.frigate_number){
    q+=1;
    if (sh_target.frigate[q]!=""){
        i+=1;
        ship[i]=sh_target.frigate[q];
        
        ship_use[i]=0;
        tump=sh_target.frigate_num[q];
        ship_max[i]=obj_ini.ship_carrying[tump];
        ship_ide[i]=tump;
        
        bomb_a+=1;
        bomb_b+=ship_max[i];bomb_c+=ship_max[i];
    }
}


eldar=p_target.p_eldar[obj_controller.selecting_planet];
ork=p_target.p_orks[obj_controller.selecting_planet];
tau=p_target.p_tau[obj_controller.selecting_planet];
chaos=p_target.p_chaos[obj_controller.selecting_planet];
tyranids=p_target.p_tyranids[obj_controller.selecting_planet];if (tyranids&lt;5) then tyranids=0;
traitors=p_target.p_traitors[obj_controller.selecting_planet];
necrons=p_target.p_necrons[obj_controller.selecting_planet];

var onceh;onceh=0;
imp=p_target.p_guardsmen[obj_controller.selecting_planet];
if (imp&gt;=50000000) and (onceh=0){imp=6;onceh=1;}
if (imp&lt;50000000) and (imp&gt;=15000000) and (onceh=0){imp=5;onceh=1;}
if (imp&lt;15000000) and (imp&gt;=6000000) and (onceh=0){imp=4;onceh=1;}
if (imp&lt;6000000) and (imp&gt;=1000000) and (onceh=0){imp=3;onceh=1;}
if (imp&lt;1000000) and (imp&gt;=100000) and (onceh=0){imp=2;onceh=1;}
if (imp&lt;100000) and (imp&gt;=2000) and (onceh=0){imp=1;onceh=1;}

onceh=0;
pdf=p_target.p_pdf[obj_controller.selecting_planet];
if (pdf&gt;=50000000) and (onceh=0){pdf=6;onceh=1;}
if (pdf&lt;50000000) and (pdf&gt;=15000000) and (onceh=0){pdf=5;onceh=1;}
if (pdf&lt;15000000) and (pdf&gt;=6000000) and (onceh=0){pdf=4;onceh=1;}
if (pdf&lt;6000000) and (pdf&gt;=1000000) and (onceh=0){pdf=3;onceh=1;}
if (pdf&lt;1000000) and (pdf&gt;=100000) and (onceh=0){pdf=2;onceh=1;}
if (pdf&lt;100000) and (pdf&gt;=2000) and (onceh=0){pdf=1;onceh=1;}

sisters=p_target.p_sisters[obj_controller.selecting_planet];
mechanicus=0;

targets=0;
if (ork&gt;0) then targets+=1;
if (tau&gt;0) then targets+=1;
if (chaos&gt;0) then targets+=1;
if (tyranids&gt;0) then targets+=1;
if (traitors&gt;0) then targets+=1;
if (necrons&gt;0) then targets+=1;

if (imp&gt;0) then targets+=1;
if (pdf&gt;0) then targets+=1;
if (sisters&gt;0) then targets+=1;



target=2;
if (eldar&gt;chaos) and (eldar&gt;traitors) and (eldar&gt;ork) and (eldar&gt;tau) and (eldar&gt;tyranids) and (eldar&gt;necrons) then target=6;
if (ork&gt;chaos) and (ork&gt;traitors) and (ork&gt;eldar) and (ork&gt;tau) and (ork&gt;tyranids) and (ork&gt;necrons) then target=7;
if (tau&gt;chaos) and (tau&gt;traitors) and (tau&gt;eldar) and (tau&gt;ork) and (tau&gt;tyranids) and (tau&gt;necrons) then target=8;
if (tyranids&gt;chaos) and (tyranids&gt;traitors) and (tyranids&gt;ork) and (tyranids&gt;tau) and (tyranids&gt;eldar) and (tyranids&gt;necrons) then target=9;
if (chaos&gt;ork) and (chaos&gt;=traitors) and (chaos&gt;eldar) and (chaos&gt;tau) and (chaos&gt;tyranids) and (chaos&gt;necrons) then target=10;
if (traitors&gt;ork) and (traitors&gt;=chaos) and (traitors&gt;eldar) and (traitors&gt;tau) and (traitors&gt;tyranids) and (traitors&gt;necrons) then target=10;
if (necrons&gt;ork) and (necrons&gt;=chaos) and (necrons&gt;eldar) and (necrons&gt;tau) and (necrons&gt;tyranids) and (necrons&gt;traitors) then target=13;
if (p_target.p_owner[obj_controller.selecting_planet]=8){
    if (pdf&gt;chaos) and (pdf&gt;traitors) and (pdf&gt;eldar) and (pdf&gt;ork) and (pdf&gt;tyranids) and (pdf&gt;tau) and (pdf&gt;necrons) then target=2.5;
}
if (p_target.craftworld=1) then target=6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_saveload</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx, yy;
xx=view_xview[0];
yy=view_yview[0];




with(obj_star_select){instance_deactivate_object(id);}


var i, why, num, onceh;i=-3;why=0;onceh=0;
if (obj_controller.cooldown&lt;=0) then repeat(6){i+=4;
    if (ship[i]!=""){onceh=0;
        if (mouse_x&gt;=xx+47) and (mouse_y&gt;=yy+107+why) and (mouse_x&lt;xx+161) and (mouse_y&lt;yy+122+why){
            if (onceh=0) and (ship_all[i]=0){onceh=1;obj_controller.cooldown=8;ship_all[i]=1;ships_selected+=1;}
            if (onceh=0) and (ship_all[i]=1){onceh=1;obj_controller.cooldown=8;ship_all[i]=0;ships_selected-=1;}
        }
    }
    if (ship[i+1]!=""){onceh=0;
        if (mouse_x&gt;=xx+164) and (mouse_y&gt;=yy+107+why) and (mouse_x&lt;xx+278) and (mouse_y&lt;yy+122+why){
            if (onceh=0) and (ship_all[i+1]=0){onceh=1;obj_controller.cooldown=8;ship_all[i+1]=1;ships_selected+=1;}
            if (onceh=0) and (ship_all[i+1]=1){onceh=1;obj_controller.cooldown=8;ship_all[i+1]=0;ships_selected-=1;}
        }
    }
    if (ship[i+2]!=""){onceh=0;
        if (mouse_x&gt;=xx+281) and (mouse_y&gt;=yy+107+why) and (mouse_x&lt;xx+395) and (mouse_y&lt;yy+122+why){
            if (onceh=0) and (ship_all[i+2]=0){onceh=1;obj_controller.cooldown=8;ship_all[i+2]=1;ships_selected+=1;}
            if (onceh=0) and (ship_all[i+2]=1){onceh=1;obj_controller.cooldown=8;ship_all[i+2]=0;ships_selected-=1;}
        }
    }
    if (ship[i+3]!=""){onceh=0;
        if (mouse_x&gt;=xx+398) and (mouse_y&gt;=yy+107+why) and (mouse_x&lt;xx+512) and (mouse_y&lt;yy+122+why){
            if (onceh=0) and (ship_all[i+3]=0){onceh=1;obj_controller.cooldown=8;ship_all[i+3]=1;ships_selected+=1;}
            if (onceh=0) and (ship_all[i+3]=1){onceh=1;obj_controller.cooldown=8;ship_all[i+3]=0;ships_selected-=1;}
        }
    }
    why+=18;
}





/*
if (target=2) then str=max(imp,pdf);
    if (target=3) then str=mechanicus;
    if (target=5) then str=sisters;
    if (target=6) then str=eldar;
    if (target=7) then str=orks;
    if (target=8) then str=tau;
    if (target=9) then str=tyranids;
    if (target=10) then str=max(traitors,chaos);
    
    if (str=1) then str_string="Minimal Forces";
    if (str=2) then str_string="Sparse Forces";
    if (str=3) then str_string="Moderate Forces";
    if (str=4) then str_string="Numerous Forces";
    if (str=5) then str_string="Very Numerous";
    if (str=6) then str_string="Overwhelming";
    
    draw_text(xx+310,yy+351,"Strength: "+string(str_string));
    draw_text(xx+310.5,yy+351.5,"Strength:");
    
    if (targets&gt;1){
        draw_sprite_ext(spr_arrow,0,xx+309,yy+336,0.75,0.75,0,c_white,1);
        draw_sprite_ext(spr_arrow,1,xx+493,yy+336,0.75,0.75,0,c_white,1);
    }
    */
    
if (targets&gt;1) and (obj_controller.cooldown&lt;=0) and (mouse_y&gt;=yy+336) and (mouse_y&lt;yy+351){
    if (mouse_x&gt;=xx+309) and (mouse_x&lt;xx+332){
        target-=1;obj_controller.cooldown=8;
        if (target=1) then target=10;
        if (target=10) and (traitors+chaos=0) then target=9;
        if (target=9) and (tyranids&lt;5) then target=8;
        if (target=8) and (tau=0) then target=7;
        if (target=7) and (ork=0) then target=6;
        if (target=6) and (eldar=0) then target=5;
        if (target=5) and (sisters=0) then target=3;
        if (target=3) and (mechanicus=0) then target=2.5;
        if (target=2.5) and (pdf=0) then target=2;
        if (target=1.5) then target=2;
        if (target=2) and (imp+pdf=0) then target=10;
    }
    if (mouse_x&gt;=xx+493) and (mouse_x&lt;xx+516){
        obj_controller.cooldown=8;
        
        if (target=2.5) and (pdf=0) then target=3;
        if (target=2.5) and (pdf&gt;0) then target+=0.5;
        
        if (target=1) then target=2;
        // if (target=2) and (imp+pdf=0) then target=3;
        if (target=2) and (imp=0) then target=2.5;
        if (target=2.5) and (pdf=0) then target=3;
        if (target=3) and (mechanicus=0) then target=5;
        if (target=5) and (sisters=0) then target=6;
        if (target=6) and (eldar=0) then target=7;
        if (target=7) and (ork=0) then target=8;
        if (target=8) and (tau=0) then target=9;
        if (target=9) and (tyranids&lt;5) then target=10;
        if (target=10) and (chaos+traitors=0) then target=2;
        if (target=2) and (imp=0) then target=2.5;
        if (target=2.5) and (pdf=0) then target=3;
        // if (target=2) and ((imp=0) or (p_target.p_owner[obj_controller.selecting_planet]=8)) then target=2.5;
    }
}    



var i;i=0;bomb_score=0;
repeat(25){
    i+=1;
    if (ship_all[i]=1){
        if (obj_ini.ship_class[ship_ide[i]]=string(obj_img.ship[1,1])) then bomb_score+=3;
        if (obj_ini.ship_class[ship_ide[i]]=string(obj_img.ship[1,5])) then bomb_score+=5;
        if (obj_ini.ship_class[ship_ide[i]]=string(obj_img.ship[1,2])) then bomb_score+=1;
    }
}


if (obj_controller.cooldown&lt;=0){
    if (mouse_x&gt;=xx+456) and (mouse_y&gt;=yy+378) and (mouse_x&lt;xx+519) and (mouse_y&lt;yy+403){
        obj_controller.cooldown=8;
        with(obj_bomb_select){instance_destroy();}
        instance_destroy();
    }
    if (mouse_x&gt;=xx+76) and (mouse_y&gt;=yy+82) and (mouse_x&lt;xx+102) and (mouse_y&lt;yy+95){
        var onceh;once=0;i=0;
        if (all_sel=0) and (onceh=0){
            repeat(30){i+=1;
                if (ship[i]!="") and (ship_all[i]=0){ship_all[i]=1;ships_selected+=1;}
            }
            onceh=1;all_sel=1;
        }
        if (all_sel=1) and (onceh=0){
            repeat(30){i+=1;
                if (ship[i]!="") and (ship_all[i]=1){ship_all[i]=0;ships_selected-=1;}
            }
            onceh=1;all_sel=0;
        }
    }
}



// 
if (obj_controller.cooldown&lt;=0){// Need to change max_ships to something more meaningful to make sure that SOMETHING is dropping
    if (ships_selected&gt;0) and (mouse_x&gt;=xx+310) and (mouse_y&gt;=yy+378) and (mouse_x&lt;xx+444) and (mouse_y&lt;yy+403){
        obj_controller.cooldown=30;
        
        var str;str=0;
        
        
        
        /*if (target=2) and (p_target.p_owner[obj_controller.selecting_planet]&lt;=5) then str=max(imp,pdf);
        if (target=2) and (p_target.p_owner[obj_controller.selecting_planet]&gt;5) then str=imp;
        if (target=2) and (p_target.p_owner[obj_controller.selecting_planet]&gt;5) then str=imp;*/
        
        if (target=2) then str=imp;
        if (target=2.5) then str=pdf;

        if (target=3) then str=mechanicus;
        if (target=5) then str=sisters;
        if (target=6) then str=eldar;
        if (target=7) then str=ork;
        if (target=8) then str=tau;
        if (target=9) then str=tyranids;
        if (target=10) then str=max(traitors,chaos);
        
        // Start bombardment here
        scr_bomb_world(p_target,obj_controller.selecting_planet,target,bomb_score,str);
    }
}

instance_activate_object(obj_star_select);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var xx, yy;
xx=view_xview[0];
yy=view_yview[0];

// scr_image("purge",0,xx+32,yy+42,497,371);
// draw_sprite(spr_purge_2,0,xx+32,yy+42);

if (max_ships&gt;0)and (instance_exists(obj_star_select)){
    draw_set_halign(fa_center);
    draw_set_font(fnt_fancy);
    draw_set_color(38144);
    
    draw_text_transformed(xx+270,yy+49,"Bombard!",1.5,1.5,0);
    draw_text_transformed(xx+270,yy+80,"Planet "+string(p_target.name)+" "+string(obj_controller.selecting_planet),1,1,0);    
    
    draw_set_halign(fa_left);
    draw_set_font(fnt_menu);
    if (all_sel=0){draw_set_alpha(0.5);draw_text(xx+76,yy+81,"[ ]");}
    if (all_sel=1){draw_set_alpha(1);draw_text(xx+76,yy+81,"[X]");}
    draw_set_alpha(1);
    draw_set_font(fnt_info);
    
    draw_text(xx+310,yy+218,"Current Selection:");
    draw_text(xx+310.5,yy+218.5,"Current Selection:");
    
    
    var hers;
    var influ;
    var poppy;
    hers=p_target.p_heresy[obj_controller.selecting_planet]+p_target.p_heresy_secret[obj_controller.selecting_planet];
    influ=p_target.p_influence[obj_controller.selecting_planet];
    if (p_target.p_large[obj_controller.selecting_planet]=1) then poppy=string(p_target.p_population[obj_controller.selecting_planet])+"B";
    if (p_target.p_large[obj_controller.selecting_planet]=0) then poppy=string(scr_display_number(p_target.p_population[obj_controller.selecting_planet]));
    
    
    
    
    draw_text(xx+310,yy+283,"Pop.: "+string(poppy));
    draw_text(xx+310.5,yy+283.5,"Pop.:");
    
    
    
    if (p_target.sprite_index!=spr_star_hulk){
        draw_text(xx+310,yy+317,"Target: ");
        draw_text(xx+310,yy+317.5,"Target: ");
        
        draw_set_halign(fa_center);
        
        var t_name;t_name="";
        if (target=2) then t_name="Imperial Forces";
        if (target=2.5) and (p_target.p_owner[obj_controller.selecting_planet]=8) then t_name="Gue'la Forces";
        if (target=3) then t_name="Mechanicus";
        if (target=5) then t_name="Ecclesiarchy";
        if (target=6) then t_name="Eldar";
        if (target=7) then t_name="Orks";
        if (target=8) then t_name="Tau";
        if (target=9) then t_name="Tyranids";
        if (target=10) then t_name="Chaos";
        if (target=13) then t_name="Necrons";
        
        draw_text(xx+408,yy+317,string(t_name));
        draw_set_halign(fa_left);
        
        var str, str_string;str=0;str_string="";
        // if (target=2) then str=max(imp,pdf);
        if (target=2) then str=imp;
        if (target=2.5) then str=pdf;
        if (target=3) then str=mechanicus;
        if (target=5) then str=sisters;
        if (target=6) then str=eldar;
        if (target=7) then str=ork;
        if (target=8) then str=tau;
        if (target=9) then str=tyranids;
        if (target=10) then str=max(traitors,chaos);
        if (target=13) then str=necrons;
        
        if (str=1) then str_string="Minimal";
        if (str=2) then str_string="Sparse";
        if (str=3) then str_string="Moderate";
        if (str=4) then str_string="Numerous";
        if (str=5) then str_string="Very Numerous";
        if (str=6) then str_string="Overwhelming";
        
        draw_text(xx+310,yy+351,"Strength: "+string(str_string));
        draw_text(xx+310.5,yy+351.5,"Strength:");
        
        if (targets&gt;1){
            draw_sprite_ext(spr_arrow,0,xx+309,yy+332,0.75,0.75,0,c_white,1);
            draw_sprite_ext(spr_arrow,1,xx+493,yy+332,0.75,0.75,0,c_white,1);
        }
    }
    
    
    draw_set_font(fnt_tiny);
    
    var sel;sel="";
    sel=string(ships_selected)+" ships";
    draw_text_ext(xx+310,yy+234,string(sel),-1,206);
    
    
    draw_set_font(fnt_small);
    draw_set_halign(fa_left);
    
    
    
    
    if (sel!=""){
        draw_set_halign(fa_center);
        draw_set_font(fnt_menu);
        draw_set_color(38144);
        
        draw_rectangle(xx+310,yy+378,xx+444,yy+403,1);draw_set_alpha(0.5);
        draw_rectangle(xx+311,yy+379,xx+443,yy+402,1);draw_set_alpha(1);
        
        draw_text(xx+379,yy+382,"Bombard!");
        draw_set_halign(fa_left);
    }
    
}


draw_set_font(fnt_tiny);
draw_set_halign(fa_left);

var i, why, num;i=-3;why=0;num="";
repeat(6){i+=4;
    if (ship[i]!=""){
        if (ship_all[i]=0) then draw_set_alpha(0.35);
        draw_rectangle(xx+47,yy+107+why,xx+161,yy+122+why,1);
        num=string_delete(ship[i],20,999);
        draw_text(xx+49,yy+109+why,string(num));
        draw_set_alpha(1);
    }
    if (ship[i+1]!=""){
        if (ship_all[i+1]=0) then draw_set_alpha(0.35);
        draw_rectangle(xx+164,yy+107+why,xx+278,yy+122+why,1);
        num=string_delete(ship[i+1],20,999);
        draw_text(xx+166,yy+109+why,string(num));
        draw_set_alpha(1);
    }
    if (ship[i+2]!=""){
        if (ship_all[i+2]=0) then draw_set_alpha(0.35);
        draw_rectangle(xx+281,yy+107+why,xx+395,yy+122+why,1);
        num=string_delete(ship[i+2],20,999);
        draw_text(xx+283,yy+109+why,string(num));
        draw_set_alpha(1);
    }
    if (ship[i+3]!=""){
        if (ship_all[i+3]=0) then draw_set_alpha(0.35);
        draw_rectangle(xx+398,yy+107+why,xx+512,yy+122+why,1);
        num=string_delete(ship[i+3],20,999);
        draw_text(xx+400,yy+109+why,string(num));
        draw_set_alpha(1);
    }
    why+=18;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
