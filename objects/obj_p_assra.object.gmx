<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_assault_ram</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>obj_p_small</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_xscale=0.5;
image_yscale=0.5;

origin=0;
target=0;
cooldown=0;
board_cooldown=0;
hp=9999;
boarders=0;
boarders_dead=0;
boarding=false;
firstest=0;
apothecary=0;
apothecary_had=0;
experience=0;

action="goto";

// Settings
damage=false;
plasma_bomb=false;
steal=false;

if (obj_controller.command_set[20]=1) then damage=true;
if (obj_controller.command_set[21]=1) then plasma_bomb=true;
if (obj_controller.command_set[22]=1) then steal=true;

// 


test=false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

// Cycle through boarders, remove the really dead ones


/*var i, cmp, shi;
i=0;cmp=0;shi=999;


var clean;i=-1;
repeat(30){i+=1;clean[i]=0;}
*/


// obj_controller.marines=0;
// obj_controller.command=0;


var co,i,o;
co=0;i=0;o=0;


o=0;repeat(20){o+=1;
    co=origin.board_co[o];i=origin.board_id[o];
    
    if (obj_ini.hp[co,i]&lt;=-15) and (obj_ini.race[co,i]=1) and (obj_ini.role[co,i]!=""){var seed_max;seed_max=0;
        if (apothecary&lt;=0){
            if (is_specialist(obj_ini.role[co,i])=true) then obj_fleet.fallen_command+=1;
            if (is_specialist(obj_ini.role[co,i])=false) then obj_fleet.fallen+=1;
            
            if (apothecary_had&gt;0){
                if (obj_ini.race[co,i]=1){
                    var age;age=obj_ini.age[co,i];
                    if (age&lt;=((obj_controller.millenium*1000)+obj_controller.year)-10) and (obj_ini.zygote=0) then seed_max+=1;
                    if (age&lt;=((obj_controller.millenium*1000)+obj_controller.year)-5) then seed_max+=1;
                }
            }
            
            // obj_fleet.marines_lost+=1;
            if (obj_ini.role[co,i]=obj_img.faction_title[1]){obj_controller.alarm[7]=1;if (global.defeat&lt;=1) then global.defeat=1;}
            if (obj_ini.wep1[co,i]="Company Standard") then scr_loyalty("Lost Standard","+");
            if (obj_ini.wep2[co,i]="Company Standard") then scr_loyalty("Lost Standard","+");
            
            obj_ini.race[co,i]=0;obj_ini.loc[co,i]="";obj_ini.name[co,i]="";obj_ini.role[co,i]="";obj_ini.wep1[co,i]="";obj_ini.lid[co,i]=0;
            obj_ini.wep2[co,i]="";obj_ini.armor[co,i]="";obj_ini.gear[co,i]="";obj_ini.hp[co,i]=100;obj_ini.chaos[co,i]=0;obj_ini.experience[co,i]=0;
            obj_ini.mobi[co,i]="";obj_ini.age[co,i]=0;obj_ini.spe[co,i]="";obj_ini.god[co,i]=0;obj_ini.bio[co,i]=0;
            
            if (obj_fleet.capital+obj_fleet.frigate+obj_fleet.escort&gt;0) then obj_controller.gene_seed+=seed_max;
        }
        if (apothecary&gt;0){obj_ini.hp[co,i]=floor(random_range(1,10))+1;apothecary-=0.5;}
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_angle=direction;
if (cooldown&gt;0) then cooldown-=1;
if (!instance_exists(obj_en_ship)) then exit;

var dist;
if (instance_exists(target)){
    if (target.owner=9) or (target.owner=13){damage=true;plasma_bomb=true;steal=false;}
    if (target.owner!=9) and (target.owner!=13){
        if (obj_controller.command_set[20]=1) then damage=true;
        if (obj_controller.command_set[21]=1) then plasma_bomb=true;
        if (obj_controller.command_set[22]=1) then steal=true;
    }
    
    dist=point_distance(x,y,target.x,target.y);
    
    if (action="goto"){speed=4;
        direction=turn_towards_point(direction,x,y,target.x,target.y,8);
        direction=turn_towards_point(direction,x,y,target.x,target.y,8);
    }
    
    if (instance_exists(target)){
        if (action="goto") and (point_distance(x,y,target.x,target.y)&lt;=16){
            action="unload";
        }
    }
    if (action="unload") and (instance_exists(target)){
        x=target.x;y=target.y;if (boarding=false){boarding=true;board_cooldown=60;action="waiting";}
    }
    if (action="waiting") and (instance_exists(target)){x=target.x;y=target.y;}
    
    // Might change based on chapter settings
}

if (action="return"){speed=4;
    direction=turn_towards_point(direction,x,y,origin.x,origin.y,8);
    direction=turn_towards_point(direction,x,y,origin.x,origin.y,8);
}
if (action="return") and (point_distance(x,y,origin.x,origin.y)&lt;=16){
    speed=0;action="sdagsdagasdgsdag";x=-500;y=-500;
}


if (action="goto") and (!instance_exists(target)){boarding=false;
    with(obj_en_ship){if (size=1) then y-=6000;}
    target=instance_nearest(x,y,obj_en_ship);action="goto";
    if (target.size=1) then action="return";
    with(obj_en_ship){if (size=1) then y+=6000;}
}
if (boarding=true) and (!instance_exists(target)){boarding=false;
    if (steal=true){action="sdagdsgdasg";x=-500;y=-500;}
    if (steal=false){
        if (obj_controller.command_set[23]=1) and (instance_exists(obj_en_ship)){
            with(obj_en_ship){if (size=1) then y-=6000;}
            target=instance_nearest(x,y,obj_en_ship);action="goto";
            if (target.size=1) then action="return";
            with(obj_en_ship){if (size=1) then y+=6000;}
        }
        if (obj_controller.command_set[24]=1) or (!instance_exists(obj_en_ship)) then action="return";
    }
}

if (boarding=true) and (board_cooldown&gt;=0) and (instance_exists(target)) and (instance_exists(origin)){
    board_cooldown-=1;

    if (board_cooldown=0){board_cooldown=60;
        var o,challenge,difficulty,roll1,roll2,attack,arp,wep,ac,dr,co,i,hits,hurt,damaged_ship;
        o=firstest-1;difficulty=50;challenge=0;roll1=0;roll2=0;attack=0;arp=0;wep="";hits=0;hurt=0;damaged_ship=0;
        co=0;i=0;ac=0;dr=1;
        
        repeat(boarders){o+=1;
            if (!instance_exists(target)) then exit;
            
            // show_message(origin);
            // show_message(string(origin.board_co[1]));
        
            co=origin.board_co[o];i=origin.board_id[o];difficulty=50;ac=0;dr=1;
            if (obj_ini.hp[co,i]&gt;0){
                
                // Bonuses
                difficulty+=obj_ini.experience[co,i]/20;
                difficulty+=(1-(target.hp/target.maxhp))*33;
                if (obj_ini.wep1[co,i]=string(obj_img.blade)+"fist") or (obj_ini.wep1[co,i]="Lascutter") then difficulty+=3;
                if (obj_ini.wep2[co,i]=string(obj_img.blade)+"fist") or (obj_ini.wep2[co,i]="Lascutter") then difficulty+=3;
                if (obj_ini.wep1[co,i]="Meltagun") or (obj_ini.wep2[co,i]="Meltagun") then difficulty+=2;
                var g,yea;
                g=0;yea=false;repeat(4){g+=1;if (obj_ini.adv[g]="Boarders") then yea=true;}if (yea=true) then difficulty+=7;
                g=0;yea=false;repeat(4){g+=1;if (obj_ini.adv[g]="Melee Enthusiasts") then yea=true;}if (yea=true) then difficulty+=3;
                g=0;yea=false;repeat(4){g+=1;if (obj_ini.adv[g]="Lightning Warriors") then yea=true;}if (yea=true) then difficulty+=3;
                
                // Penalties
                if (obj_ini.wep1[co,i]="") and (obj_ini.wep2[co,i]="") then difficulty-=10;
                if (obj_ini.wep1[co,i]="") or (obj_ini.wep2[co,i]="") then difficulty-=10;
                if (obj_ini.occulobe=1) then difficulty-=5;
                if (target.owner=2) or ((target.owner=10) and (obj_fleet.csm_exp=0)) then difficulty-=0;// Cultists/Pirates/Humans
                if (target.owner=1) or (target.owner=5) or (target.owner=7) or (target.owner=6) or (target.owner=13) then difficulty-=10;
                if (target.owner=10) and (obj_fleet.csm_exp=1) then difficulty-=20;//       Veteran marines
                if ((target.owner=10) and (obj_fleet.csm_exp=2)) or (target.owner=9) then difficulty-=30;// Daemons, veteran CSM, tyranids
                
                roll1=floor(random(100))+1;
                
                
                if (roll1&lt;=difficulty){// Success
                    if (damage=true) and (steal=false){// Damaging
                        var to_bomb;to_bomb=false;
                        if (plasma_bomb=true) and (obj_ini.gear[co,i]="Plasma Bomb") then to_bomb=true;
                        if (choose(1,2,3,4,5)&lt;4) then to_bomb=false;
                        if (to_bomb=false){target.hp-=7;damaged_ship=max(1,damaged_ship);}
                        if (to_bomb=true){target.hp-=200;damaged_ship=2;obj_ini.gear[co,i]="";}
                    }
                    if (steal=true) and (damage=false){// Stealing
                        var bridge_damage;bridge_damage=0;
                        damaged_ship=max(1,damaged_ship);
                        
                        var we,whi,we1,we2;we="";we1=obj_ini.wep1[co,i];we2=obj_ini.wep2[co,i];whi=0;
                        we1=string_replace(we1,"Master Crafted","");we2=string_replace(we2,"Master Crafted","");
                        
                        bridge_damage=3;
                        we="Eviscerator";if (we1=we) or (we2=we) then bridge_damage=max(bridge_damage,7);
                        we=string(obj_img.blade)+"fist";if (we1=we) or (we2=we) then bridge_damage=max(bridge_damage,7);
                        we="Lascutter";if (we1=we) or (we2=we) then bridge_damage=max(bridge_damage,7);
                        we="Meltagun";if (we1=we) or (we2=we) then bridge_damage=max(bridge_damage,7);
                        we="Power Fist";if (we1=we) or (we2=we) then bridge_damage=max(bridge_damage,6);
                        we=string(obj_img.hammer);if (we1=we) or (we2=we) then bridge_damage=max(bridge_damage,6);
                        we="Plasma Gun";if (we1=we) or (we2=we) then bridge_damage=max(bridge_damage,5);
                        we="Relic Blade";if (we1=we) or (we2=we) then bridge_damage=max(bridge_damage,4);
                        if (string_pos("&amp;",string(obj_ini.wep1[co,i])+string(obj_ini.wep2[co,i]))&gt;0) then bridge_damage=9;
                        
                        target.bridge-=bridge_damage;
                    }
                    if ((target.hp&lt;=0) or (target.bridge&lt;=0)){
                        var husk;husk=instance_create(target.x,target.y,obj_en_husk);
                        
                        if (experience=0){experience=2;
                            if (target.owner=5) or (target.owner=7) or (target.owner=6) or (target.owner=13) then experience+=1;
                            if (target.owner=10) and (obj_fleet.csm_exp=1) then experience+=2;
                            if (target.owner=10) and (obj_fleet.csm_exp=2) then experience+=3;
                            if (target.owner=9) then experience+=3;if (target.bridge&lt;=0) then experience+=2;
                        }
                        
                        with(target){
                            var wh,gud;wh=0;gud=0;
                            repeat(5){wh+=1;if (obj_fleet.enemy[wh]=owner) then gud=wh;}
                            if (size=3) then obj_fleet.en_capital_lost[gud]+=1;
                            if (size=2) then obj_fleet.en_frigate_lost[gud]+=1;
                            if (size=1) then obj_fleet.en_escort_lost[gud]+=1;
                        }
                        
                        husk.sprite_index=target.sprite_index;
                        husk.direction=target.direction;
                        husk.image_angle=target.image_angle;
                        husk.depth=target.depth;
                        husk.image_speed=0;
                        
                        if (instance_exists(target)){
                            if (target.hp&lt;=0) and (target.bridge&gt;0) then repeat(choose(3,4,5)){
                                var explo;explo=instance_create(target.x,target.y,obj_explosion);
                                explo.image_xscale=0.5;explo.image_yscale=0.5;
                                explo.x+=random_range(target.sprite_width*0.25,target.sprite_width*-0.25);
                                explo.y+=random_range(target.sprite_width*0.25,target.sprite_width*-0.25);
                            }
                            // if (target.hp&gt;0) and (target.bridge&lt;=0) then show_message("SHIP CAPTURED");
                            
                            with(target){instance_destroy();}
                        }
                    }
                }
                
                
                if (roll1&gt;difficulty){// FAILURE
                    dr=0.7-((obj_ini.experience[co,i]*obj_ini.experience[co,i])/40000);
                    if (obj_ini.gear[co,i]="Rosarius") then dr-=0.33;
                    if (obj_ini.gear[co,i]="Iron Halo") then dr-=0.33;
                    if (obj_ini.mobi[co,i]="Jump Pack") then dr-=0.1;
                    if (dr&lt;0.25) then dr=0.25;
                    
                    ac=0;
                    if (obj_ini.armor[co,i]="Scout Armor") then ac=8;
                    if (obj_ini.armor[co,i]="MK3 Iron Armor") then ac=24;
                    if (obj_ini.armor[co,i]="MK4 Maximus") then ac=19;
                    if (obj_ini.armor[co,i]="MK6 Corvus") then ac=18;
                    if (obj_ini.armor[co,i]="MK7 Aquila") then ac=18;
                    if (obj_ini.armor[co,i]="MK8 Errant") then ac=19;
                    if (obj_ini.armor[co,i]="Power Armor") then ac=19;
                    if (obj_ini.armor[co,i]="Artificer Armor") then ac=35;
                    if (obj_ini.armor[co,i]=string(obj_img.battlesuit)) then ac=40;
                    if (obj_ini.armor[co,i]="Tartaros") then ac=44;
                    if (obj_ini.armor[co,i]=obj_img.unit[1,6]) then ac=40;
                    if (obj_ini.armor[co,i]="Ork Armor") then ac=15;
                    if (string_count("&amp;",obj_ini.armor[co,i])&gt;0){
                        // Artifact armor
                        if (string_count("Power",obj_ini.armor[co,i])&gt;0) then ac=30;
                        if (string_count("Artificer",obj_ini.armor[co,i])&gt;0) then ac=37;
                        if (string_count(obj_img.battlesuit,obj_ini.armor[co,i])&gt;0) then ac=46;
                        if (string_count(obj_img.unit[1,6],obj_ini.armor[co,i])&gt;0) then ac=44;
                    }
                    if (obj_ini.armor[co,i]!=""){// STC Bonuses
                        if (obj_controller.stc_bonus[1]=5){if (ac&gt;=40) then ac+=2;if (ac&lt;40) then ac+=1;}
                        if (obj_controller.stc_bonus[2]=3){if (ac&gt;=40) then ac+=2;if (ac&lt;40) then ac+=1;}
                    }
                    if (obj_ini.wep1[co,i]="Boarding Shield") then ac+=4;
                    if (obj_ini.wep2[co,i]="Boarding Shield") then ac+=4;
                    if (obj_ini.wep1[co,i]="Storm Shield") then ac+=8;
                    if (obj_ini.wep2[co,i]="Storm Shield") then ac+=8;
                    
                    roll2=floor(random(100))+1;
                    
                    if (target.owner=2) or (target.owner=10) or (target.owner=5){
                        // Make worse for CSM
                        wep="Lasgun";hits=1;
                        if (roll2&lt;=90) then hits=2;
                        if (roll2&lt;=75) then hits=3;
                        if (roll2&lt;=50){wep=string(obj_img.gyro_adj)+" Pistol";hits=1;}
                        if (roll2&lt;=40){wep=string(obj_img.gyro);hits=1;}
                        if (roll2&lt;=30){wep=string(obj_img.gyro);hits=2;}
                        if (roll2&lt;=20){wep="Heavy "+string(obj_img.gyro);hits=1;}
                        if (roll2&lt;=10){wep="Plasma Pistol";hits=1;}
                        if (roll2&lt;=5){wep="Meltagun";hits=1;}
                    }
                    if (target.owner=6){
                        wep="Shuriken Pistol";hits=1;
                        if (roll2&lt;=90) then hits=2;
                        if (roll2&lt;=75) then hits=3;
                        if (roll2&lt;=60){wep="Shuriken Catapult";hits=2;}
                        if (roll2&lt;=50){wep="Shuriken Catapult";hits=3;}
                        if (roll2&lt;=40){wep="Shuriken Catapult";hits=4;}
                        if (roll2&lt;=30){wep="Wraith Cannon";hits=1;}
                        if (roll2&lt;=20){wep="Singing Spear";hits=1;}
                        if (roll2&lt;=10){wep="Meltagun";hits=1;}
                    }
                    if (target.owner=7){
                        wep="Shoota";hits=1;
                        if (roll2&lt;=90) then hits=2;
                        if (roll2&lt;=75) then hits=3;
                        if (roll2&lt;=60) then hits=4;
                        if (roll2&lt;=50){wep="Dakkagun";hits=1;}
                        if (roll2&lt;=40){wep="Big Shoota";hits=1;}
                        if (roll2&lt;=30){wep="Big Shoota";hits=2;}
                        if (roll2&lt;=15){wep="Rokkit";hits=1;}
                    }
                    if (target.owner=8){
                        wep="Pulse Rifle";hits=1;
                        if (roll2&lt;=80) then hits=2;
                        if (roll2&lt;=65) then hits=3;
                        if (roll2&lt;=50) then hits=4;
                        if (roll2&lt;=40){wep="Missile Pod";hits=1;}
                        if (roll2&lt;=30){wep="Burst Rifle";hits=1;}
                        if (roll2&lt;=15){wep="Meltagun";hits=1;}
                    }
                    if (target.owner=9){
                        wep="Flesh Hooks";hits=1;
                        if (roll2&lt;=90) then hits=2;
                        if (roll2&lt;=75) then hits=3;
                        if (roll2&lt;=60){wep="Devourer";hits=2;}
                        if (roll2&lt;=50){wep="Devourer";hits=3;}
                        if (roll2&lt;=40){wep="Devourer";hits=4;}
                        if (roll2&lt;=30){wep="Venom Cannon";hits=1;}
                        if (roll2&lt;=20){wep="Lictor Claws";hits=1;}
                        if (roll2&lt;=10){wep="Zoanthrope Blast";hits=1;}
                    }
                    
                    if (wep="Lasgun"){attack=25;arp=0;}
                    if (wep=string(obj_img.gyro_adj)+" Pistol"){attack=30;arp=0;}
                    if (wep=string(obj_img.gyro)){attack=40;arp=0;}
                    if (wep="Heavy "+string(obj_img.gyro)){attack=120;arp=0;}
                    if (wep="Plasma Pistol"){attack=70;arp=1;}
                    if (wep="Shuriken Pistol"){attack=30;arp=0;}
                    if (wep="Shuriken Catapult"){attack=35;arp=0;}
                    if (wep="Wraithcannon"){attack=80;arp=1;}
                    if (wep="Singing Spear"){attack=120;arp=1;}
                    if (wep="Shoota"){attack=30;arp=0;}
                    if (wep="Big Shoota"){attack=100;arp=0;}
                    if (wep="Dakkagun"){attack=150;arp=0;}
                    if (wep="Rokkit"){attack=100;arp=1;}
                    if (wep="Pulse Rifle"){attack=30;arp=0;}
                    if (wep="Missile Pod"){attack=130;arp=0;}
                    if (wep="Burst Rifle"){attack=160;arp=0;}
                    if (wep="Meltagun"){attack=200;arp=1;}
                    if (wep="Flesh Hooks"){attack=50;arp=0;}
                    if (wep="Devourer"){attack=choose(40,60,80,100);arp=0;}
                    if (wep="Venom Cannon"){attack=150;arp=0;}
                    if (wep="Zoanthrope Blast"){attack=200;arp=1;}
                    if (wep="Lictor Claws"){attack=300;arp=0;}
                
                    
                    // End, do the damage
                    if (arp=1) then hurt=max(0,attack*dr);
                    if (arp=0) then hurt=max(0,(attack*dr)-ac);
                    
                    repeat(hits){obj_ini.hp[co,i]-=hurt;}
                    
                    if (obj_ini.hp[co,i]&lt;=0){boarders_dead+=1;
                        if ((obj_ini.role[co,i]=obj_ini.role[100,15]) or (obj_ini.role[co,i]="Master of Sanctity")) and (obj_ini.gear[co,i]="Narthecium") then apothecary-=1;
                        if ((obj_ini.role[co,i]=obj_ini.role[100,15]) or (obj_ini.role[co,i]="Master of Sanctity")) and (obj_ini.gear[co,i]="Narthecium") then apothecary_had-=1;
                    }
                    
                    // show_message(string(obj_ini.role[co,i])+" "+string(obj_ini.role[co,i])+" hit by "+string(hits)+"x "+string(wep)+", "+string(obj_ini.hp[co,i])+" HP remaining");
                }
            }
            
            
            // board_co[i]=0;board_id[i]=0;board_location[i]=0;board_raft[i]=0;
        }
        
        
        if (experience&gt;0){var o,co,i;o=0;co=0;i=0;
            repeat(boarders){o+=1;var exp_roll;exp_roll=floor(random(150))+1;co=origin.board_co[o];i=origin.board_id[o];
                if (exp_roll&gt;=obj_ini.experience[co,i]) and (obj_ini.experience[co,i]&lt;50) then obj_ini.experience[co,i]+=experience;
                if (exp_roll&gt;=obj_ini.experience[co,i]) and (obj_ini.experience[co,i]&gt;=50) and (obj_ini.experience[co,i]&lt;100) then obj_ini.experience[co,i]+=floor(experience/3);
                if (exp_roll&gt;=obj_ini.experience[co,i]) and (obj_ini.experience[co,i]&gt;=100) and (obj_ini.experience[co,i]&lt;150) then obj_ini.experience[co,i]+=1;
            }
            experience=0;
        }
        
        
        if (damaged_ship=1) and (instance_exists(target)){
            var explo;explo=instance_create(target.x,target.y,obj_explosion);
            explo.image_xscale=0.5;explo.image_yscale=0.5;
            explo.x+=random_range(target.sprite_width*0.25,target.sprite_width*-0.25);
            explo.y+=random_range(target.sprite_width*0.25,target.sprite_width*-0.25);
        }
        if (damaged_ship=2) and (instance_exists(target)){
            repeat(3){
                var explo;explo=instance_create(target.x,target.y,obj_explosion);
                explo.sprite_index=spr_explosion_plas;explo.image_xscale=0.65;explo.image_yscale=0.65;
                explo.x+=random_range(target.sprite_width*0.25,target.sprite_width*-0.25);
                explo.y+=random_range(target.sprite_width*0.25,target.sprite_width*-0.25);
            }
        }
        
        
    }
    
    
}











// if (hp&lt;=0){instance_create(x,y,obj_explosion);instance_destroy();}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_color(38144);
draw_set_font(fnt_info);
draw_set_halign(fa_center);
draw_set_alpha(1);
draw_set_color(0);
draw_text(x,y,string(boarders-boarders_dead));
draw_text(x-1,y-1,string(boarders-boarders_dead));
draw_text(x+1,y+1,string(boarders-boarders_dead));
draw_text(x+1,y,string(boarders-boarders_dead));
draw_set_color(c_white);
draw_text(x,y,string(boarders-boarders_dead));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_fleet.csm_exp</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_fleet.csm_exp</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,11</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
