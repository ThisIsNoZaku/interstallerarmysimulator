<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_battle_block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
unit="";
men=0;
veh=0;
charge=0;
engaged=0;
owner=1;
medi=0;
attacked_dudes=0;
dreads=0;
jetpack_destroy=0;
defenses=0;
highlight=0;
highlight2=0;
highlight3="";
// let="";let=string_delete(obj_ini.psy_powers,2,string_length(obj_ini.psy_powers)-1);let=string_upper(let);
// LET might be different for each marine; need a way of determining this

// show_message(let);
// x determines column; maybe every 10 or so?
// For fortified locations maybe create a wall unit for the player?

var i;i=-1;
repeat(1500){i+=1;
    marine_type[i]="";
    marine_co[i]=0;
    marine_id[i]=0;
    marine_hp[i]=0;
    marine_ac[i]=0;
    marine_exp[i]=0;
    marine_wep1[i]="";
    marine_wep2[i]="";
    marine_armor[i]="";
    marine_gear[i]="";
    marine_mobi[i]="";
    marine_powers[i]="";
    marine_dead[i]=1;
    marine_attack[i]=1;
    marine_ranged[i]=1;
    marine_defense[i]=1;
    marine_casting[i]=0;
    marine_local[i]=0;
    ally[i]=false;
    // 
    // this would be set to the turns remaining
    // so long as &gt;0 would apply an effect
    marine_mshield[i]=0;
    marine_quick[i]=0;
    marine_might[i]=0;
    marine_fiery[i]=0;
    marine_fshield[i]=0;
    marine_iron[i]=0;
    marine_dome[i]=0;
    marine_spatial[i]=0;
    marine_dementia[i]=0;
    // 
    veh_co[i]=0;
    veh_id[i]=0;
    veh_type[i]="";
    veh_hp[i]=0;
    veh_ac[i]=0;
    veh_wep1[i]="";
    veh_wep2[i]="";
    veh_dead[i]=0;
    veh_hp_multiplier[i]=1;
    veh_local[i]=0;
    veh_ally[i]=false;
    veh_ranged[i]=1;
}

i=-1;
repeat(71){i+=1;
    wep[i]="";
    wep_num[i]=0;
    wep_rnum[i]=0;
    combi[i]=0;
    range[i]=0;
    att[i]=0;
    apa[i]=0;
    ammo[i]=-1;
    splash[i]=0;
    wep_owner[i]="";
    wep_solo[i]="";
    wep_title[i]="";
    
    dudes[i]="";
    dudes_num[i]=0;
    dudes_vehicle[i]=0;
}

i=-1;
repeat(61){i+=1;
    lost[i]="";
    lost_num[i]=0;
}

hostile_shots=0;
hostile_shooters=0;
hostile_damage=0;
hostile_weapon="";
hostile_unit="";
hostile_men=0;
hostile_range=0;
hostile_splash=0;



alarm[1]=4;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// if (marine_type[1]!="") then show_message(marine_type[1]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Remove from ships
// Remove from the controller
// Remove from any planetary bodies

// show_message("pnunit alarm 6");

var i;i=0;
repeat(600){i+=1;
    if (marine_dead[i]&gt;0) and (marine_type[i]!="") and (ally[i]=false){
        var man_size;man_size=scr_unit_size(marine_armor[i],marine_type[i],true);
        
        if (obj_ini.wid[marine_co[i],marine_id[i]]&gt;0) then obj_ncombat.world_size+=man_size;
        if (obj_ini.lid[marine_co[i],marine_id[i]]&gt;0) then obj_ini.ship_carrying[obj_ini.lid[marine_co[i],marine_id[i]]]-=man_size;
        // 
        obj_ini.race[marine_co[i],marine_id[i]]=0;obj_ini.loc[marine_co[i],marine_id[i]]="";obj_ini.name[marine_co[i],marine_id[i]]="";
        obj_ini.role[marine_co[i],marine_id[i]]="";obj_ini.wep1[marine_co[i],marine_id[i]]="";obj_ini.lid[marine_co[i],marine_id[i]]=0;
        obj_ini.wid[marine_co[i],marine_id[i]]=2;obj_ini.wep2[marine_co[i],marine_id[i]]="";obj_ini.armor[marine_co[i],marine_id[i]]="";
        obj_ini.gear[marine_co[i],marine_id[i]]="";obj_ini.hp[marine_co[i],marine_id[i]]=100;obj_ini.chaos[marine_co[i],marine_id[i]]=0;
        obj_ini.experience[marine_co[i],marine_id[i]]=0;obj_ini.age[marine_co[i],marine_id[i]]=0;obj_ini.mobi[marine_co[i],marine_id[i]]="";
        obj_ini.mobi[marine_co[i],marine_id[i]]="";obj_ini.spe[marine_co[i],marine_id[i]]="";
    }
    
    
    if (veh_dead[i]&gt;0) and (veh_type[i]!="") and (veh_ally[i]=false){
        var man_size;man_size=scr_unit_size("",veh_type[i],true);
        
        if (obj_ini.veh_wid[veh_co[i],veh_id[i]]&gt;0) then obj_ncombat.world_size+=man_size;
        if (obj_ini.veh_lid[veh_co[i],veh_id[i]]&gt;0) then obj_ini.ship_carrying[obj_ini.veh_lid[veh_co[i],veh_id[i]]]-=man_size;
        
        obj_ini.veh_race[veh_co[i],veh_id[i]]=0;obj_ini.veh_loc[veh_co[i],veh_id[i]]="";obj_ini.veh_name[veh_co[i],veh_id[i]]="";
        obj_ini.veh_role[veh_co[i],veh_id[i]]="";obj_ini.veh_wep1[veh_co[i],veh_id[i]]="";obj_ini.veh_wep2[veh_co[i],veh_id[i]]="";
        obj_ini.veh_upgrade[veh_co[i],veh_id[i]]="";obj_ini.veh_hp[veh_co[i],veh_id[i]]=0;obj_ini.veh_chaos[veh_co[i],veh_id[i]]=0;
        obj_ini.veh_pilots[veh_co[i],veh_id[i]]=0;obj_ini.veh_lid[veh_co[i],veh_id[i]]=0;obj_ini.veh_wid[veh_co[i],veh_id[i]]=2;
    }
    if (marine_dead[i]=0) and (ally[i]=false){
        if (marine_type[i]!=obj_ini.role[100,6]) and (marine_type[i]!="Venerable "+string(obj_ini.role[100,6])){obj_ini.hp[marine_co[i],marine_id[i]]=marine_hp[i];}
        if (marine_type[i]=obj_ini.role[100,6]) or (marine_type[i]="Venerable "+string(obj_ini.role[100,6])){obj_ini.hp[marine_co[i],marine_id[i]]=marine_hp[i]/2;}
    }
    if (veh_dead[i]=0) and (veh_type[i]!="") and (veh_ally[i]=false){obj_ini.veh_hp[veh_co[i],veh_id[i]]=veh_hp[i]/veh_hp_multiplier[i];}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Get Casualties / Lost Equipment</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// 





/*
apothecaries_alive=0;
techmarines_alive=0;
seed_saved=0;
seed_max=0;
units_saved=0;
vehicles_saved=0;
*/

// show_message("pnunit alarm 5; lol casualties");

var i;i=0;

if (obj_ncombat.defeat=0){
    repeat(600){i+=1;
        if (marine_dead[i]=0) and (obj_ncombat.player_max&lt;obj_ncombat.enemy_max) and (ally[i]=false){
            if (obj_ini.experience[marine_co[i],marine_id[i]]&gt;=40) then obj_ini.experience[marine_co[i],marine_id[i]]+=choose(0,0,1);
            if (obj_ini.experience[marine_co[i],marine_id[i]]&gt;=20) and (obj_ini.experience[marine_co[i],marine_id[i]]&lt;40) then obj_ini.experience[marine_co[i],marine_id[i]]+=choose(0,1);
            if (obj_ini.experience[marine_co[i],marine_id[i]]&lt;20) then obj_ini.experience[marine_co[i],marine_id[i]]+=1;
            
            if (obj_ncombat.enemy=10) and (obj_ncombat.threat=7){
                if (obj_ini.experience[marine_co[i],marine_id[i]]&gt;=40) then obj_ini.experience[marine_co[i],marine_id[i]]+=choose(2,3,4);
                if (obj_ini.experience[marine_co[i],marine_id[i]]&gt;=20) and (obj_ini.experience[marine_co[i],marine_id[i]]&lt;40) then obj_ini.experience[marine_co[i],marine_id[i]]+=choose(4,6,8);
                if (obj_ini.experience[marine_co[i],marine_id[i]]&lt;20) then obj_ini.experience[marine_co[i],marine_id[i]]+=10;
            }
            
            if (marine_type[i]="Lexicanum") or (marine_type[i]="Codiciery") or (marine_type[i]=obj_ini.role[100,17]) then scr_powers_new(marine_co[i],marine_id[i]);
            // Need some kind of report here
        }
        
        if (marine_type[i]!="") and (marine_dead[i]=1) and (ally[i]=false){
            if (marine_type[i]=obj_img.faction_title[1]){
                if (obj_ncombat.apothecaries_alive&gt;0){
                    obj_ncombat.apothecaries_alive-=0.5;
                    marine_hp[i]+=2;marine_dead[i]=0;
                    obj_ncombat.units_saved+=1;                
                }
            }
            
            if (marine_type[i]!=obj_img.faction_title[1]) and (marine_type[i]!=""){
                if (obj_ncombat.apothecaries_alive&gt;0){
                    obj_ncombat.apothecaries_alive-=0.5;
                    marine_hp[i]+=2;marine_dead[i]=0;
                    obj_ncombat.units_saved+=1;
                    // show_message(string(marine_type[i])+" is saved by an apothecary");
                }
            }
        }
        
        if (veh_type[i]!="") and (veh_dead[i]=1) and (obj_controller.stc_bonus[3]=4) and (veh_ally[i]=false){
            var rand1, survival;onceh=0;
            survival=20;rand1=floor(random(100))+1;
            if (rand1&lt;=survival) and (veh_dead[i]!=2){
                veh_hp[i]=10;veh_dead[i]=0;
                obj_ncombat.vehicles_saved+=1;
            }
        }
        if (veh_type[i]!="") and (veh_dead[i]=1) and (veh_ally[i]=false){
            if (obj_ncombat.techmarines_alive&gt;0){
                obj_ncombat.techmarines_alive-=0.5;
                veh_hp[i]=10;veh_dead[i]=0;
                obj_ncombat.vehicles_saved+=1;
            }
        }
    }
}

i=0;

repeat(600){i+=1;
    if (marine_dead[i]=0) and (marine_type[i]="Death Company"){
        obj_ini.role[marine_co[i],marine_id[i]]="Death Company";
    }
    if (marine_dead[i]=0) and (obj_ncombat.mucranoid=1) and (ally[i]=false){
        var muck;muck=floor(random(200))+1;
        if (muck=50){
            if (marine_armor[i]="MK6 Corvus"){obj_ini.armor[marine_co[i],marine_id[i]]="";obj_ncombat.mucra[marine_co[i]]=1;obj_ncombat.slime+=1;}
            if (marine_armor[i]="MK7 Aquila"){obj_ini.armor[marine_co[i],marine_id[i]]="";obj_ncombat.mucra[marine_co[i]]=1;obj_ncombat.slime+=1;}
            if (marine_armor[i]="MK8 Errant"){obj_ini.armor[marine_co[i],marine_id[i]]="";obj_ncombat.mucra[marine_co[i]]=1;obj_ncombat.slime+=1;}
            if (marine_armor[i]="Power Armor"){obj_ini.armor[marine_co[i],marine_id[i]]="";obj_ncombat.mucra[marine_co[i]]=1;obj_ncombat.slime+=1;}
        }
    }
    
    if (ally[i]=false){
        if (marine_dead[i]=0) and (obj_ini.gear[marine_co[i],marine_id[i]]="Plasma Bomb") and (obj_ncombat.defeat=0) and (string_count("mech",obj_ncombat.battle_special)=0){
            if (obj_ncombat.plasma_bomb=0) and (obj_ncombat.enemy=13) and (obj_ncombat.battle_object.p_feature[obj_ncombat.battle_id]="Awakened Necron Tomb|"){
                if (((obj_ncombat.battle_object.p_necrons[obj_ncombat.battle_id]-2)&lt;3) and (obj_ncombat.dropping!=0)) or ((obj_ncombat.battle_object.p_necrons[obj_ncombat.battle_id]-1)&lt;3){
                    obj_ncombat.plasma_bomb+=1;obj_ini.gear[marine_co[i],marine_id[i]]="";
                }
            }
        }
        if (marine_dead[i]=0) and (obj_ini.gear[marine_co[i],marine_id[i]]="Exterminatus") and (obj_ncombat.dropping!=0) and (obj_ncombat.defeat=0){
            if (obj_ncombat.exterminatus=0){
                obj_ncombat.exterminatus+=1;obj_ini.gear[marine_co[i],marine_id[i]]="";
            }
            // obj_ncombat.exterminatus+=1;scr_add_item("Exterminatus",1);
            // obj_ini.gear[marine_co[i],marine_id[i]]="";
        }
    }
    
    var destroy;destroy=0;
    if ((marine_dead[i]&gt;0) or (obj_ncombat.defeat!=0)) and (marine_type[i]!="") and (ally[i]=false){
        
    
    
    
        var comm;comm=false;
        if (marine_type[i]=obj_img.faction_title[1]) then comm=true;
        if (marine_type[i]="Master of Sanctity") then comm=true;
        if (marine_type[i]="Master of the Apothecarion") then comm=true;
        if (marine_type[i]="Chief "+string(obj_ini.role[100,17])) then comm=true;
        if (marine_type[i]="Forge Master") then comm=true;
        if (marine_type[i]=obj_ini.role[100,17]) then comm=true;
        if (marine_type[i]=obj_ini.role[100,14]) then comm=true;
        if (marine_type[i]=obj_ini.role[100,15]) then comm=true;
        if (marine_type[i]=obj_ini.role[100,16]) then comm=true;
        if (marine_type[i]=obj_ini.role[100,6]) then comm=true;
        if (marine_type[i]=obj_ini.role[100,5]) then comm=true;
        if (marine_type[i]="Codiciery") then comm=true;
        if (marine_type[i]="Lexicanum") then comm=true;
        if (marine_type[i]=string(obj_ini.role[100,17])+" Aspirant") then comm=true;
        if (marine_type[i]=string(obj_ini.role[100,14])+" Aspirant") then comm=true;
        if (marine_type[i]=string(obj_ini.role[100,15])+" Aspirant") then comm=true;
        if (marine_type[i]=string(obj_ini.role[100,16])+" Aspirant") then comm=true;
        if (marine_type[i]="Venerable "+string(obj_ini.role[100,6])) then comm=true;
        // if (obj_ini.race[cah,ed]=1) then obj_controller.marines-=1;
        if (comm=false) then obj_ncombat.final_deaths+=1;
        if (comm=true) then obj_ncombat.final_command_deaths+=1;
    
    
        if (comm=true){
            var recent;recent=true;
            if (marine_type[i]=string(obj_ini.role[100,17])+" Aspirant") then recent=false;
            if (marine_type[i]=string(obj_ini.role[100,14])+" Aspirant") then recent=false;
            if (marine_type[i]=string(obj_ini.role[100,15])+" Aspirant") then recent=false;
            if (marine_type[i]=string(obj_ini.role[100,16])+" Aspirant") then recent=false;
            if (marine_type[i]="Venerable "+string(obj_ini.role[100,6])) then recent=false;
            if (marine_type[i]="Codiciery") then recent=false;
            if (marine_type[i]="Lexicanum") then recent=false;
            if (recent=true) then scr_recent("death_"+string(marine_type[i]),string(obj_ini.name[marine_co[i],marine_id[i]]),marine_co[i]);
        }
    
        
        // obj_ncombat.final_deaths+=1;
        
        // show_message("ded; increase final deaths");
        
        if (obj_controller.blood_debt=1){
            if (obj_ini.role[marine_co[i],marine_id[i]]!=obj_ini.role[100,12]) then obj_controller.penitent_current+=4;
            if (obj_ini.role[marine_co[i],marine_id[i]]=obj_ini.role[100,12]) then obj_controller.penitent_current+=2;
            obj_controller.penitent_turn=0;
            obj_controller.penitent_turnly=0;
        }
        
        if  (obj_ini.race[marine_co[i],marine_id[i]]=1){
            var age;age=obj_ini.age[marine_co[i],marine_id[i]];
            if (age&lt;=((obj_controller.millenium*1000)+obj_controller.year)-10) and (obj_ini.zygote=0) then obj_ncombat.seed_max+=1;
            if (age&lt;=((obj_controller.millenium*1000)+obj_controller.year)-5) then obj_ncombat.seed_max+=1;
        }
        
        var last,o;last=0;o=0;
        repeat(50){
            if (last=0){
                o+=1;
                if (obj_ncombat.post_unit_lost[o]=marine_type[i]){last=1;obj_ncombat.post_units_lost[o]+=1;}
                if (obj_ncombat.post_unit_lost[o]="") and (last=0){last=o;obj_ncombat.post_unit_lost[o]=marine_type[i];obj_ncombat.post_units_lost[o]=1;}
            }
        }
        
        // Determine which companies to crunch
        obj_ncombat.crunch[marine_co[i]]=1;
        
        destroy=1;
    }
        
    if (marine_armor[i]="") and (marine_wep1[i]="") and (marine_wep2[i]="") and (marine_gear[i]="") and (marine_mobi[i]="") and (marine_type[i]!="") then destroy=2;
    
    if (destroy&gt;0) and (marine_type[i]!="") and (ally[i]=false){// 135
        var wah,artif;wah=0;artif=false;
        repeat(5){wah+=1;artif=false;
            var eqp_chance, dece;
            eqp_chance=50;dece=floor(random(100))+1;
            if (obj_ncombat.attacker=1) then eqp_chance-=10;
            if (obj_ncombat.dropping=1) then eqp_chance-=20;
            if (obj_ncombat.dropping=1) and (obj_ncombat.defeat=1) then dece=9999;
            if (marine_dead[i]=2) or (destroy=2) then dece=9999;
            if (obj_ini.race[marine_co[i],marine_id[i]]!=1) then dece=9999;
            
            // if (wah=1){show_message(obj_ini.armor[marine_co[i],marine_id[i]]);}
            
            if (wah=1) and (obj_ini.armor[marine_co[i],marine_id[i]]!=""){
                if (marine_armor[i]=string(obj_img.battlesuit)) or (marine_armor[i]="Tartaros") then eqp_chance+=30;
                if (string_count("&amp;",marine_armor[i])&gt;0){eqp_chance=90;artif=true;}
                if (dece&gt;eqp_chance){
                    var last,o;last=0;o=0;
                    repeat(50){
                        if (last=0){
                            o+=1;artif=false;
                            if (obj_ncombat.post_equipment_lost[o]=marine_armor[i]){last=1;obj_ncombat.post_equipments_lost[o]+=1;artif=true;}
                            if (obj_ncombat.post_equipment_lost[o]="") and (last=0){last=o;obj_ncombat.post_equipment_lost[o]=marine_armor[i];obj_ncombat.post_equipments_lost[o]=1;artif=true;}
                            if (artif=true) then obj_ncombat.post_equipment_lost[o]=clean_tags(obj_ncombat.post_equipment_lost[o]);
                            
                            obj_ini.armor[marine_co[i],marine_id[i]]="";
                            // wep2[0,i]="";armor[0,i]="";gear[0,i]="";mobi[0,i]="";
                        }
                    }
                }
                if (dece&lt;=eqp_chance) then scr_add_item(marine_armor[i],1);
            }
            if (wah=2) and (obj_ini.wep1[marine_co[i],marine_id[i]]!=""){
                if (string_count("&amp;",marine_wep1[i])&gt;0){eqp_chance=90;artif=true;}
                if (marine_wep1[i]="Company Standard") then eqp_chance=99;
                if (marine_dead[i]=2) or (destroy=2) then dece=9999;
                if (obj_ini.race[marine_co[i],marine_id[i]]!=1) then dece=9999;
            
                if (dece&gt;eqp_chance){
                    var last,o;last=0;o=0;
                    repeat(50){
                        if (last=0){
                            o+=1;artif=false;
                            
                            // show_message(string(o)+"]"+string(obj_ncombat.post_equipment_lost[o])+"   "+string(i)+"]"+string(marine_wep1[i]));
                            
                            if (string(obj_ncombat.post_equipment_lost[o])=marine_wep1[i]){last=1;obj_ncombat.post_equipments_lost[o]+=1;artif=true;}
                            if (string(obj_ncombat.post_equipment_lost[o])="") and (last=0){last=o;obj_ncombat.post_equipment_lost[o]=marine_wep1[i];obj_ncombat.post_equipments_lost[o]=1;artif=true;}
                            if (artif=true) then obj_ncombat.post_equipment_lost[o]=clean_tags(obj_ncombat.post_equipment_lost[o]);
                            obj_ini.wep1[marine_co[i],marine_id[i]]="";
                            // wep2[0,i]="";armor[0,i]="";gear[0,i]="";mobi[0,i]="";
                        }
                    }
                }
                if (dece&lt;=eqp_chance) then scr_add_item(marine_wep1[i],1);
            }
            if (wah=3) and (obj_ini.wep2[marine_co[i],marine_id[i]]!=""){
                if (string_count("&amp;",marine_wep2[i])&gt;0){eqp_chance=90;artif=true;}
                if (marine_wep2[i]="Company Standard") then eqp_chance=99;
                if (marine_dead[i]=2) or (destroy=2) then dece=9999;
                if (obj_ini.race[marine_co[i],marine_id[i]]!=1) then dece=9999;
                
                if (dece&gt;eqp_chance){
                    var last,o;last=0;o=0;
                    repeat(50){
                        if (last=0){
                            o+=1;artif=false;
                            if (string(obj_ncombat.post_equipment_lost[o])=marine_wep2[i]){last=1;obj_ncombat.post_equipments_lost[o]+=1;artif=true;}
                            if (string(obj_ncombat.post_equipment_lost[o])="") and (last=0){last=o;obj_ncombat.post_equipment_lost[o]=marine_wep2[i];obj_ncombat.post_equipments_lost[o]=1;artif=true;}
                            if (artif=true) then obj_ncombat.post_equipment_lost[o]=clean_tags(obj_ncombat.post_equipment_lost[o]);
                            obj_ini.wep2[marine_co[i],marine_id[i]]="";
                            // wep2[0,i]="";armor[0,i]="";gear[0,i]="";mobi[0,i]="";
                        }
                    }
                }
                if (dece&lt;=eqp_chance) then scr_add_item(marine_wep2[i],1);
            }
            if (wah=4) and (obj_ini.gear[marine_co[i],marine_id[i]]!=""){
                if (string_count("&amp;",marine_gear[i])&gt;0){eqp_chance=90;artif=true;}
                if (marine_dead[i]=2) or (destroy=2) then dece=9999;
                if (obj_ini.race[marine_co[i],marine_id[i]]!=1) then dece=9999;
                
                if (obj_ini.gear[marine_co[i],marine_id[i]]="Exterminatus"){
                    if (obj_ncombat.defeat=0){
                        dece=0;
                        if (obj_ncombat.dropping!=0) then obj_ncombat.exterminatus+=1;
                    }
                    if (obj_ncombat.defeat!=0) then dece=9999;
                }
                
                if (dece&gt;eqp_chance){
                    var last,o;last=0;o=0;
                    repeat(50){
                        if (last=0){
                            o+=1;artif=false;
                            if (obj_ncombat.post_equipment_lost[o]=marine_gear[i]){last=1;obj_ncombat.post_equipments_lost[o]+=1;artif=true;}
                            if (obj_ncombat.post_equipment_lost[o]="") and (last=0){last=o;obj_ncombat.post_equipment_lost[o]=marine_gear[i];obj_ncombat.post_equipments_lost[o]=1;artif=true;}
                            if (artif=true) then obj_ncombat.post_equipment_lost[o]=clean_tags(obj_ncombat.post_equipment_lost[o]);
                            obj_ini.gear[marine_co[i],marine_id[i]]="";
                            // wep2[0,i]="";armor[0,i]="";gear[0,i]="";mobi[0,i]="";
                        }
                    }
                }
                if (dece&lt;=eqp_chance) then scr_add_item(marine_gear[i],1);
            }
            if (wah=5) and (obj_ini.mobi[marine_co[i],marine_id[i]]!=""){
                if (string_count("&amp;",marine_mobi[i])&gt;0){eqp_chance=90;artif=true;}
                if (marine_dead[i]=2) or (destroy=2) then dece=9999;
                if (obj_ini.race[marine_co[i],marine_id[i]]!=1) then dece=9999;
                
                if (dece&gt;eqp_chance){
                    var last,o;last=0;o=0;
                    repeat(50){
                        if (last=0){
                            o+=1;artif=false;
                            if (obj_ncombat.post_equipment_lost[o]=marine_mobi[i]){last=1;obj_ncombat.post_equipments_lost[o]+=1;artif=true;}
                            if (obj_ncombat.post_equipment_lost[o]="") and (last=0){last=o;obj_ncombat.post_equipment_lost[o]=marine_mobi[i];obj_ncombat.post_equipments_lost[o]=1;artif=true;}
                            if (artif=true) then obj_ncombat.post_equipment_lost[o]=clean_tags(obj_ncombat.post_equipment_lost[o]);
                            obj_ini.mobi[marine_co[i],marine_id[i]]="";
                            // wep2[0,i]="";armor[0,i]="";gear[0,i]="";mobi[0,i]="";
                        }
                    }
                }
                if (dece&lt;=eqp_chance) then scr_add_item(marine_mobi[i],1);
            }
        }
        
        
        
    }
    
    if ((veh_dead[i]=1) or (obj_ncombat.defeat!=0)) and (veh_type[i]!="") and (veh_ally[i]=false){
        obj_ncombat.vehicle_deaths+=1;
        
        var last,o;last=0;o=0;
        repeat(50){
            if (last=0){
                o+=1;
                if (obj_ncombat.post_unit_lost[o]=veh_type[i]){last=1;obj_ncombat.post_units_lost[o]+=1;}
                if (obj_ncombat.post_unit_lost[o]="") and (last=0){last=o;obj_ncombat.post_unit_lost[o]=veh_type[i];obj_ncombat.post_units_lost[o]=1;obj_ncombat.post_unit_veh[o]=1;}
            }
        }
        
        // Determine which companies to crunch
        obj_ncombat.crunch[veh_co[i]]=1;
        
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Get Apothecaries</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// 


var i;i=0;
repeat(600){i+=1;
    if (marine_type[i]!="") and (marine_hp[i]&lt;-3000) and (obj_ncombat.defeat=0){marine_dead[i]=0;marine_hp[i]+=5000;}// For incapitated

    if (marine_mobi[i]="Bike"){// 135 ; 
        var onceh;onceh=0;
        if (marine_hp[i]&gt;0) and (marine_hp[i]&lt;=25) and (onceh=0){marine_hp[i]=1;onceh=1;}
        if (onceh=0) then marine_hp[i]-=25;
    }
    if (marine_gear[i]="Iron Halo"){// 135 ; 
        var onceh;onceh=0;
        if (marine_hp[i]&gt;0) and (marine_hp[i]&lt;=20) and (onceh=0){marine_hp[i]=1;onceh=1;}
        if (onceh=0) then marine_hp[i]-=20;
    }
    if (marine_wep1[i]="Boarding Shield"){// 135 ; 
        var onceh;onceh=0;
        if (marine_hp[i]&gt;0) and (marine_hp[i]&lt;=20) and (onceh=0){marine_hp[i]=1;onceh=1;}
        if (onceh=0) then marine_hp[i]-=20;
    }
    if (marine_wep2[i]="Boarding Shield"){// 135 ; 
        var onceh;onceh=0;
        if (marine_hp[i]&gt;0) and (marine_hp[i]&lt;=20) and (onceh=0){marine_hp[i]=1;onceh=1;}
        if (onceh=0) then marine_hp[i]-=20;
    }
    if (marine_wep1[i]="Storm Shield"){// 135 ; 
        var onceh;onceh=0;
        if (marine_hp[i]&gt;0) and (marine_hp[i]&lt;=30) and (onceh=0){marine_hp[i]=1;onceh=1;}
        if (onceh=0) then marine_hp[i]-=30;
    }
    if (marine_wep2[i]="Storm Shield"){// 135 ; 
        var onceh;onceh=0;
        if (marine_hp[i]&gt;0) and (marine_hp[i]&lt;=30) and (onceh=0){marine_hp[i]=1;onceh=1;}
        if (onceh=0) then marine_hp[i]-=30;
    }
    
    
    
    if (ally[i]=false){
        if (obj_ncombat.dropping=1) and (obj_ncombat.defeat=1) and (marine_dead[i]&lt;2) then marine_dead[i]=1;
        if (obj_ncombat.dropping=0) and (obj_ncombat.defeat=1) and (marine_dead[i]&lt;2){marine_dead[i]=2;marine_hp[i]=-50;}
        
    
        if (marine_type[i]!="") and (obj_ncombat.defeat=1) and (marine_dead[i]&lt;2){marine_dead[i]=1;marine_hp[i]=-50;}
        if (veh_type[i]!="") and (obj_ncombat.defeat=1){veh_dead[i]=1;veh_hp[i]=-200;}
    
        if (marine_type[i]=obj_ini.role[100,15]) and (marine_gear[i]="Narthecium") and (marine_dead[i]=0){
            obj_ncombat.apothecaries_alive+=1;obj_ncombat.apoth+=1;
        }
        if (marine_type[i]=obj_ini.role[100,16]) and (marine_gear[i]="Servo Arms") and (marine_dead[i]=0){
            obj_ncombat.techmarines_alive+=1;obj_ncombat.techma+=1;
        }
        
        
        if (marine_dead[i]&gt;0) and (marine_dead[i]&lt;2) and (marine_hp[i]&gt;-25) and (marine_type[i]!="") and ((obj_ncombat.dropping+obj_ncombat.defeat)!=2){
            var rand1, survival;onceh=0;
            survival=40;if (obj_ncombat.membrane=1) then survival=20;
            rand1=floor(random(100))+1;
            
            if (rand1&lt;=survival) and (marine_dead[i]!=2){
                // show_message(string(marine_type[i])+" mans up#Roll: "+string(rand1)+"#Needed: "+string(survival)+"-");
                marine_dead[i]=0;
                marine_hp[i]=2;
                obj_ncombat.injured+=1;
            }
        }
    }
    
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (obj_ncombat.started=0){
    if (men+dreads+veh=0) then instance_destroy();
    // if (veh+dreads&gt;0) then instance_destroy();
    obj_ncombat.player_forces+=self.men+self.veh+self.dreads;
    obj_ncombat.player_max+=self.men+self.veh+self.dreads;
    
    
    if (men&lt;=4) and (veh=0) and (dreads=0){// Squish leftt
        var leftt;leftt=instance_nearest(x-12,y,obj_pnunit);
        
        /*if (instance_exists(leftt)) and (leftt.men&gt;men){
            var jj,targ_manz;jj=0;targ_manz=leftt.men;
            repeat(700){
                jj+=1;
                
                if (marine_hp[jj]&gt;0) and (marine_gear[jj]="Jump Pack"){
                    targ_manz+=1;men-=1;leftt.men+=1;
                    
                    leftt.marine_type[targ_manz]=marine_type[jj];
                    leftt.marine_co[targ_manz]=marine_co[jj];
                    leftt.marine_id[targ_manz]=marine_id[jj];
                    leftt.marine_hp[targ_manz]=marine_hp[jj];
                    leftt.marine_ac[targ_manz]=marine_ac[jj];
                    leftt.marine_exp[targ_manz]=marine_exp[jj];
                    leftt.marine_wep1[targ_manz]=marine_wep1[jj];
                    leftt.marine_wep2[targ_manz]=marine_wep2[jj];
                    leftt.marine_armor[targ_manz]=marine_armor[jj];
                    leftt.marine_gear[targ_manz]=marine_gear[jj];
                    leftt.marine_mobi[targ_manz]=marine_mobi[jj];
                    leftt.marine_local[targ_manz]=marine_mobi[jj];
                    
                    marine_type[jj]="";
                    marine_co[jj]=0;
                    marine_id[jj]=0;
                    marine_hp[jj]=0;
                    marine_ac[jj]=0;
                    marine_exp[jj]=0;
                    marine_wep1[jj]="";
                    marine_wep2[jj]="";
                    marine_armor[jj]="";
                    marine_gear[jj]="";
                    marine_mobi[jj]="";

                }
            }
            
            leftt.alarm[3]=2;
            instance_destroy();
        
        }*/
    
    }
    
    
    
}

if (obj_ncombat.red_thirst&gt;=2) and (obj_ncombat.battle_over=0){
    if (men&gt;0){
        var raar,r_roll,miss,r_lost;
        raar=0;miss="";r_lost=0;
        
        repeat(men+dreads){
            raar+=1;r_roll=floor(random(1000))+1;
            if (obj_ncombat.player_forces&lt;(obj_ncombat.player_max*0.75)) then r_roll-=8;
            if (obj_ncombat.player_forces&lt;(obj_ncombat.player_max/2)) then r_roll-=10;
            if (obj_ncombat.player_forces&lt;(obj_ncombat.player_max/4)) then r_roll-=24;
            if (obj_ncombat.player_forces&lt;(obj_ncombat.player_max/7)) then r_roll-=104;
            if (obj_ncombat.player_forces&lt;(obj_ncombat.player_max/10)) then r_roll-=350;
            
            
            if (marine_dead[raar]=0) and (marine_type[raar]!="Death Company") and (marine_type[raar]!=obj_img.faction_title[1]) and (r_roll&lt;=4){
                r_lost+=1;marine_type[raar]="Death Company";marine_attack[raar]+=1;marine_defense[raar]=0.75;marine_ranged[raar]=0.75;obj_ncombat.red_thirst+=1;
                if (r_lost=1) then miss+="Battle Brother "+string(obj_ini.name[marine_co[raar],marine_id[raar]])+", ";
                if (r_lost&gt;1) then miss+=string(obj_ini.name[marine_co[raar],marine_id[raar]])+", ";
            }
        }
        if (r_lost&gt;1) then string_replace(miss,"Battle Brother","Battle Brothers");
        
        
        var woo;woo=string_length(miss);
        miss=string_delete(miss,woo-1,2);// remove last
        
        if (string_count(", ",miss)=1){
            /*var woo;woo=string_rpos(", ",miss);
            miss=string_insert(" and",miss,woo+1);*/
            
            miss=string_replace(miss,", "," and ");
        }
        if (string_count(", ",miss)&gt;1){
            var woo;woo=string_rpos(", ",miss);
            
            miss=string_delete(miss,woo-1,3);
            if (r_lost&gt;=3) then miss=string_insert(", and ",miss,woo-1);
            if (r_lost=2) then miss=string_insert(" and ",miss,woo-1);
        }
        
        
        if (r_lost=1) then miss+=" has been lost to the Red Thirst!";
        if (r_lost&gt;1) then miss+=" have been lost to the Red Thirst!";
        
        if (r_lost&gt;0){
            obj_ncombat.newline=miss;
            obj_ncombat.newline_color="red";obj_ncombat.timer_pause=2;with(obj_ncombat){scr_newtext();}
        }
    }
}



if (obj_ncombat.started&gt;=1){
    // Assault jump here
    
    // instance_deactivate_object(obj_cursor);
    
    /*
    var jump1,jump2,jumps;jump1=0;jump2=0;jumps=0;
    jump1=instance_nearest(x+20,y,obj_pnunit);
    jump2=string(marine_mobi);
    if (string_count("Jump Pack",jump2)&gt;0){
        if (collision_point(jump1.x+10,jump1.y,obj_enunit,0,1)) and (jump1.id!=self.id) and (jump1.men&gt;0){
            var jj,targ_manz;jj=0;targ_manz=jump1.men;
            repeat(700){
                jj+=1;
                
                if (marine_hp[jj]&gt;0) and (marine_gear[jj]="Jump Pack"){
                    targ_manz+=1;jumps+=1;men-=1;jump1.men+=1;
                    
                    jump1.marine_type[targ_manz]=marine_type[jj];
                    jump1.marine_co[targ_manz]=marine_co[jj];
                    jump1.marine_id[targ_manz]=marine_id[jj];
                    jump1.marine_hp[targ_manz]=marine_hp[jj];
                    jump1.marine_ac[targ_manz]=marine_ac[jj];
                    jump1.marine_exp[targ_manz]=marine_exp[jj];
                    jump1.marine_wep1[targ_manz]=marine_wep1[jj];
                    jump1.marine_wep2[targ_manz]=marine_wep2[jj];
                    jump1.marine_armor[targ_manz]=marine_armor[jj];
                    jump1.marine_gear[targ_manz]=marine_gear[jj];
                    jump1.marine_mobi[targ_manz]=marine_mobi[jj];
                    jump1.marine_powers[targ_manz]=marine_powers[jj];
                    
                    marine_type[jj]="";
                    marine_co[jj]=0;
                    marine_id[jj]=0;
                    marine_hp[jj]=0;
                    marine_ac[jj]=0;
                    marine_exp[jj]=0;
                    marine_wep1[jj]="";
                    marine_wep2[jj]="";
                    marine_armor[jj]="";
                    marine_gear[jj]="";
                    marine_mobi[jj]="";
                    marine_powers[jj]="";
                }
            }
            
            
            if (jumps&gt;0){
                obj_ncombat.newline="Jump-Packs rev and scream as "+(string(jumps)+" Marines take to the air, jumping towards the front lines.");
                obj_ncombat.newline_color="purple";obj_ncombat.timer_pause=2;with(obj_ncombat){scr_newtext();}
            }
            with(obj_pnunit){
                if (alarm[0]&gt;-1) then alarm[0]+=4;
                if (alarm[1]&gt;-1) then alarm[1]+=4;
            }
        }
    }
    // instance_activate_object(obj_cursor);
    
    if (men+veh+dreads&lt;=0){jetpack_destroy=1;// instance_destroy();
        x=-100;instance_deactivate_object(id);
    }
    
    */
    
    // Should probably have the option under deployment to say 'Should Assault Marines enter the fray with vehicles?'   [ ]
}


// Right here execute some sort of check- if left is open, and engaged, and enemy is only vehicles, and no weapons to hurt them...

if (instance_exists(obj_enunit)){
    if (collision_point(x+10,y,obj_enunit,0,1)) and (!collision_point(x-10,y,obj_pnunit,0,1)){
        var neares;neares=instance_nearest(x+10,y,obj_enunit);
        
        if (neares.men=0) and (neares.veh&gt;0){
            var norun;
            norun=0;
            
            var i;i=0;
            repeat(20){i+=1;
                if (apa[i]&gt;=30) then norun=1;
            }
            
            
            if (norun=0){
                x-=10;engaged=0;
            }
        
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Cleanup</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if (defenses=1){
    var i;i=0;
    
    i+=1;wep[i]="Heavy "+string(obj_img.gyro)+" Emplacement";wep_num[i]=round(obj_ncombat.player_defenses/2);
    range[i]=99;att[i]=160*wep_num[i];apa[i]=0;ammo[i]=-1;splash[i]=1;
    
    i+=1;wep[i]="Missile Launcher Emplacement";wep_num[i]=round(obj_ncombat.player_defenses/2);
    range[i]=99;att[i]=200*wep_num[i];apa[i]=120*wep_num[i];ammo[i]=-1;splash[i]=1;
    
    i+=1;wep[i]="Missile Silo";wep_num[i]=min(30,obj_ncombat.player_silos);
    range[i]=99;att[i]=350*wep_num[i];apa[i]=200*wep_num[i];ammo[i]=-1;splash[i]=1;
    
    var rightest;rightest=instance_nearest(2000,240,obj_pnunit);
    if (rightest.id=self.id) then instance_destroy();
}
if (defenses=1) then exit;


var i,g;i=0;g=0;men=0;veh=0;dreads=0;
repeat(20){i+=1;
    // dudes[i]="";
    dudes_num[i]=0;
    // dudes_vehicle[i]=0;
    att[i]=0;apa[i]=0;wep_num[i]=0;wep_rnum[i]=0;
    // if (wep_owner[i]!="") and (wep_num[i]&gt;1) then wep_owner[i]="assorted";// What if they are using two ranged weapons?  Hmmmmm?
}i=0;

i=0;
repeat(60){i+=1;
    lost[i]="";
    lost_num[i]=0;
}

var dreaded;dreaded=false;

repeat(700){g+=1;
    if (marine_casting[g]&gt;=0) then marine_casting[g]=0;
    if (marine_casting[g]&lt;0) then marine_casting[g]+=1;
    
    if ((marine_id[g]&gt;0) or (ally[g]=true)) and (marine_hp[g]&gt;0) then marine_dead[g]=0;
    if ((marine_id[g]&gt;0) or (ally[g]=true)) and (marine_hp[g]&gt;0) and (marine_dead[g]!=1){
        if (marine_hp[g]&gt;0) then men+=1;
        
        
        if (marine_type[g]=obj_ini.role[100,6]) or (marine_type[g]="Venerable "+obj_ini.role[100,6]) and (marine_hp[g]&gt;0){dreads+=1;dreaded=true;}
        if (marine_mobi[g]="Bike") then scr_special_weapon("Twin Linked "+string(obj_img.gyro)+"s",g,true);
        
        
        if (marine_mobi[g]!="Bike") and (marine_mobi[g]!=""){if (string_count("Jump Pack",marine_mobi[g])&gt;0) then scr_special_weapon("hammer_of_wrath",g,false);}
        
        
        /*var j,good,open;j=0;good=0;open=0;
        if (string_count("Jump Pack",marine_mobi[g])&gt;0) then repeat(20){j+=1;
            if (wep[j]="") and (open=0){open=j;}
            if (wep[j]="hammer_of_wrath"){good=1;scr_weapon("hammer_of_wrath","hammer_of_wrath",true,g,false,"","");}
            if (good=0) and (open!=0){wep[open]="hammer_of_wrath";good=1;scr_weapon("hammer_of_wrath","hammer_of_wrath",true,g,false,"","");}
        }*/
        
        
        
        
        if (marine_gear[g]="Servo Arms") then scr_special_weapon("Flamer",g,true);
        if (marine_gear[g]="Master Servo Arms") then scr_special_weapon("Heavy Flamer",g,true);
        
        
        if (marine_casting[g]&gt;-1){
            var cast_dice;cast_dice=floor(random(100))+1;
            
            if (obj_ini.dis[1]="Warp Touched") then cast_dice-=5;
            if (obj_ini.dis[2]="Warp Touched") then cast_dice-=5;
            if (obj_ini.dis[3]="Warp Touched") then cast_dice-=5;
            if (obj_ini.dis[4]="Warp Touched") then cast_dice-=5;
            
            if (marine_type[g]="Lexicanum") and (cast_dice&lt;=20) then marine_casting[g]=1;
            if (marine_type[g]="Codiciery") and (cast_dice&lt;=25) then marine_casting[g]=1;
            if (marine_type[g]=obj_ini.role[100,17]) and (cast_dice&lt;=25) then marine_casting[g]=1;
            if (marine_type[g]="Chief "+string(obj_ini.role[100,17])) and (cast_dice&lt;=80) then marine_casting[g]=1;
            if (marine_type[g]=obj_img.faction_title[1]) and (obj_ncombat.chapter_master_psyker=1){
                if (cast_dice&lt;=66) then marine_casting[g]=1;
                if (obj_ncombat.big_boom&gt;0) and (obj_ncombat.kamehameha=true) then marine_casting[g]=1;
            }
        }
        
        var j,good,open;j=0;good=0;open=0;// Counts the number and types of marines within this object
        repeat(20){j+=1;
            if (dudes[j]="") and (open=0){
                open=j;// Determine if vehicle here
                
                if (dudes[j]="Venerable "+string(obj_ini.role[100,6])) then dudes_vehicle[j]=1;
                if (dudes[j]=obj_ini.role[100,6]) then dudes_vehicle[j]=1;
            }
            if (marine_type[g]=dudes[j]){good=1;dudes_num[j]+=1;}
            if (good=0) and (open!=0){dudes[open]=marine_type[g];dudes_num[open]=1;}
        }
        
        if (marine_wep1[g]!="") and (marine_casting[g]!=1){// Do not add weapons to the roster while casting         
            if (marine_type[g]=obj_img.faction_title[1]) or (obj_ncombat.player_max&lt;=6) then scr_weapon(string(marine_wep1[g]),string(marine_wep2[g]),true,g,dreaded,obj_ini.name[marine_co[g],marine_id[g]],"");
            if ((marine_type[g]!=obj_img.faction_title[1])) and (obj_ncombat.player_max&gt;6) then scr_weapon(string(marine_wep1[g]),string(marine_wep2[g]),true,g,dreaded,"","");
            
            if (marine_wep1[g]="Close Combat Weapon") then scr_special_weapon("CCW Heavy Flamer",g,dreaded);
            if (string_count("UBL",marine_wep1[g])&gt;0) then scr_special_weapon("Underslung "+string(obj_img.gyro),g,false);
            if (string_count("UFL",marine_wep1[g])&gt;0) then scr_special_weapon("Underslung Flamer",g,false);
        }
        if (marine_wep2[g]!="") and (marine_casting[g]!=1){
            if (marine_type[g]=obj_img.faction_title[1]) or (obj_ncombat.player_max&lt;=6) then scr_weapon(string(marine_wep2[g]),string(marine_wep1[g]),true,g,dreaded,obj_ini.name[marine_co[g],marine_id[g]],"");
            if ((marine_type[g]!=obj_img.faction_title[1])) and (obj_ncombat.player_max&gt;6) then scr_weapon(string(marine_wep2[g]),string(marine_wep1[g]),true,g,dreaded,"","");
            
            if (marine_wep2[g]="Close Combat Weapon") then scr_special_weapon("CCW Heavy Flamer",g,dreaded);
            if (string_count("UBL",marine_wep2[g])&gt;0) then scr_special_weapon("Underslung "+string(obj_img.gyro),g,false);
            if (string_count("UFL",marine_wep2[g])&gt;0) then scr_special_weapon("Underslung Flamer",g,false);
        }
    }
    
    if (veh_id[g]&gt;0) and (veh_hp[g]&gt;0) and (veh_dead[g]!=1){
        if (veh_id[g]&gt;0) and (veh_hp[g]&gt;0) then veh_dead[g]=0;
        if (veh_hp[g]&gt;0) then veh+=1;
        
        var j,good,open;j=0;good=0;open=0;// Counts the number and types of marines within this object
        if (veh_dead[g]!=1) then repeat(20){j+=1;
            if (dudes[j]="") and (open=0){open=j;}
            if (veh_type[g]=dudes[j]){good=1;dudes_num[j]+=1;dudes_vehicle[j]=1;}
            if (good=0) and (open!=0){dudes[open]=veh_type[g];dudes_num[open]=1;dudes_vehicle[open]=1;}
        }
        
        var j,good,open;j=0;good=0;open=0;
        if (veh_dead[g]!=1) then repeat(20){j+=1;
            if (veh_wep1[g]!=""){
                if (wep[j]="") and (open=0){open=j;}
                if (veh_wep1[g]=wep[j]){good=1;scr_weapon(string(veh_wep1[g]),string(veh_wep2[g]),false,g,dreaded,"","");}
                if (good=0) and (open!=0){wep[open]=veh_wep1[g];good=1;scr_weapon(string(veh_wep1[g]),string(veh_wep2[g]),false,g,dreaded,"","");}
            }
        }
        j=0;good=0;open=0;
        if (veh_dead[g]!=1) then repeat(20){j+=1;
            if (veh_wep2[g]!=""){
                if (wep[j]="") and (open=0){open=j;}
                if (veh_wep2[g]=wep[j]){good=1;scr_weapon(string(veh_wep2[g]),string(veh_wep1[g]),false,g,dreaded,"","");}
                if (good=0) and (open!=0){wep[open]=veh_wep2[g];good=1;scr_weapon(string(veh_wep2[g]),string(veh_wep1[g]),false,g,dreaded,"","");}
            }
        }
    }
}


// Right here should be retreat- if important units are exposed they should try to hop left




if (dudes_num[1]=0) and (obj_ncombat.started=0){
    instance_destroy();
    exit;
}





if (men+veh=1) and (obj_ncombat.player_forces=1){
    if (men=1) and (veh=0){
        var i,h;i=0;h=0;
        repeat(500){if (h=0){i+=1;if (marine_hp[i]&gt;0) and (marine_dead[i]=0){
            h=marine_hp[i];obj_ncombat.display_p1=h;
            obj_ncombat.display_p1n=string(marine_type[i])+" "+string(obj_ini.name[marine_co[i],marine_id[i]]);}
        }}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Attack</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

// with(obj_enunit){show_message(string(dudes[1])+"|"+string(dudes_num[1])+"|"+string(men+medi)+"|"+string(dudes_hp[1]));}

var rightest,charge,enemy2;charge=0;enemy2=0;// psy=false;


if (instance_number(obj_enunit)!=1){
    obj_ncombat.flank_x=self.x;
    with(obj_enunit){
        if (x&lt;(obj_ncombat.flank_x-20)) then instance_deactivate_object(id);
    }
}

rightest=instance_nearest(1000,y,obj_pnunit);// Right most pnunit
enemy=instance_nearest(0,y,obj_enunit);// Left most enemy
enemy2=enemy;

if (obj_ncombat.attacker=1) or (obj_ncombat.dropping=1){
    if (!collision_point(rightest.x+10,y+1,obj_enunit,0,1)) and (collision_line(x,y+1,x+1000,y,obj_enunit,0,1)){
        x+=10;
    }
    if (self.id!=rightest.id) and (!collision_point(x+10,y,obj_pnunit,0,1)) and (collision_line(x,y,x+1000,y,obj_enunit,0,1)){
        x+=10;
    }
    
    if (!collision_line(x,y,x+1000,y,obj_enunit,0,1)) and (collision_line(x,y,x-1000,y,obj_enunit,0,1)){
        if (!collision_point(x-10,y,obj_pnunit,0,1)) then x-=10;
    }
}

if (!instance_exists(enemy)) then exit;
if (collision_point(x+10,y,obj_enunit,0,1)) or (collision_point(x-10,y,obj_enunit,0,1)) then engaged=1;
if (!collision_point(x+10,y,obj_enunit,0,1)) and (!collision_point(x-10,y,obj_enunit,0,1)) then engaged=0;

var once_only;once_only=0;
var i,dist;i=0;dist=999;
var range_shoot;range_shoot="";
dist=point_distance(x,y,enemy.x,enemy.y)/10;

repeat(700){i+=1;
    if (marine_mshield[i]&gt;0) then marine_mshield[i]-=1;
    if (marine_quick[i]&gt;0) then marine_quick[i]-=1;
    if (marine_might[i]&gt;0) then marine_might[i]-=1;
    if (marine_fiery[i]&gt;0) then marine_fiery[i]-=1;
    if (marine_fshield[i]&gt;0) then marine_fshield[i]-=1;
    if (marine_dome[i]&gt;0) then marine_dome[i]-=1;
    if (marine_spatial[i]&gt;0) then marine_spatial[i]-=1;
}i=0;

if (instance_exists(obj_enunit)) then repeat(60){i+=1;once_only=0;
    enemy=instance_nearest(0,y,obj_enunit);enemy2=enemy;
    if (enemy.men+enemy.veh+enemy.medi&lt;=0){var x5;x5=enemy.x;with(enemy){instance_destroy();}enemy=instance_nearest(0,y,obj_enunit);enemy2=enemy;}

    
    
    if (wep[i]!="") and (range[i]&gt;=dist) and (ammo[i]!=0){
        if (range[i]!=1) and (engaged=0) then range_shoot="ranged";
        if ((range[i]!=floor(range[i])) or (range[i]=1)) and (engaged=1) then range_shoot="melee";
    }
    
    
    
    if (wep[i]!="") and (range_shoot="ranged") and (range[i]&gt;=dist){// Weapon meets preliminary checks
        var ap;ap=0;if (apa[i]&gt;att[i]) then ap=1;// Determines if it is AP or not
        if (wep[i]="Missile Launcher") then ap=1;if (string_count("Lascan",wep[i])&gt;0) then ap=1;
        if (instance_number(obj_enunit)=1) and (obj_enunit.men=0) and (obj_enunit.veh&gt;0) then ap=1;
        
        
        if (instance_exists(enemy)){
            if (obj_enunit.veh&gt;0) and (obj_enunit.men=0) and (apa[i]&gt;10) then ap=1;
            
            if (ap=1) and (once_only=0){// Check for vehicles
                var g,good,enemy2;g=0;good=0;
                
                if (enemy.veh&gt;0){
                    good=scr_target(enemy,"veh");// First target has vehicles, blow it to hell
                    scr_shoot(i,enemy,good,"arp","ranged");
                }
                if (good=0) and (instance_number(obj_enunit)&gt;1){// First target does not have vehicles, cycle through objects to find one that has vehicles
                    var x2;x2=enemy.x;
                    repeat(instance_number(obj_enunit)-1){
                        if (good=0){
                            x2+=10;enemy2=instance_nearest(x2,y,obj_enunit);
                            if (enemy2.veh&gt;0) and (good=0){
                                good=scr_target(enemy2,"veh");// This target has vehicles, blow it to hell
                                scr_shoot(i,enemy2,good,"arp","ranged");once_only=1;
                            }
                        }
                    }
                }
                if (good=0) then ap=0;// Fuck it, shoot at infantry
            }
        }
        
        
        
        
        
        
        if (instance_exists(enemy)) and (once_only=0){
            if (enemy.medi&gt;0) and (enemy.veh=0){
                good=scr_target(enemy,"medi");// First target has vehicles, blow it to hell
                scr_shoot(i,enemy,good,"medi","ranged");
            
                if (good=0) and (instance_number(obj_enunit)&gt;1){// First target does not have vehicles, cycle through objects to find one that has vehicles
                    var x2;x2=enemy.x;
                    repeat(instance_number(obj_enunit)-1){
                        if (good=0){
                            x2+=10;enemy2=instance_nearest(x2,y,obj_enunit);
                            if (enemy2.veh&gt;0) and (good=0){
                                good=scr_target(enemy2,"medi");// This target has vehicles, blow it to hell
                                scr_shoot(i,enemy2,good,"medi","ranged");once_only=1;
                            }
                        }
                    }
                }
                if (good=0) then ap=0;// Next up is infantry
                // Was previously ap=1;
            }
        }
        
        
        
        
        
        if (instance_exists(enemy)){
            if (ap=0) and (once_only=0){// Check for men
                var g,good,enemy2;g=0;good=0;
                
                if (enemy.men+enemy.medi&gt;0){
                    good=scr_target(enemy,"men");// First target has vehicles, blow it to hell
                    scr_shoot(i,enemy,good,"att","ranged");
                }
                if (good=0) and (instance_number(obj_enunit)&gt;1){// First target does not have vehicles, cycle through objects to find one that has vehicles
                    var x2;x2=enemy.x;
                    repeat(instance_number(obj_enunit)-1){
                        if (good=0){
                            x2+=10;enemy2=instance_nearest(x2,y,obj_enunit);
                            if (enemy2.men&gt;0) and (good=0){
                                good=scr_target(enemy2,"men");// This target has vehicles, blow it to hell
                                scr_shoot(i,enemy2,good,"att","ranged");once_only=1;
                            }
                        }
                    }
                }
            }
        }
    }// end ranged
    
    
    if (wep[i]!="") and (range_shoot="melee") and ((range[i]=1) or (range[i]!=floor(range[i]))){// Weapon meets preliminary checks    
        var ap;ap=0;if (apa[i]&gt;att[i]) then ap=1;// Determines if it is AP or not
        
        if (enemy.men=0) and (apa[i]=0) and (att[i]&gt;=80){
            apa[i]=floor(att[i]/2);ap=1;
        }
        
        if (ap=1) and (once_only=0){// Check for vehicles
            var g,good,enemy2;g=0;good=0;
            
            if (enemy.veh&gt;0){
                good=scr_target(enemy,"veh");// First target has vehicles, blow it to hell
                if (range[i]=1) then scr_shoot(i,enemy,good,"arp","melee");
                if (range[i]!=1) then scr_shoot(i,enemy,good,"arp","ranged");
            }
            if (good!=0) then once_only=1;
            if (good=0) and (att[i]&gt;0) then ap=0;// Fuck it, shoot at infantry
        }
        
        if (enemy.veh=0) and (enemy.medi&gt;0) and (once_only=0){// Check for vehicles
            var g,good,enemy2;g=0;good=0;
            
            if (enemy.medi&gt;0){
                good=scr_target(enemy,"medi");// First target has vehicles, blow it to hell
                if (range[i]=1) then scr_shoot(i,enemy,good,"medi","melee");
                if (range[i]!=1) then scr_shoot(i,enemy,good,"medi","ranged");
            }
            if (good!=0) then once_only=1;
            if (good=0) and (att[i]&gt;0) then ap=0;// Fuck it, shoot at infantry
        }
        
        
        
        if (ap=0) and (once_only=0){// Check for men
            var g,good,enemy2;g=0;good=0;
            
            if (enemy.men&gt;0) and (once_only=0){
                // show_message(string(wep[i])+" attacking");
                good=scr_target(enemy,"men");
                if (range[i]=1) then scr_shoot(i,enemy,good,"att","melee");
                if (range[i]&gt;1) then scr_shoot(i,enemy,good,"att","ranged");
            }
            if (good!=0) then once_only=1;
        }
    }
    
    
    
}

instance_activate_object(obj_enunit);

i=0;
if (instance_exists(obj_enunit)) then repeat(700){i+=1;
    if (marine_dead[i]=0) and (marine_casting[i]=1) and (instance_exists(obj_enunit)){
        var let,buvvs,buvvs_num;let="D";
        if (string_count("D0",marine_powers[i])&gt;0) then let="D";
        if (string_count("B0",marine_powers[i])&gt;0) then let="B";
        if (string_count("P0",marine_powers[i])&gt;0) then let="P";
        if (string_count("T0",marine_powers[i])&gt;0) then let="T";
        if (string_count("R0",marine_powers[i])&gt;0) then let="R";
        
        var powerz,buvvs_roll,tha,p;tha=-1;
        powerz=string_count(let,marine_powers[i]);
        p=-1;repeat(20){p+=1;buvvs[p]=-1;}
        if (let="D"){buvvs[1]=2;buvvs[2]=5;buvvs[3]=6;buvvs_num=3;}
        if (let="B"){buvvs[1]=2;buvvs[2]=3;buvvs_num=2;}
        if (let="P"){buvvs[1]=1;buvvs[2]=2;buvvs_num=2;}
        if (let="T"){buvvs[1]=3;buvvs[2]=4;buvvs_num=2;}
        if (let="R"){buvvs[1]=2;buvvs_num=1;}
        
        p=0;repeat(10){p+=1;if (buvvs[p]&gt;powerz-1){buvvs_num-=1;buvvs[p]=-1;}}
        buvvs_roll=floor(random(100))+1;
        
        if (buvvs_roll&lt;=(105-(obj_ncombat.turns*35))) and (obj_ncombat.enemy_forces&gt;=obj_ncombat.player_forces) and (buvvs_num&gt;0){// Cast buffs
        // if (obj_ncombat.turns&lt;2) and (obj_ncombat.enemy_max&gt;=obj_ncombat.player_max) and (buvvs_num&gt;0){
            tha=max(buvvs[floor(random(buvvs_num))+1],buvvs[floor(random(buvvs_num))+1]);
        }
        
        if (buvvs_roll&gt;(105-(obj_ncombat.turns*35))) or (obj_ncombat.enemy_forces&lt;obj_ncombat.player_forces) or (buvvs_num=0){// Slam away
        // if (obj_ncombat.turns&gt;=2) or (obj_ncombat.enemy_max&lt;obj_ncombat.player_max) or (buvvs_num=0){
            repeat(100){
                if (tha=-1) or (tha=buvvs[1]) or (tha=buvvs[2]) or (tha=buvvs[3]) or (tha=buvvs[4]) or (tha=buvvs[5]){
                    tha=max(floor(random(powerz)),floor(random(powerz)));
                    if (marine_type[i]="Chief "+string(obj_ini.role[100,17])) then tha=powerz-choose(-1,0,0,1,1,2);
                    if (marine_type[i]=obj_img.faction_title[1]) then tha=powerz-choose(-1,0,0,1,1,2);
                }
            }
        }
        
        enemy=instance_nearest(0,y,obj_enunit);enemy2=enemy;
        if (enemy.men+enemy.veh+enemy.medi&lt;=0){var x5;x5=enemy.x;with(enemy){instance_destroy();}enemy=instance_nearest(0,y,obj_enunit);enemy2=enemy;}
        
        var ham;ham=false;
        if (marine_type[i]=obj_img.faction_title[1]) and (obj_ncombat.kamehameha=true) and ((obj_ncombat.big_boom&gt;0) or (choose(1,2)=2)){
            if (obj_ncombat.enemy_forces&gt;=40) then ham=true;
        }
        if (ham=false) then scr_powers(string_upper(let),tha,enemy2,i);
        if (ham=true) then scr_powers("Z",tha,enemy2,i);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
highlight=0;
var diff,siz,pos;
diff=0;pos=880;siz=min(400,(men*0.5)+(veh*2.5)+(dreads*2));
if (instance_exists(obj_centerline)){
    diff=x-obj_centerline.x;
}
if (siz&gt;0){
    if ((pos+(diff*2))&gt;817) and ((pos+(diff*2))&lt;1575){
        if (mouse_x&gt;=pos+(diff*2)) and (mouse_y&gt;=450-(siz/2)) 
        and (mouse_x&lt;pos+(diff*2)+10) and (mouse_y&lt;450+(siz/2)) then highlight=men+medi+veh;
    }
}

if (highlight2!=highlight){
    highlight2=highlight;highlight3="";
    var i,stop;i=0;stop=0;
    repeat(70){i+=1;
        if (stop=0){
            if (dudes_num[i]&gt;0) and (dudes_num[i+1]&gt;0) then highlight3+=string(dudes_num[i])+"x "+string(dudes[i])+", ";
            if (dudes_num[i]&gt;0) and (dudes_num[i+1]&lt;=0){highlight3+=string(dudes_num[i])+"x "+string(dudes[i])+".  ";stop=1;}
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*show_message("Engaged "+string(engaged)+"
"+string(dudes_num[1])+"x "+string(dudes[1])+"
"+string(dudes_num[2])+"x "+string(dudes[2])+"
"+string(dudes_num[3])+"x "+string(dudes[3])+"
"+string(dudes_num[4])+"x "+string(dudes[4])+"
"+string(dudes_num[5])+"x "+string(dudes[5])+"
"+string(dudes_num[6])+"x "+string(dudes[6])+"
"+string(dudes_num[7])+"x "+string(dudes[7])+"
"+string(dudes_num[8])+"x "+string(dudes[8])+"
"+string(dudes_num[9])+"x "+string(dudes[9])+"
"+string(dudes_num[10])+"x "+string(dudes[10]));
*/


/*show_message("Engaged "+string(engaged)+"
"+string(wep_num[1])+"x "+string(wep[1])+": ATT"+string(att[1])+" ARP"+string(apa[1])+" solo:"+string(wep_solo[1])+"
"+string(wep_num[2])+"x "+string(wep[2])+": ATT"+string(att[2])+" ARP"+string(apa[2])+" solo:"+string(wep_solo[2])+"
"+string(wep_num[3])+"x "+string(wep[3])+": ATT"+string(att[3])+" ARP"+string(apa[3])+" solo:"+string(wep_solo[3])+"
"+string(wep_num[4])+"x "+string(wep[4])+": ATT"+string(att[4])+" ARP"+string(apa[4])+" solo:"+string(wep_solo[4])+"
"+string(wep_num[5])+"x "+string(wep[5])+": ATT"+string(att[5])+" ARP"+string(apa[5])+" solo:"+string(wep_solo[5])+"
"+string(wep_num[6])+"x "+string(wep[6])+": ATT"+string(att[6])+" ARP"+string(apa[6])+" solo:"+string(wep_solo[6])+"
"+string(wep_num[7])+"x "+string(wep[7])+": ATT"+string(att[7])+" ARP"+string(apa[7])+" solo:"+string(wep_solo[7])+"
"+string(wep_num[8])+"x "+string(wep[8])+": ATT"+string(att[8])+" ARP"+string(apa[8])+" solo:"+string(wep_solo[8])+"
"+string(wep_num[9])+"x "+string(wep[9])+": ATT"+string(att[9])+" ARP"+string(apa[9])+" solo:"+string(wep_solo[9])+"
"+string(wep_num[10])+"x "+string(wep[10])+": ATT"+string(att[10])+" ARP"+string(apa[10])+" solo:"+string(wep_solo[10]));

*/

/*var blarg;blarg=wep;
show_message(blarg);*/


/*show_message("Engaged "+string(engaged)+"
"+string(dudes_num[1])+"x "+string(dudes[1])+"
"+string(dudes_num[2])+"x "+string(dudes[2])+"
"+string(dudes_num[3])+"x "+string(dudes[3])+"
"+string(dudes_num[4])+"x "+string(dudes[4])+"
"+string(dudes_num[5])+"x "+string(dudes[5])+"
"+string(dudes_num[6])+"x "+string(dudes[6])+"
"+string(dudes_num[7])+"x "+string(dudes[7])+"
"+string(dudes_num[8])+"x "+string(dudes[8])+"
"+string(dudes_num[9])+"x "+string(dudes[9])+"
"+string(dudes_num[10])+"x "+string(dudes[10])+"
"+string(dudes_num[11])+"x "+string(dudes[11])+"
"+string(dudes_num[12])+"x "+string(dudes[12])+"
"+string(dudes_num[13])+"x "+string(dudes[13])+"
"+string(dudes_num[14])+"x "+string(dudes[14])+"
"+string(dudes_num[15])+"x "+string(dudes[15])+"
"+string(dudes_num[16])+"x "+string(dudes[16]));*/

var i;i=0;
repeat(50){i+=1;
    if (marine_type[i]!="") then show_message(string(i)+", "+string(marine_type[i])+", HP: "+string(marine_hp[i]));
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*if (engaged=1) then image_index=1;
if (engaged=0) then image_index=0;
draw_self();*/



var diff,siz,pos;
diff=0;pos=880;
siz=min(400,(men*0.5)+(veh*2.5)+(dreads*2));

if (veh_type[1]="Defenses"){siz=0;
    if (instance_exists(obj_nfort)) then siz=400;
}
draw_set_color(c_white);
if (instance_exists(obj_centerline)){
    diff=x-obj_centerline.x;
    
    if (veh_type[1]="Defenses"){
        diff=135;
    }
    
    draw_set_color(c_red);
    if (veh_type[1]="Defenses") then draw_set_color(c_gray);
}

if (siz&gt;0){
    draw_set_alpha(1);
    if (highlight&gt;0) then draw_set_alpha(0.8);
    if ((pos+(diff*2))&gt;817) and ((pos+(diff*2))&lt;1575){
        draw_rectangle(pos+(diff*2),450-(siz/2),pos+(diff*2)+10,450+(siz/2),0);
    }
    draw_set_alpha(1);
}

if (highlight&gt;0) and (obj_ncombat.fadein&lt;=0){
    draw_set_color(38144);
    draw_line(pos+(diff*2)+5,450,817,685);
    draw_set_font(fnt_40k_14b);
    draw_text(817,688,"Row Composition:");
    draw_set_font(fnt_40k_14);
    draw_text_ext(817,706,string(highlight3),-1,758);    
}

// draw_text(800,(x*18)-400,string(diff));



draw_set_color(c_black);
draw_set_alpha(obj_ncombat.fadein/30);
draw_rectangle(822,239,1574,662,0);
draw_set_alpha(1);



exit;

draw_set_color(255);
draw_text((x*18)-400,300,string(men)+"|"+string(veh)+"#"+string(dudes_num[1])+"x "+string(dudes[1])+"#"+string(dudes_num[2])+"x "+string(dudes[2])+"#"+string(dudes_num[3])+"x "+string(dudes[3])+"#"+string(dudes_num[4])+"x "+string(dudes[4])+"#"+string(dudes_num[5])+"x "+string(dudes[5]));


draw_text((x*18)-400,420,"1: "+string(veh_type[1])+"#2: "+string(veh_type[2])+"#3: "+string(veh_type[3])+"#4: "+string(veh_type[4])+"#5: "+string(veh_type[5])+"#6: "+string(veh_type[6]));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="84">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*instance_activate_object(obj_pnunit);

show_message("Engaged "+string(engaged)+"
"+string(dudes_num[1])+"x "+string(dudes[1])+" "+string(dudes_vehicle[1])+"
"+string(dudes_num[2])+"x "+string(dudes[2])+" "+string(dudes_vehicle[2])+"
"+string(dudes_num[3])+"x "+string(dudes[3])+" "+string(dudes_vehicle[3])+"
"+string(dudes_num[4])+"x "+string(dudes[4])+" "+string(dudes_vehicle[4])+"
"+string(dudes_num[5])+"x "+string(dudes[5])+" "+string(dudes_vehicle[5])+"
"+string(dudes_num[6])+"x "+string(dudes[6])+" "+string(dudes_vehicle[6])+"
"+string(dudes_num[7])+"x "+string(dudes[7])+" "+string(dudes_vehicle[7])+"
"+string(dudes_num[8])+"x "+string(dudes[8])+" "+string(dudes_vehicle[8])+"
"+string(dudes_num[9])+"x "+string(dudes[9])+" "+string(dudes_vehicle[9])+"
"+string(dudes_num[10])+"x "+string(dudes[10])+" "+string(dudes_vehicle[10])+"
"+string(dudes_num[11])+"x "+string(dudes[11])+" "+string(dudes_vehicle[11])+"
"+string(dudes_num[12])+"x "+string(dudes[12])+" "+string(dudes_vehicle[12])+"
"+string(dudes_num[13])+"x "+string(dudes[13])+" "+string(dudes_vehicle[13])+"
"+string(dudes_num[14])+"x "+string(dudes[14])+" "+string(dudes_vehicle[14])+"
"+string(dudes_num[15])+"x "+string(dudes[15])+" "+string(dudes_vehicle[15])+"
"+string(dudes_num[16])+"x "+string(dudes[16])+" "+string(dudes_vehicle[16]));*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

/*show_message("X: "+string(x)+", Y: "+string(y)+"
"+string(dudes_num[1])+"x "+string(dudes[1])+" "+string(dudes_vehicle[1])+"
"+string(dudes_num[2])+"x "+string(dudes[2])+" "+string(dudes_vehicle[2])+"
"+string(dudes_num[3])+"x "+string(dudes[3])+" "+string(dudes_vehicle[3])+"
"+string(dudes_num[4])+"x "+string(dudes[4])+" "+string(dudes_vehicle[4])+"
"+string(dudes_num[5])+"x "+string(dudes[5])+" "+string(dudes_vehicle[5])+"
"+string(dudes_num[6])+"x "+string(dudes[6])+" "+string(dudes_vehicle[6])+"
"+string(dudes_num[7])+"x "+string(dudes[7])+" "+string(dudes_vehicle[7])+"
"+string(dudes_num[8])+"x "+string(dudes[8])+" "+string(dudes_vehicle[8])+"
"+string(dudes_num[9])+"x "+string(dudes[9])+" "+string(dudes_vehicle[9])+"
"+string(dudes_num[10])+"x "+string(dudes[10])+" "+string(dudes_vehicle[10]));*/


/*

show_message("Engaged "+string(engaged)+"
"+string(wep_num[1])+"x "+string(wep[1])+": ATT"+string(att[1])+" ARP"+string(apa[1])+" splash:"+string(splash[1])+"
"+string(wep_num[2])+"x "+string(wep[2])+": ATT"+string(att[2])+" ARP"+string(apa[2])+" splash:"+string(splash[2])+"
"+string(wep_num[3])+"x "+string(wep[3])+": ATT"+string(att[3])+" ARP"+string(apa[3])+" splash:"+string(splash[3])+"
"+string(wep_num[4])+"x "+string(wep[4])+": ATT"+string(att[4])+" ARP"+string(apa[4])+" splash:"+string(splash[4])+"
"+string(wep_num[5])+"x "+string(wep[5])+": ATT"+string(att[5])+" ARP"+string(apa[5])+" splash:"+string(splash[5])+"
"+string(wep_num[6])+"x "+string(wep[6])+": ATT"+string(att[6])+" ARP"+string(apa[6])+" splash:"+string(splash[6])+"
"+string(wep_num[7])+"x "+string(wep[7])+": ATT"+string(att[7])+" ARP"+string(apa[7])+" splash:"+string(splash[7])+"
"+string(wep_num[8])+"x "+string(wep[8])+": ATT"+string(att[8])+" ARP"+string(apa[8])+" splash:"+string(splash[8])+"
"+string(wep_num[9])+"x "+string(wep[9])+": ATT"+string(att[9])+" ARP"+string(apa[9])+" splash:"+string(splash[9])+"
"+string(wep_num[10])+"x "+string(wep[10])+": ATT"+string(att[10])+" ARP"+string(apa[10])+" splash:"+string(splash[10])+"
"+string(wep_num[11])+"x "+string(wep[11])+": ATT"+string(att[11])+" ARP"+string(apa[11])+" splash:"+string(splash[11])+"
"+string(wep_num[12])+"x "+string(wep[12])+": ATT"+string(att[12])+" ARP"+string(apa[12])+" splash:"+string(splash[12])+"
"+string(wep_num[13])+"x "+string(wep[13])+": ATT"+string(att[13])+" ARP"+string(apa[13])+" splash:"+string(splash[13])+"
"+string(wep_num[14])+"x "+string(wep[14])+": ATT"+string(att[14])+" ARP"+string(apa[14])+" splash:"+string(splash[14])+"
"+string(wep_num[15])+"x "+string(wep[15])+": ATT"+string(att[15])+" ARP"+string(apa[15])+" splash:"+string(splash[15]));
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>5,5</point>
  </PhysicsShapePoints>
</object>
