<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_loading2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
instance_deactivate_object(obj_star_select);
instance_deactivate_object(obj_drop_select);
instance_deactivate_object(obj_bomb_select);

var i;i=-1;
keywords="";
last_open=1;

battles=0;
audiences=0;
popups=0;
alerts=0;
fadeout=0;
popups_end=0;

current_battle=1;
current_audience=0;
current_popup=0;

fast=0;// This is increased, once the alert[i]=1 and &gt;=fast then it begins to fade in and get letters
info_mahreens=0;
info_vehicles=0;

first_x=obj_controller.x;// Return to this position once all the battles are done
first_y=obj_controller.y;
combating=0;
cooldown=10;

obj_controller.menu=999;// show nothing, click nothing

i=-1;repeat(11){i+=1;enemy_fleet[i]=0;allied_fleet[i]=0;ecap[i]=0;efri[i]=0;eesc[i]=0;acap[i]=0;afri[i]=0;aesc[i]=0;}

i=-1;
repeat(91){
    i+=1;
    
    popup[i]=0;
    popup_type[i]="";
    popup_text[i]="";
    popup_image[i]="";
    popup_special[i]="";
    
    alert[i]=0;
    alert_type[i]="";
    alert_text[i]="";
    
    alert_char[i]=0;
    alert_alpha[i]=0;
    alert_txt[i]="";
    alert_color[i]="";
    
    battle[i]=0;// Set to 0 for none, 1 for battle to do, and 2 for resolved
    battle_location[i]="";
    battle_world[i]=0;// Be like -50 for space battle
    battle_opponent[i]=0;// faction ID
    battle_object[i]=0;// faction object for the fleets
    battle_pobject[i]=0;// player object for the fleets
    battle_special[i]="";
    
    
    if (i&lt;16) then strin[i]="";
    if (i&lt;16){
        audien[i]=0;
        audien_topic[i]="";
    }
    
    
    
    
}

audiences=0;
audien[0]=0;audien[1]=0;audien[2]=0;audien[3]=0;audien[4]=0;audien[5]=0;
audien[6]=0;audien[7]=0;audien[8]=0;audien[9]=0;audien[10]=0;audien[11]=0;
audien_topic[0]="";audien_topic[1]="";audien_topic[2]="";audien_topic[3]="";audien_topic[4]="";audien_topic[5]="";
audien_topic[6]="";audien_topic[7]="";audien_topic[8]="";audien_topic[9]="";audien_topic[10]="";audien_topic[11]="";





alert_alpha[1]=0.2;
alert_char[1]=1;

var i;i=0;
repeat(11){i+=1;
    if (obj_controller.audien[i]!=0){audiences+=1;audien[audiences]=obj_controller.audien[i];audien_topic[audiences]=obj_controller.audien_topic[i];}
}i=0;// LOLOLOLOLOL


repeat(99){i+=1;
    if (obj_controller.event[i]!="") and (obj_controller.event_duration[i]=1) and (obj_controller.faction_status[2]!="War"){
        if (obj_controller.event[i]="governor_assassination_1"){
            with(obj_star){var o;o=0;repeat(4){o+=1;if (dispo[o]&gt;0) and (dispo[o]&lt;90) then dispo[o]=max(dispo[o]-2,0);}}
            obj_controller.disposition[2]-=7;obj_controller.disposition[4]-=10;obj_controller.disposition[5]-=4;
            if (obj_controller.disposition[4]&lt;=0) or (obj_controller.disposition[2]&lt;=0) then obj_controller.alarm[8]=1;
            if (obj_controller.disposition[4]&gt;0) and (obj_controller.disposition[2]&gt;0){
                var top;top=string_replace(obj_controller.event[i],"governor_assassination_1","assassination_angryish");
                scr_audience(4,top,0,"",0,0);
            }
        }
        if (string_count("governor_assassination_2",obj_controller.event[i])&gt;0) and (obj_controller.faction_status[4]!="War"){
            with(obj_star){var o;o=0;repeat(4){o+=1;if (dispo[o]&gt;0) and (dispo[o]&lt;90) then dispo[o]=max(dispo[o]-4,0);}}
            obj_controller.disposition[2]-=15;obj_controller.disposition[4]-=30;obj_controller.disposition[5]-=10;
            if (obj_controller.disposition[4]&lt;=0) or (obj_controller.disposition[2]&lt;=0) then obj_controller.alarm[8]=1;
            if (obj_controller.disposition[4]&gt;0) and (obj_controller.disposition[2]&gt;0){
                var top;top=string_replace(obj_controller.event[i],"governor_assassination_2","assassination_angry");
                scr_audience(4,top,0,"",0,0);
            }
        }
    }
}i=0;






if (audiences&gt;0){// This is a one-off change all messages to declare war
    var i;i=0;
    var war;repeat(11){i+=1;war[i]=0;}
    
    i=0;
    repeat(10){i+=1;
        if (audien_topic[i]!="declare_war") and (audien_topic[i]!="gene_xeno") and (audien_topic[i]!="") and (war[audien[i]]=1) and (audien[i]!=10){
            audien[i]=obj_controller.audien[i+1];
            audien_topic[i]=obj_controller.audien_topic[i+1];
            audien[i+1]=0;
            audien_topic[i+1]="";
            audiences-=1;
        }
        
        // show_message(string(audien_topic[i])+"|"+string(war[audien[i]])+"|"+string(obj_controller.faction_status[self.audien[i]]));
        
        if (audien_topic[i]!="declare_war") and (audien_topic[i]!="gene_xeno") and (audien_topic[i]!="") and (war[audien[i]]=0) and (obj_controller.faction_status[self.audien[i]]!="War") and (audien[i]!=10){
            if (obj_controller.disposition[self.audien[i]]&lt;=0) and (audien[i]&lt;6){
                /*obj_controller.audien[i]=obj_controller.audien[i+1];
                obj_controller.audien_topic[i]=obj_controller.audien_topic[i+1];
                obj_controller.audien[i+1]=0;
                obj_controller.audien_topic[i+1]="";
                audiences-=1;*/
                audien_topic[i]="declare_war";
                war[audien[i]]=1;
            }
        }
        
        /*if (obj_controller.audien_topic[i]!="declare_war") and (obj_controller.disposition[obj_controller.audien[i]]&lt;=0) and (war[i]=0) and (obj_controller.faction_status[obj_controller.audien[i]]!="War"){
            war[i]=1;obj_controller.audien_topic[i]="declare_war";
        }*/
    }
}
var i;i=0;
if (audiences&gt;0){
    repeat(10){i+=1;
        if (audien_topic[i]="") and (audien_topic[i+1]!=""){
            audien_topic[i]=audien_topic[i+1];
        }
    }
}





alerts=0;
fast=0;
show=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
with(obj_controller){audiences=0;
    audien[0]=0;audien[1]=0;audien[2]=0;audien[3]=0;audien[4]=0;audien[5]=0;
    audien[6]=0;audien[7]=0;audien[8]=0;audien[9]=0;audien[10]=0;audien[11]=0;
    audien_topic[0]="";audien_topic[1]="";audien_topic[2]="";audien_topic[3]="";audien_topic[4]="";audien_topic[5]="";
    audien_topic[6]="";audien_topic[7]="";audien_topic[8]="";audien_topic[9]="";audien_topic[10]="";audien_topic[11]="";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Next battle</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var battle_o;battle_o=0;
current_battle+=1;
combating=0;

instance_activate_object(obj_star);

if (battles&gt;0) and (current_battle&lt;=battles){
    var ii, xx, yy, good;
    ii=0;good=0;
    
    obj_controller.temp[1060]=battle_location[current_battle];
    with(obj_temp3){instance_destroy();}
    with(obj_star){if (name=obj_controller.temp[1060]) then instance_create(x,y,obj_temp3);}
    battle_o=instance_nearest(obj_temp3.x,obj_temp3.y,obj_star);ii=battle_o;
    with(obj_temp3){instance_destroy();}
    if (ii.name=battle_location[current_battle]) then good=1;
    
    if (good=1){
        obj_controller.x=ii.x;obj_controller.y=ii.y;show=current_battle;
        
        if (battle_world[current_battle]=-50){
            strin[1]=string(battle_pobject[current_battle].capital_number);
            strin[2]=string(battle_pobject[current_battle].frigate_number);
            strin[3]=string(battle_pobject[current_battle].escort_number);
            // pull health values here
            strin[4]=string(battle_pobject[current_battle].capital_health);
            strin[5]=string(battle_pobject[current_battle].frigate_health);
            strin[6]=string(battle_pobject[current_battle].escort_health);
            
            // Here
            strin[7]=string(battle_object[current_battle].capital_number);
            strin[8]=string(battle_object[current_battle].frigate_number);
            strin[9]=string(battle_object[current_battle].escort_number);
            // pull health values here
            strin[10]="100";
            strin[11]="100";
            strin[12]="100";            
        }
        
        
        
        if (battle_world[current_battle]&gt;=1){
        
            scr_count_forces(string(battle_location[current_battle]),battle_world[current_battle],true);
            
            strin[1]=info_mahreens;
            strin[2]=info_vehicles;
            
            if (info_mahreens+info_vehicles=0){
                // if (battles&gt;current_battles) then alarm[4]=1;
                // if (battles=current_battles) then alarm[1]=1;
                if (battles&gt;current_battle) then alarm[4]=1;
                if (battles=current_battle) then alarm[1]=1;
            }
            
            strin[3]="";
            
            var tempy;tempy=0;
            tempy=battle_object[current_battle].p_owner[battle_world[current_battle]];
            
            if (tempy=1) or (tempy=2) or (tempy=3){
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=1) then strin[3]="Minimally";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=2) then strin[3]="Lightly";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=3) then strin[3]="Moderately";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=4) then strin[3]="Highly";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=5) then strin[3]="Extremely";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=6) then strin[3]="Maximally";
            }
            
            tempy=0;
            if (battle_opponent[current_battle]=7) then tempy=battle_object[current_battle].p_orks[battle_world[current_battle]];
            if (battle_opponent[current_battle]=8) then tempy=battle_object[current_battle].p_tau[battle_world[current_battle]];
            if (battle_opponent[current_battle]=9) then tempy=battle_object[current_battle].p_tyranids[battle_world[current_battle]];
            if (battle_opponent[current_battle]=10) then tempy=battle_object[current_battle].p_traitors[battle_world[current_battle]];
            if (battle_opponent[current_battle]=30){tempy=1;strin[4]="Master Spyrer";}
            
            if (battle_opponent[current_battle]&lt;=20){
                if (tempy=1) then strin[4]="Minimal Forces";
                if (tempy=2) then strin[4]="Sparse Forces";
                if (tempy=3) then strin[4]="Moderate Forces";
                if (tempy=4) then strin[4]="Numerous Forces";
                if (tempy=5) then strin[4]="Very Numerous";
                if (tempy=6) then strin[4]="Overwhelming";
            }
        }
        
        if (obj_controller.zoomed=1) then with(obj_controller){scr_zoom();}
    }
    instance_activate_object(obj_star);
    
}

instance_activate_object(obj_star);






if (battle[1]=0) or (current_battle&gt;battles){//                         This is temporary for the sake of testing
    if (battle[1]=0){obj_controller.x=first_x;obj_controller.y=first_y;}
    alarm[1]=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fadeout=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>For fading in alerts</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (fast=0){
    instance_activate_object(obj_star_event);
    if (instance_exists(obj_star_event)){
        obj_star_event.image_alpha=1;
        obj_star_event.image_speed=1;
    }
    
    instance_activate_object(obj_star_select);
    instance_activate_object(obj_drop_select);
    instance_activate_object(obj_bomb_select);
    
    if (instance_exists(obj_star_select)) then obj_star_select.alarm[1]=2;
}



fast+=1;
if (fast&lt;alerts) then alarm[2]=10;

if (fast&gt;=alerts){
    alarm[2]=9999;
    alarm[3]=max(230,(alerts*60));
    alarm[3]=min(alarm[3],360);
}

if (alerts=0) then instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Audiences and Popups</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (current_audience&lt;=audiences) then current_audience+=1;

if (audien[current_audience]!=0){
    with(obj_controller){if (zoomed=1) then scr_zoom();}

    obj_controller.audience=self.audien[self.current_audience];
    obj_controller.menu=20;
    obj_controller.diplomacy=obj_controller.audience;
    
    if (obj_controller.diplomacy=10) and (obj_controller.faction_gender[10]=2) then scr_music("blood",60);
    
    if (string_count("intro",audien_topic[current_audience])&gt;0){
        obj_controller.known[obj_controller.diplomacy]=2;
        obj_controller.faction_justmet=1;
        if (obj_controller.diplomacy=6) then with(obj_controller){scr_dialogue("intro1");}
        if (obj_controller.diplomacy!=6) then with(obj_controller){scr_dialogue("intro");}
    }
    
    if (audien_topic[current_audience]!="intro"){
        with(obj_controller){scr_dialogue(obj_turn_end.audien_topic[obj_turn_end.current_audience]);}
        
        // "mission1"
        
    }
    exit;
}









// if (current_audience&lt;=audiences) then alarm[1]=5;


if (audien[1]=0) or (current_audience&gt;audiences){
    current_popup+=1;
    
    
    if (popup[current_popup]!=0){
        var pip;
        pip=instance_create(0,0,obj_popup);
        pip.title=popup_type[current_popup];
        pip.text=popup_text[current_popup];
        pip.image=popup_image[current_popup];
        if (popup_special[current_popup]!="") and ((pip.image="inquisition") or (pip.image="necron_cave")) and (popup_special[current_popup]!="1") and (popup_special[current_popup]!="2") and (pip.image!="tech_build") and (popup_special[current_popup]!="contraband") and (string_count("mech_",popup_special[current_popup])=0) and (string_count("meeting",popup_special[current_popup])=0){
            explode_script(popup_special[current_popup],"|");
            pip.mission=string(explode[0]);
            pip.loc=string(explode[1]);
            pip.planet=real(explode[2]);
            pip.estimate=real(explode[3]);
        }
        if (string_count("target_marine",popup_special[current_popup])&gt;0){
            var aa;
            explode_script(popup_special[current_popup],"|");
            aa=string(explode[0]);
            pip.ma_name=string(explode[1]);
            pip.ma_co=real(explode[2]);
            pip.ma_id=real(explode[3]);
        }
        if (string_count("mech_",popup_special[current_popup])&gt;0){
            explode_script(popup_special[current_popup],"|");
            pip.mission=string(explode[0]);
            pip.loc=string(explode[1]);
            // "mech_raider!0!|"+string(you2.name));        "mech_bionics!0!|"+string(you2.name));
        }
        if (string_count("meeting_",popup_special[current_popup])&gt;0){
            pip.mission=popup_special[current_popup];
        }
        if (popup_special[current_popup]="contraband") then pip.loc="contraband";
        if (popup_special[current_popup]="1") then pip.planet=1;
        if (popup_special[current_popup]="2") then pip.planet=2;
        pip.number=1;
        
        if (pip.title="Ship Lost"){
            var iii,yar;cah=0;iii=0;yar=0;
            repeat(30){iii+=1;if (obj_ini.role[0,iii]=obj_img.faction_title[1]) then yar=iii;}
            if (obj_ini.lid[0,yar]&gt;0){
                if (obj_ini.ship_location[obj_ini.lid[0,yar]]="Lost"){{obj_controller.alarm[7]=70;if (global.defeat&lt;=1) then global.defeat=1;}}
            }
        }
        
    }
    if (current_popup&gt;popups) or (popup[1]=0){
        if (popups_end=0) then popups_end=1;
        // obj_controller.x=first_x;
        // obj_controller.y=first_y;
        // instance_destroy();
    }




    // obj_controller.x=first_x;
    // obj_controller.y=first_y;
    // instance_destroy();
}


// if (current_popup&gt;popups) or (popup[1]=0) then popups_end=1;

if (popups_end=1){


    /*if (popups=0){
        obj_controller.x=first_x;
        obj_controller.y=first_y;
        instance_destroy();
    }*/


    obj_controller.x=first_x;
    obj_controller.y=first_y;
    
    alarm[2]=10;
    obj_controller.menu=0;
    combating=0;
    
    with(obj_controller){
        year_fraction+=84;
        if (year_fraction&gt;999){
            year+=1;year_fraction=0;
        }
        if (year&gt;=1000){
            millenium+=1;year-=1000;
        }
        // menu=0;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>First battle</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// show_message("biiiiiIIIng");

instance_activate_object(obj_star);
combating=0;

var i;

/*repeat(10){
    i=0;
    repeat(20){
        i+=1;
        if (battle[i]=1) and (battle[i+1]=1) and (battle_world[i]&lt;5) and (battle_world[i+1]=-50){
            battle[999]=battle[i];battle_location[999]=battle[i];battle_world[999]=battle_world[i];
            battle_opponent[999]=battle_opponent[i];battle_object[999]=battle_object[i];battle_pobject[999]=battle_pobject[i];// Store current
            
            battle[i]=battle[i+1];battle_location[i]=battle[i+1];battle_world[i]=battle_world[i+1];
            battle_opponent[i]=battle_opponent[i+1];battle_object[i]=battle_object[i+1];battle_pobject[i]=battle_pobject[i+1];// Current = Current +1
            
            battle[i+1]=battle[999];battle_location[i+1]=battle[999];battle_world[i+1]=battle_world[999];
            battle_opponent[i+1]=battle_opponent[999];battle_object[i+1]=battle_object[999];battle_pobject[i+1]=battle_pobject[999];// Current +1 = Stored
        }
    }
}*/

i=50;
repeat(50){
    i-=1;
    
    if (battles&lt;=i) and (i&gt;=2){
        if (battle[i]!=0) and (battle[i-1]!=0) and (battle_world[i]=-50) and (battle_world[i-1]&gt;0){
            var tem1, tem2, tem3, tem4, tem5, tem6, tem7;
            tem1=battle[i-1];
            tem2=battle_location[i-1];
            tem3=battle_world[i-1];
            tem4=battle_opponent[i-1];
            tem5=battle_object[i-1];
            tem6=battle_pobject[i-1];
            tem7=battle_special[i-1];
            
            battle[i-1]=battle[i];
            battle_location[i-1]=battle_location[i];
            battle_world[i-1]=battle_world[i];
            battle_opponent[i-1]=battle_opponent[i];
            // battle_object[i-1]=battle_object[i];
            battle_pobject[i-1]=battle_pobject[i];
            battle_special[i-1]=battle_special[i];
            
            battle[i]=tem1;
            battle_location[i]=tem2;
            battle_world[i]=tem3;
            battle_opponent[i]=tem4;
            battle_object[i]=tem5;
            battle_pobject[i]=tem6;
            battle_special[i]=tem7;
        }
    }
}



// Probably want something right here to organize the battle just in case
// Space battles first
// Ground battles after




if (battles&gt;0) and (current_battle&lt;=battles){
    var ii, xx, yy, good;
    ii=0;good=0;
    
    with(obj_star){if (name=obj_turn_end.battle_location[obj_turn_end.current_battle]) then instance_create(x,y,obj_temp3);}
    
    if (instance_exists(obj_temp3)){
        ii=instance_nearest(obj_temp3.x,obj_temp3.y,obj_star);
        if (instance_exists(ii)){
            if (ii.name=battle_location[current_battle]) then good=1;
            // ii.present_fleets-=1;
        }
    }
    with(obj_temp3){instance_destroy();}
    
    /*repeat(200){
        if (good=0){
            xx=random(room_width);
            yy=random(room_height);
            ii=instance_nearest(xx,yy,obj_star);
            
            if (instance_exists(ii)){if (ii.name=battle_location[current_battle]) then good=1;}
            if (instance_exists(ii)){if (ii.name!=battle_location[current_battle]){good=0;instance_deactivate_object(ii);}}
            ii.present_fleets-=1;
        }
    }*/
    
    if (good=1){// trying to find the star
        instance_activate_object(obj_star);
        obj_controller.x=ii.x;obj_controller.y=ii.y;show=current_battle;
        
        if (battle_world[current_battle]=-50){
            strin[1]=string(round(battle_pobject[current_battle].capital_number));
            strin[2]=string(round(battle_pobject[current_battle].frigate_number));
            strin[3]=string(round(battle_pobject[current_battle].escort_number));
            // pull health values here
            strin[4]=string(round(battle_pobject[current_battle].capital_health));
            strin[5]=string(round(battle_pobject[current_battle].frigate_health));
            strin[6]=string(round(battle_pobject[current_battle].escort_health));
            
            // pull enemy ships here
            
            var e;e=1;
            repeat(10){e+=1;if (e=11) then e=13;
                if (ii.present_fleet[e]&gt;0){
                    obj_controller.temp[1070]=ii.id;
                    obj_controller.temp[1071]=e;
                    obj_controller.temp[1072]=0;
                    obj_controller.temp[1073]=0;
                    obj_controller.temp[1074]=0;
                    
                    with(obj_en_fleet){
                        if (orbiting=obj_controller.temp[1070]) and (owner=obj_controller.temp[1071]){
                            obj_controller.temp[1072]+=round(capital_number);
                            obj_controller.temp[1073]+=round(frigate_number);
                            obj_controller.temp[1074]+=round(escort_number);
                        }
                    }
                    
                    var l1,l2;l1=0;l2=0;
                    if (obj_controller.faction_status[e]!="War"){
                        repeat(10){l1+=1;if (allied_fleet[l1]=0) and (l2=0) then l2=l1;}
                        allied_fleet[l2]=e;
                        acap[l2]=obj_controller.temp[1072];
                        afri[l2]=obj_controller.temp[1073];
                        aesc[l2]=obj_controller.temp[1074];
                    }
                    if (obj_controller.faction_status[e]="War") or (e=9) or (e=13){
                        repeat(10){l1+=1;if (enemy_fleet[l1]=0) and (l2=0) then l2=l1;}
                        enemy_fleet[l2]=e;
                        ecap[l2]=obj_controller.temp[1072];
                        efri[l2]=obj_controller.temp[1073];
                        eesc[l2]=obj_controller.temp[1074];
                    }
                }
            }
            
        }
        
        if (battle_world[current_battle]&gt;=1){
            scr_count_forces(string(battle_location[current_battle]),battle_world[current_battle],true);
            
            strin[1]=info_mahreens;
            strin[2]=info_vehicles;
            
            if (info_mahreens+info_vehicles=0){
                // if (battles&gt;current_battles) then alarm[4]=1;
                // if (battles=current_battles) then alarm[1]=1;
                if (battles&gt;current_battle) then alarm[4]=1;
                if (battles=current_battle) then alarm[1]=1;
            }
            
            strin[3]="";
            
            var tempy;tempy=0;
            tempy=battle_object[current_battle].p_owner[battle_world[current_battle]];
            
            if (tempy=1) or (tempy=2) or (tempy=3){
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=1) then strin[3]="Minimally";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=2) then strin[3]="Lightly";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=3) then strin[3]="Moderately";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=4) then strin[3]="Highly";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=5) then strin[3]="Extremely";
                if (battle_object[current_battle].p_fortified[battle_world[current_battle]]=6) then strin[3]="Maximally";
            }
            
            tempy=0;
            if (battle_opponent[current_battle]=7) then tempy=battle_object[current_battle].p_orks[battle_world[current_battle]];
            if (battle_opponent[current_battle]=8) then tempy=battle_object[current_battle].p_tau[battle_world[current_battle]];
            if (battle_opponent[current_battle]=9) then tempy=battle_object[current_battle].p_tyranids[battle_world[current_battle]];
            if (battle_opponent[current_battle]=10) then tempy=battle_object[current_battle].p_traitors[battle_world[current_battle]];
            if (battle_opponent[current_battle]=13) then tempy=battle_object[current_battle].p_necrons[battle_world[current_battle]];
            
            if (tempy=1) then strin[4]="Minimal Forces";
            if (tempy=2) then strin[4]="Sparse Forces";
            if (tempy=3) then strin[4]="Moderate Forces";
            if (tempy=4) then strin[4]="Numerous Forces";
            if (tempy=5) then strin[4]="Very Numerous";
            if (tempy=6) then strin[4]="Overwhelming";
            
            // if (battle_opponent[current_battle]=2) then obj_controller.alarm[7]=1;
            obj_controller.cooldown=9999;
        }
        
        if (obj_controller.zoomed=1) then with(obj_controller){scr_zoom();}
    }
    instance_activate_object(obj_star);
    
}

instance_activate_object(obj_star);




if (battle[1]=0) or (current_battle&gt;battles){//                         This is temporary for the sake of testing
    if (battle[1]=0){obj_controller.x=first_x;obj_controller.y=first_y;}
    alarm[1]=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var i;
i=0;

if (cooldown&gt;=0) then cooldown-=1;

if (alerts&gt;0) and (popups_end=1) and (fadeout=0){
    repeat(alerts){
        i+=1;
        
        if (fast&gt;=i) and (string_length(alert_txt[i])&lt;string_length(alert_text[i])){
            alert_char[i]+=1;
            alert_txt[i]=string_copy(alert_text[i],0,alert_char[i]);
        }
        if (fast&gt;=i) and (alert_alpha[i]&lt;1) then alert_alpha[i]+=0.03;
    }
}


if (fadeout=1){
    i=0;
    repeat(alerts){
        i+=1;alert_alpha[i]-=0.05;
        if (i=1) and (alert_alpha[1]&lt;=0) then instance_destroy();
    }
}



if (alarm[2]=2000) then instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_saveload</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_popup</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_ncombat</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_fleet</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (obj_controller.complex_event=true) or (instance_exists(obj_temp_meeting)) then exit;



var xxx,yyy;
xxx=view_xview[0]+535;
yyy=view_yview[0]+200;

if (cooldown&lt;=0) and (battle_world[current_battle]=-50) and (combating=0){
    if (mouse_x&gt;=xxx+132) and (mouse_y&gt;=yyy+354) and (mouse_x&lt;xxx+259) and (mouse_y&lt;yyy+389){// Run like hell, space
        with(obj_fleet_select){instance_destroy();}
        var that,that2;that=instance_nearest(battle_pobject[current_battle].x,battle_pobject[current_battle].y,obj_p_fleet);
        that.alarm[3]=1;
        that2=instance_create(0,0,obj_popup);
        that2.type=99;
        obj_controller.force_scroll=1;
        obj_controller.fleet_minimized=1
    }
    
    if (mouse_x&gt;=xxx+272) and (mouse_y&gt;=yyy+354) and (mouse_x&lt;xxx+399) and (mouse_y&lt;yyy+389){// Fight fight fight, space
        obj_controller.cooldown=8000;
        instance_activate_all();
        
        // Start battle here
        
        combating=1;
        
        // instance_deactivate_all(true);
        // instance_activate_object(obj_controller);
        // instance_activate_object(obj_ini);
        // instance_activate_object(battle_object[current_battle]);
        // instance_activate_object(battle_pobject[current_battle]);
        
        instance_create(0,0,obj_fleet);
        // 
        obj_fleet.enemy[1]=enemy_fleet[1];
        obj_fleet.enemy_status[1]=-1;
        
        obj_fleet.en_capital[1]=ecap[1];
        obj_fleet.en_frigate[1]=efri[1];
        obj_fleet.en_escort[1]=eesc[1];
        
        // Plug in all of the enemies first
        // And then plug in the allies after then with their status set to positive
        
        
        var g,ee;g=1;ee=1;
        repeat(5){g+=1;
            if (enemy_fleet[g]!=0){ee+=1;
                obj_fleet.enemy[ee]=enemy_fleet[g];
                obj_fleet.enemy_status[ee]=-1;
                
                obj_fleet.en_capital[ee]=ecap[g];
                obj_fleet.en_frigate[ee]=efri[g];
                obj_fleet.en_escort[ee]=eesc[g];
            }
        }
        var g,ee;g=0;
        repeat(6){g+=1;
            if (allied_fleet[g]!=0){ee+=1;
                obj_fleet.enemy[ee]=allied_fleet[g];
                obj_fleet.enemy_status[ee]=1;
                
                obj_fleet.en_capital[ee]=acap[g];
                obj_fleet.en_frigate[ee]=afri[g];
                obj_fleet.en_escort[ee]=aesc[g];
            }
        }
        
        if (battle_special[current_battle]="csm") then obj_fleet.csm_exp=1;
        if (battle_special[current_battle]="BLOOD") then obj_fleet.csm_exp=2;
        
        instance_activate_all();
        var stahr;stahr=instance_nearest(battle_pobject[current_battle].x,battle_pobject[current_battle].y,obj_star);
        obj_fleet.star_name=stahr.name;
        
        if (string_count(string(obj_img.hq_ground),stahr.p_feature[1])&gt;0) then obj_fleet.player_lasers=stahr.p_lasers[1];
        if (string_count(string(obj_img.hq_ground),stahr.p_feature[2])&gt;0) then obj_fleet.player_lasers=stahr.p_lasers[2];
        if (string_count(string(obj_img.hq_ground),stahr.p_feature[3])&gt;0) then obj_fleet.player_lasers=stahr.p_lasers[3];
        if (string_count(string(obj_img.hq_ground),stahr.p_feature[4])&gt;0) then obj_fleet.player_lasers=stahr.p_lasers[4];
        
        var i;i=0;
        repeat(40){
            i+=1;if (battle_pobject[current_battle].capital[i]!="") then obj_fleet.fighting[battle_pobject[current_battle].capital_num[i]]=1;
        }
        
        i=0;
        repeat(90){
            i+=1;if (battle_pobject[current_battle].frigate[i]!="") then obj_fleet.fighting[battle_pobject[current_battle].frigate_num[i]]=1;
        }
        
        i=0;
        repeat(90){
            i+=1;if (battle_pobject[current_battle].escort[i]!="") then obj_fleet.fighting[battle_pobject[current_battle].escort_num[i]]=1;
        }
        
        instance_deactivate_all(true);
        instance_activate_object(obj_controller);
        instance_activate_object(obj_ini);
        instance_activate_object(obj_fleet);
        instance_activate_object(obj_cursor);
        // instance_deactivate_object(battle_pobject[current_battle]);
        
    }

}



if (cooldown&lt;=0) and (battle_world[current_battle]&gt;0) and (combating=0){

    var tip;tip="";
    
    if (mouse_x&gt;=xxx+132) and (mouse_y&gt;=yyy+354) and (mouse_x&lt;xxx+259) and (mouse_y&lt;yyy+389){
        tip="offensive";
    }
    
    if (mouse_x&gt;=xxx+272) and (mouse_y&gt;=yyy+354) and (mouse_x&lt;xxx+399) and (mouse_y&lt;yyy+389){
        tip="defensive";
    }
    
    
    
    
    
    if (tip!=""){                                   // Fight fight fight, ground
        obj_controller.cooldown=8;
        
        // Start battle here
        
        combating=1;
        
        instance_deactivate_all(true);
        instance_activate_object(obj_controller);
        instance_activate_object(obj_ini);
        instance_activate_object(battle_object[current_battle]);
        
        instance_create(0,0,obj_ncombat);
        obj_ncombat.enemy=battle_opponent[current_battle];
        obj_ncombat.battle_object=battle_object[current_battle];
        obj_ncombat.battle_loc=battle_location[current_battle];
        obj_ncombat.battle_id=battle_world[current_battle];
        
        if (tip="offensive") then obj_ncombat.formation_set=1;
        if (tip="defensive") then obj_ncombat.formation_set=2;
        
        
        var yeah;yeah=false;
        if (battle_object[current_battle].p_owner[battle_world[current_battle]]=1) then yeah=true;
        if (battle_object[current_battle].p_owner[battle_world[current_battle]]=7) then yeah=true;
        if (battle_object[current_battle].p_owner[battle_world[current_battle]]=9) then yeah=true;
        if (obj_controller.faction_status[battle_object[current_battle].p_owner[battle_world[current_battle]]]!="War") then yeah=true;
        if (yeah=true) then obj_ncombat.fortified=battle_object[current_battle].p_fortified[battle_world[current_battle]];
        if (obj_ncombat.enemy=13) then obj_ncombat.fortified=0;
        
        obj_ncombat.battle_special=battle_special[current_battle];
        obj_ncombat.battle_climate=battle_object[current_battle].p_type[battle_world[current_battle]];
        
        // show_message(string(battle_object[current_battle].p_feature[battle_world[current_battle]]));
        if (string_count(string(obj_img.hq_ground),battle_object[current_battle].p_feature[battle_world[current_battle]])&gt;0){
            // show_message(string(battle_object[current_battle].p_defenses[battle_world[current_battle]]));
            // show_message(string(battle_object[current_battle].p_silo[battle_world[current_battle]]));
            obj_ncombat.player_defenses+=battle_object[current_battle].p_defenses[battle_world[current_battle]];
            obj_ncombat.player_silos+=battle_object[current_battle].p_silo[battle_world[current_battle]];
        }
        
        if (obj_ncombat.enemy=2){obj_ncombat.threat=min(1000000,battle_object[current_battle].p_guardsmen[battle_world[current_battle]]);}
        if (obj_ncombat.enemy=6) then obj_ncombat.threat=battle_object[current_battle].p_eldar[battle_world[current_battle]];
        if (obj_ncombat.enemy=7) then obj_ncombat.threat=battle_object[current_battle].p_orks[battle_world[current_battle]];
        if (obj_ncombat.enemy=8) then obj_ncombat.threat=battle_object[current_battle].p_tau[battle_world[current_battle]];
        if (obj_ncombat.enemy=9) then obj_ncombat.threat=battle_object[current_battle].p_tyranids[battle_world[current_battle]];
        if (obj_ncombat.enemy=10) then obj_ncombat.threat=battle_object[current_battle].p_traitors[battle_world[current_battle]];
        if (obj_ncombat.enemy=11) then obj_ncombat.threat=battle_object[current_battle].p_chaos[battle_world[current_battle]];
        if (obj_ncombat.enemy=13) then obj_ncombat.threat=battle_object[current_battle].p_necrons[battle_world[current_battle]];
        if (obj_ncombat.enemy=30) then obj_ncombat.threat=1;
        
        // 
        
        scr_battle_roster(string(battle_location[current_battle]),battle_world[current_battle],true);
        
        instance_deactivate_object(battle_object[current_battle]);
    }

}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_font(fnt_small);
draw_set_halign(fa_left);
draw_set_color(255);


if (obj_controller.force_scroll=1) then exit;


if (combating&gt;0) then exit;
if (obj_controller.audience&gt;0) then exit;

if (show=0) and (obj_controller.zoomed=0) and (current_popup=0) then draw_sprite(spr_loading,image_index,view_xview[0]+23,view_yview[0]+73);
if (show=0) and (obj_controller.zoomed=1) and (current_popup=0) then draw_sprite_ext(spr_loading,image_index,40,40,2,2,0,c_white,1);


if (show&gt;0) and (current_battle&lt;=battles){
    var xxx,yyy,i;
    xxx=view_xview[0]+535;
    yyy=view_yview[0]+200;
    i=current_battle;
    
    draw_sprite(spr_purge_panel,0,xxx,yyy);
    // if (battle_world[i]=-50) then draw_sprite(spr_attacked,1,xxx+12,yyy+54);
    // if (battle_world[i]&gt;0) then draw_sprite(spr_attacked,0,xxx+12,yyy+54);
    if (battle_world[i]=-50) then scr_image("attacked",1,xxx+12,yyy+54,254,174);
    if (battle_world[i]&gt;0) then scr_image("attacked",0,xxx+12,yyy+54,254,174);
    
    draw_set_font(fnt_40k_14);draw_set_halign(fa_left);draw_set_color(c_gray);
    draw_text(xxx+8,yyy+13,string(i)+"/"+string(battles));
    
    draw_set_halign(fa_center);
    draw_set_font(fnt_40k_30b);
    
    if (battle_world[i]&gt;0) then draw_text_transformed(xxx+265,yyy+11,"Forces Attacked! ("+string(battle_location[i])+" "+scr_roman(battle_world[i])+")",0.7,0.7,0);
    if (battle_world[i]=-50) then draw_text_transformed(xxx+265,yyy+11,"Fleet Attacked! ("+string(battle_location[i])+" System)",0.7,0.7,0);
    
    scr_image("force",1,xxx+378-32,yyy+86-32,64,64);
    // draw_sprite(spr_force_icon,1,xxx+378,yyy+86);
    
    draw_set_font(fnt_40k_14);draw_set_halign(fa_left);
    
    
    
    if (battle_world[i]&lt;0){
        draw_set_font(fnt_40k_14b);
        draw_set_halign(fa_left);
        
        draw_text(xxx+12,yyy+237,"Enemy Fleets:");
        draw_text(xxx+332,yyy+237,"Allied Fleets:");
        
        if (string(strin[1])="1") then draw_text(xxx+310,yyy+118,string(strin[1])+" Battleship ("+string(strin[4])+"% HP)");
        if (string(strin[2])="1") then draw_text(xxx+310,yyy+138,string(strin[2])+" Frigate ("+string(strin[5])+"% HP)");
        if (string(strin[3])="1") then draw_text(xxx+310,yyy+158,string(strin[3])+" Escort ("+string(strin[6])+"% HP)");
        if (string(strin[1])!="1") then draw_text(xxx+310,yyy+118,string(strin[1])+" Battleships ("+string(strin[4])+"% HP)");
        if (string(strin[2])!="1") then draw_text(xxx+310,yyy+138,string(strin[2])+" Frigates ("+string(strin[5])+"% HP)");
        if (string(strin[3])!="1") then draw_text(xxx+310,yyy+158,string(strin[3])+" Escorts ("+string(strin[6])+"% HP)");
    
        
        draw_set_halign(fa_center);
        
        if (enemy_fleet[1]!=0){
            // draw_sprite(spr_force_icon,enemy_fleet[1],xxx+44,yyy+269);
            scr_image("force",enemy_fleet[1],xxx+44-32,yyy+269-32,64,64);
            var shw;shw="";
            if (ecap[1]=1) then shw+=string(ecap[1])+" Battleship#";
            if (ecap[1]!=1) then shw+=string(ecap[1])+" Battleships#";
            if (efri[1]=1) then shw+=string(efri[1])+" Frigate#";
            if (efri[1]!=1) then shw+=string(efri[1])+" Frigates#";
            if (eesc[1]=1) then shw+=string(eesc[1])+" Escort#";
            if (eesc[1]!=1) then shw+=string(eesc[1])+" Escorts#";
            
            draw_text_transformed(xxx+44,yyy+286,string(shw),0.7,1,0);
            draw_set_halign(fa_center);draw_set_font(fnt_40k_14b);
        }
        if (enemy_fleet[2]!=0){
            // draw_sprite(spr_force_icon,enemy_fleet[2],xxx+154,yyy+269);
            scr_image("force",enemy_fleet[2],xxx+154-32,yyy+269-32,64,64);
            var shw;shw="";
            if (ecap[2]=1) then shw+=string(ecap[2])+" Battleship#";
            if (ecap[2]!=1) then shw+=string(ecap[2])+" Battleships#";
            if (efri[2]=1) then shw+=string(efri[2])+" Frigate#";
            if (efri[2]!=1) then shw+=string(efri[2])+" Frigates#";
            if (eesc[2]=1) then shw+=string(eesc[2])+" Escort#";
            if (eesc[2]!=1) then shw+=string(eesc[2])+" Escorts#";
            
            draw_text_transformed(xxx+154,yyy+286,string(shw),0.7,1,0);
            draw_set_halign(fa_center);draw_set_font(fnt_40k_14b);
        }
        if (enemy_fleet[3]!=0){
            // draw_sprite(spr_force_icon,enemy_fleet[3],xxx+264,yyy+269);
            scr_image("force",enemy_fleet[3],xxx+264-32,yyy+269-32,64,64);
            var shw;shw="";
            if (ecap[3]=1) then shw+=string(ecap[3])+" Battleship#";
            if (ecap[3]!=1) then shw+=string(ecap[3])+" Battleships#";
            if (efri[3]=1) then shw+=string(efri[3])+" Frigate#";
            if (efri[3]!=1) then shw+=string(efri[3])+" Frigates#";
            if (eesc[3]=1) then shw+=string(eesc[3])+" Escort#";
            if (eesc[3]!=1) then shw+=string(eesc[3])+" Escorts#";
            
            draw_text_transformed(xxx+264,yyy+286,string(shw),0.7,1,0);
            draw_set_halign(fa_center);draw_set_font(fnt_40k_14b);
        }
        
        if (allied_fleet[1]!=0){
            // draw_sprite(spr_force_icon,allied_fleet[1],xxx+374,yyy+269);
            scr_image("force",allied_fleet[1],xxx+374-32,yyy+269-32,64,64);
            var shw;shw="";
            if (acap[1]=1) then shw+=string(acap[1])+" Battleship#";
            if (acap[1]!=1) then shw+=string(acap[1])+" Battleships#";
            if (afri[1]=1) then shw+=string(afri[1])+" Frigate#";
            if (afri[1]!=1) then shw+=string(afri[1])+" Frigates#";
            if (aesc[1]=1) then shw+=string(aesc[1])+" Escort#";
            if (aesc[1]!=1) then shw+=string(aesc[1])+" Escorts#";
            
            draw_text_transformed(xxx+374,yyy+286,string(shw),0.7,1,0);
            draw_set_halign(fa_center);draw_set_font(fnt_40k_14b);
        }
        if (allied_fleet[2]!=0){
            // draw_sprite(spr_force_icon,allied_fleet[1],xxx+484,yyy+269);
            scr_image("force",allied_fleet[1],xxx+484-32,yyy+269-32,64,64);
            var shw;shw="";
            if (acap[2]=1) then shw+=string(acap[2])+" Battleship#";
            if (acap[2]!=1) then shw+=string(acap[2])+" Battleships#";
            if (afri[2]=1) then shw+=string(afri[2])+" Frigate#";
            if (afri[2]!=1) then shw+=string(afri[2])+" Frigates#";
            if (aesc[2]=1) then shw+=string(aesc[2])+" Escort#";
            if (aesc[2]!=1) then shw+=string(aesc[2])+" Escorts#";
            
            draw_text_transformed(xxx+484,yyy+286,string(shw),0.7,1,0);
            draw_set_halign(fa_center);draw_set_font(fnt_40k_14b);
        }
        
        
        
        
        
        draw_set_color(c_gray);draw_rectangle(xxx+132,yyy+354,xxx+259,yyy+389,0);
        draw_set_color(0);draw_text_transformed(xxx+195,yyy+362,"Retreat",1.1,1.1,0);
        if (scr_hit(xxx+132,yyy+354,xxx+259,yyy+389)=true){
            draw_set_alpha(0.2);draw_rectangle(xxx+132,yyy+354,xxx+259,yyy+389,0);draw_set_alpha(1);
        }
        
        draw_set_color(c_gray);draw_rectangle(xxx+272,yyy+354,xxx+399,yyy+389,0);
        draw_set_color(0);draw_text_transformed(xxx+335,yyy+362,"Fight",1.1,1.1,0);
        if (scr_hit(xxx+272,yyy+354,xxx+399,yyy+389)=true){
            draw_set_alpha(0.2);draw_rectangle(xxx+272,yyy+354,xxx+399,yyy+389,0);draw_set_alpha(1);
        }
        
    }
    
    
    if (battle_world[i]&gt;=1){
        if (battle_opponent[i]&lt;=20){
            draw_text(xxx+310,yyy+118,string(strin[1])+" Marines");
            draw_text(xxx+310,yyy+138,string(strin[2])+" Vehicles");
            if (strin[3]!="") then draw_text(xxx+310,yyy+158,string(strin[3])+" Fortified");// Not / Barely / Lightly / Moderately / Highly / Maximally
        }
        
        draw_set_font(fnt_40k_14b);
        draw_set_halign(fa_left);
        
        draw_text(xxx+12,yyy+237,"Enemy Factions:");
        draw_text(xxx+332,yyy+237,"Allies:");
        
        
        
        draw_set_halign(fa_center);
        // draw_sprite(spr_force_icon,battle_opponent[i],xxx+44,yyy+289);
        scr_image("force",battle_opponent[i],xxx+44-32,yyy+289-32,64,64);
        draw_text_transformed(xxx+44,yyy+316,string(strin[4]),0.75,1,0);
        draw_set_halign(fa_center);draw_set_font(fnt_40k_14b);
        
        
        draw_set_color(c_gray);draw_rectangle(xxx+132,yyy+354,xxx+259,yyy+389,0);
        draw_set_color(0);draw_text_transformed(xxx+195,yyy+362,"Offensive",1.1,1.1,0);
        if (scr_hit(xxx+132,yyy+354,xxx+259,yyy+389)=true){
            draw_set_alpha(0.2);draw_rectangle(xxx+132,yyy+354,xxx+259,yyy+389,0);draw_set_alpha(1);
        }
        
        draw_set_color(c_gray);draw_rectangle(xxx+272,yyy+354,xxx+399,yyy+389,0);
        draw_set_color(0);draw_text_transformed(xxx+335,yyy+362,"Defensive",1.1,1.1,0);
        if (scr_hit(xxx+272,yyy+354,xxx+399,yyy+389)=true){
            draw_set_alpha(0.2);draw_rectangle(xxx+272,yyy+354,xxx+399,yyy+389,0);draw_set_alpha(1);
        }
        
        
        
        
        
    }
}







/*

if (show&gt;0) and (current_battle&lt;=battles){
    var xxx,yyy,i;
    xxx=view_xview[0];
    yyy=view_yview[0];
    i=current_battle;
    
    if (battle_world[i]&gt;0) then draw_sprite(spr_attacked,0,xxx+90,yyy+101);
    if (battle_world[i]=-50) then draw_sprite(spr_attacked,1,xxx+90,yyy+101);
    
    draw_set_font(fnt_info);draw_set_halign(fa_left);draw_set_color(38144);
    draw_text(xxx+103,yyy+115,string(i)+"/"+string(battles));
    
    draw_set_halign(fa_center);
    draw_set_font(fnt_fancy);
    
    if (battle_world[i]&gt;0) then draw_text_transformed(xxx+313,yyy+111,"Forces Attacked!",1.5,1.5,0);
    if (battle_world[i]=-50) then draw_text_transformed(xxx+313,yyy+111,"Fleet Attacked!",1.5,1.5,0);
    
    if (battle_world[i]&gt;0) then draw_text_transformed(xxx+313,yyy+144,"Planet "+string(battle_location[i])+" "+string(battle_world[i]),1,1,0);
    if (battle_world[i]=-50) then draw_text_transformed(xxx+313,yyy+144,string(battle_location[i])+" System",1,1,0);
    
    draw_sprite(spr_force_icon,1,xxx+340,yyy+191);
    if (battle_world[i]&gt;0) then draw_sprite(spr_force_icon,battle_opponent[i],xxx+340,yyy+285);
    draw_set_font(fnt_40k_14);draw_set_halign(fa_left);
    
    
    
    
    if (battle_world[i]=-50){
        if (strin[1]!="0"){
        if (string(strin[1])="1") then draw_text(xxx+367,yyy+210,string(strin[1])+" Battleship ("+string(strin[4])+"% HP)");
        if (string(strin[1])!="1") then draw_text(xxx+367,yyy+210,string(strin[1])+" Battleships ("+string(strin[4])+"% HP)");}
        
        if (strin[2]!="0"){
        if (string(strin[2])="1") then draw_text(xxx+367,yyy+222,string(strin[2])+" Cruiser ("+string(strin[5])+"% HP)");
        if (string(strin[2])!="1") then draw_text(xxx+367,yyy+222,string(strin[2])+" Cruisers ("+string(strin[5])+"% HP)");}
        
        if (strin[3]!="0"){
        if (string(strin[3])="1") then draw_text(xxx+367,yyy+234,string(strin[3])+" Escort ("+string(strin[6])+"% HP)");
        if (string(strin[3])!="1") then draw_text(xxx+367,yyy+234,string(strin[3])+" Escorts ("+string(strin[6])+"% HP)");}
        
        
        if (strin[7]!="0"){
        if (string(strin[7])="1") draw_text(xxx+367,yyy+302,string(strin[7])+" Battleship ("+string(strin[10])+"% HP)");
        if (string(strin[7])!="1") draw_text(xxx+367,yyy+302,string(strin[7])+" Battleships ("+string(strin[10])+"% HP)");}
        
        if (strin[8]!="0"){
        if (string(strin[8])="1") draw_text(xxx+367,yyy+314,string(strin[8])+" Cruiser ("+string(strin[11])+"% HP)");
        if (string(strin[8])!="1") draw_text(xxx+367,yyy+314,string(strin[8])+" Cruisers ("+string(strin[11])+"% HP)");}
        
        if (strin[9]!="0"){
        if (string(strin[9])="1") draw_text(xxx+367,yyy+326,string(strin[9])+" Escort ("+string(strin[12])+"% HP)");
        if (string(strin[9])!="1") draw_text(xxx+367,yyy+326,string(strin[9])+" Escorts ("+string(strin[12])+"% HP)");}
        
        draw_rectangle(xxx+188,yyy+350,xxx+297,yyy+372,1);draw_rectangle(xxx+328,yyy+350,xxx+437,yyy+372,1);
        draw_set_alpha(0.5);
        draw_rectangle(xxx+189,yyy+351,xxx+296,yyy+371,1);draw_rectangle(xxx+329,yyy+351,xxx+436,yyy+371,1);
        draw_set_alpha(1);
        
        draw_set_halign(fa_center);
        draw_text(xxx+241,yyy+353,"Fight");draw_text(xxx+383,yyy+353,"Retreat");
        draw_set_halign(fa_left);
    }
    
    
    if (battle_world[i]&gt;=1){
        if (battle_opponent[i]&lt;=20){
            draw_text(xxx+367,yyy+210,string(strin[1])+" Marines");
            draw_text(xxx+367,yyy+222,string(strin[2])+" Vehicles");
            if (strin[3]!="") then draw_text(xxx+367,yyy+234,string(strin[3])+" Fortified");// Not / Barely / Lightly / Moderately / Highly / Maximally
        }
        
        draw_set_halign(fa_center);
        draw_text(xxx+440,yyy+302,string(strin[4]));
        
        draw_rectangle(xxx+188,yyy+350,xxx+297,yyy+372,1);draw_rectangle(xxx+328,yyy+350,xxx+437,yyy+372,1);
        draw_set_alpha(0.5);
        draw_rectangle(xxx+189,yyy+351,xxx+296,yyy+371,1);draw_rectangle(xxx+329,yyy+351,xxx+436,yyy+371,1);
        draw_set_alpha(1);
        
        draw_text(xxx+241,yyy+353,"Offensive");draw_text(xxx+383,yyy+353,"Defensive");
        draw_set_halign(fa_left);
    }
    



}*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ALERTS below</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var i;
i=0;


draw_set_font(fnt_40k_14b);
draw_set_halign(fa_left);
draw_set_color(38144);

if (alerts&gt;0) and (popups_end=1){
    repeat(alerts){
        i+=1;
        draw_set_color(38144);
        if (alert_color[i]="red") then draw_set_color(c_red);
        if (alert_color[i]="yellow") then draw_set_color(57586);
        // if (alert_color[i]="purple") then draw_set_color(c_red);
        draw_set_alpha(min(1,alert_alpha[i]));
        
        if (obj_controller.zoomed=0){
            draw_text(view_xview[0]+16,view_yview[0]+46+(i*20),string(alert_txt[i]));
            // draw_text(view_xview[0]+16.5,view_yview[0]+40.5+(i*12),string(alert_txt[i]));
        }
        /*if (obj_controller.zoomed=1){
            draw_text_transformed(80,80+(i*24),string(alert_txt[i]),2,2,0);
            draw_text_transformed(81,81+(i*24),string(alert_txt[i]),2,2,0);
        }*/
        
        if (obj_controller.zoomed=1){
            draw_text_transformed(32,92+(i*40),string(alert_txt[i]),2,2,0);
            // draw_text_transformed(122,122+(i*36),string(alert_txt[i]),3,3,0);
        }
        
        
    }
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>34,34</point>
  </PhysicsShapePoints>
</object>
