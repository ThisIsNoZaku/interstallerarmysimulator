<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship_bb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
ship_id=0;
master_present=0;
o_dist=0;

selected=0;
sel_x1=0;
sel_y1=0;
sel_x2=0;
sel_y2=0;

// if (x&lt;0) then ship_id=2;

action="";paction="";
action_dis=0;
action_dir=0;
action_fac=0;
direction=0;
target=-50;
if (instance_exists(obj_en_ship)){target=instance_nearest(x,y,obj_en_ship);}

target_l=0;
target_r=0;
target_x=0;
target_y=0;

cooldown[0]=0;
cooldown[1]=0;
cooldown[2]=0;
cooldown[3]=0;
cooldown[4]=0;
cooldown[5]=0;
turret_cool=0;
shield_size=0;

board_capital=false;
board_frigate=false;

name="";
class="";
hp=0;
maxhp=0;
conditions="";
shields=1;
maxshields=1;
armor_front=0;
armor_other=0;
weapons=0;
turrets=0;
fighters=0;
bombers=0;
thunderhawks=0;
boarders=0;board_cooldown=0;

var i;i=-1;
repeat(8){i+=1;
    weapon[i]="";weapon_facing[i]="";weapon_cooldown[i]=0;weapon_hp[i]=0;weapon_dam[i]=0;weapon_ammo[i]=999;weapon_range[i]=0;weapon_minrange[i]=0;
}

i=-1;
repeat(2001){i+=1;
    board_co[i]=0;board_id[i]=0;board_location[i]=0;board_raft[i]=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hp&lt;maxhp) and (ship_id!=0){
    obj_fleet.ships_damaged+=1;
    obj_ini.ship_hp[self.ship_id]=hp;
    
    if (hp&lt;=0) then obj_fleet.ship_lost[ship_id]=1;
    
    if (ship_id=1) and (obj_ini.fleet_type!=1) and (obj_ini.ship_class[1]=string(obj_img.ship[1,1])){
    
        if (obj_controller.und_gene_vaults=0){
            obj_controller.gene_seed=0;var w;w=0;repeat(120){w+=1;if (obj_ini.slave_batch_num[w]&gt;0){obj_ini.slave_batch_num[w]=0;obj_ini.slave_batch_eta[w]=0;}}
        }
        if (obj_controller.und_gene_vaults&gt;0){
            obj_controller.gene_seed-=floor(obj_controller.gene_seed/10);
        }
    }
    
    // 135
    // maybe check for dead marines here?
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
action="";
direction=0;


cooldown1=0;
cooldown2=0;
cooldown3=0;
cooldown4=0;
cooldown5=0;


name=obj_ini.ship[ship_id];
class=obj_ini.ship_class[ship_id];
hp=obj_ini.ship_hp[ship_id]*1;
maxhp=obj_ini.ship_hp[ship_id]*1;
conditions=obj_ini.ship_conditions[ship_id];
shields=obj_ini.ship_shields[ship_id]*100;
maxshields=shields;
armor_front=obj_ini.ship_front_armor[ship_id];
armor_other=obj_ini.ship_other_armor[ship_id];
weapons=obj_ini.ship_weapons[ship_id];turrets=0;

weapon[1]=obj_ini.ship_wep[ship_id,1];weapon_facing[1]="";weapon_cooldown[1]=0;
weapon_hp[1]=hp/4;weapon_dam[1]=0;weapon_ammo[1]=999;weapon_range[1]=0;weapon_minrange[1]=0;

weapon[2]=obj_ini.ship_wep[ship_id,2];weapon_facing[2]="";weapon_cooldown[2]=0;
weapon_hp[2]=hp/4;weapon_dam[2]=0;weapon_ammo[2]=999;weapon_range[2]=0;weapon_minrange[2]=0;

weapon[3]=obj_ini.ship_wep[ship_id,3];weapon_facing[3]="";weapon_cooldown[3]=0;
weapon_hp[3]=hp/4;weapon_dam[3]=0;weapon_ammo[3]=999;weapon_range[3]=0;weapon_minrange[3]=0;

weapon[4]=obj_ini.ship_wep[ship_id,4];weapon_facing[4]="";weapon_cooldown[4]=0;
weapon_hp[4]=hp/4;weapon_dam[4]=0;weapon_ammo[4]=999;weapon_range[4]=0;weapon_minrange[4]=0;

weapon[5]=obj_ini.ship_wep[ship_id,5];weapon_facing[5]="";weapon_cooldown[5]=0;
weapon_hp[5]=hp/4;weapon_dam[5]=0;weapon_ammo[5]=999;weapon_range[5]=0;weapon_minrange[5]=0;





if (class=string(obj_img.ship[1,1])){turrets=3;weapons=5;shield_size=3;sprite_index=spr_ship_bb;
    weapon_facing[1]="left";weapon_dam[1]=12;weapon_range[1]=450;weapon_cooldown[1]=30;
    weapon_facing[2]="right";weapon_dam[2]=12;weapon_range[2]=450;weapon_cooldown[2]=30;
    weapon_facing[3]="special";weapon_cooldown[3]=90;weapon_ammo[3]=3;weapon_range[3]=9999;
    weapon_facing[4]="front";weapon_dam[4]=12;weapon_range[4]=1000;weapon_cooldown[4]=120;// volley several
    weapon_facing[5]="most";weapon_dam[5]=16;weapon_range[5]=300;weapon_cooldown[5]=30;
}

if (class=string(obj_img.ship[1,5])){turrets=3;weapons=5;shield_size=3;sprite_index=spr_ship_song;
    weapon_facing[1]="most";weapon_dam[1]=12;weapon_range[1]=500;weapon_cooldown[1]=30;
    weapon_facing[2]="most";weapon_dam[2]=12;weapon_range[2]=500;weapon_cooldown[2]=30;
    weapon_facing[3]="most";weapon_dam[3]=12;weapon_range[3]=500;weapon_cooldown[3]=30;
    weapon_facing[4]="front";weapon_dam[4]=32;weapon_range[4]=1000;weapon_cooldown[4]=90;
}


if (class=string(obj_img.ship[1,2])){turrets=1;weapons=4;shield_size=1;sprite_index=spr_ship_stri;
    weapon_facing[1]="left";weapon_dam[1]=8;weapon_range[1]=300;weapon_cooldown[1]=30;
    weapon_facing[2]="right";weapon_dam[2]=8;weapon_range[2]=300;weapon_cooldown[2]=30;
    weapon_facing[3]="special";weapon_cooldown[3]=90;weapon_ammo[3]=3;weapon_range[3]=9999;
    weapon_facing[4]="most";weapon_dam[4]=12;weapon_range[4]=300;weapon_cooldown[4]=30;
}

if (class=string(obj_img.ship[1,4])){turrets=1;weapons=2;shield_size=1;sprite_index=spr_ship_hunt;
    weapon_facing[1]="front";weapon_dam[1]=8;weapon_range[1]=450;weapon_cooldown[1]=60;
    weapon_facing[2]="most";weapon_dam[2]=8;weapon_range[2]=300;weapon_cooldown[2]=60;
}

if (class=string(obj_img.ship[1,3])){turrets=1;weapons=2;shield_size=1;sprite_index=spr_ship_glad;
    weapon_facing[1]="most";weapon_dam[1]=8;weapon_range[1]=300;weapon_cooldown[1]=30;
}


// STC Bonuses
if (obj_controller.stc_bonus[5]=5){armor_front=round(armor_front*1.1);armor_other=round(armor_other*1.1);}
if (obj_controller.stc_bonus[6]=2){armor_front=round(armor_front*1.1);armor_other=round(armor_other*1.1);}


var i;i=0;
repeat(100){i+=1;
    if (obj_ini.role[0,i]=obj_img.faction_title[1]) and (obj_ini.lid[0,i]=ship_id){master_present=1;obj_fleet.control=1;}
}


var co,i,b;
co=-1;i=0;b=0;
repeat(11){co+=1;i=0;
    repeat(300){i+=1;
        if (obj_ini.lid[co,i]=ship_id) and (obj_ini.age[co,i]!=floor(obj_ini.age[co,i])){
            b+=1;board_co[b]=co;board_id[b]=i;board_location[b]=0;boarders+=1;
            // Loc 0: on origin ship
            // Loc 1: in transit
            // Loc &gt;1: (instance_id), on enemy vessel 
        }
    }
}

if (boarders&gt;0){
    if (obj_controller.command_set[25]=1) then board_capital=true;
    if (obj_controller.command_set[26]=1) then board_frigate=true;
}

if (hp&lt;=0){
    x=-1000;y=room_height/2;
    if (ship_id=0) then instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle=direction;

if (obj_fleet.start!=5) then exit;


var dist, ch_rang, ex;

if (shields&gt;0) and (shields&lt;maxshields) then shields+=0.02;
if (board_cooldown&gt;=0) then board_cooldown-=1;

// Need to every couple of seconds check this
// with obj_en_ship if not big then disable, check nearest, and activate once more


if (instance_exists(target)){if ((target.x&lt;3) and (target.y&lt;3)) or (target.hp&lt;0) then target=-50;}
if (!instance_exists(target)) or (target=-50){
    with(obj_en_ship){if ((x&lt;3) and (y&lt;3)) or (hp&lt;=0) then instance_deactivate_object(id);}
    target=instance_nearest(x,y,obj_en_ship);
    instance_activate_object(obj_en_ship);
}
if (!instance_exists(target)) then exit;


// if (!instance_exists(target)) and (instance_exists(obj_en_ship)) and (instance_nearest(x,y,obj_en_ship).x&gt;500) then target=instance_nearest(x,y,obj_en_ship);

// if (!instance_exists(target)) and (instance_exists(obj_en_ship)) then target=instance_nearest(x,y,obj_en_ship);


if (hp&lt;=0) and (x&gt;-5000){
    // obj_fleet.fighting[self.ship_id]=-5;
    if (class=string(obj_img.ship[1,1])) or (class=string(obj_img.ship[1,5])){obj_fleet.capital-=1;obj_fleet.capital_lost+=1;}
    if (class=string(obj_img.ship[1,2])){obj_fleet.frigate-=1;obj_fleet.frigate_lost+=1;}
    if (class=string(obj_img.ship[1,4])){obj_fleet.escort-=1;obj_fleet.escort_lost+=1;}
    if (class=string(obj_img.ship[1,3])){obj_fleet.escort-=1;obj_fleet.escort_lost+=1;}
    // obj_ini.ship_hp[self.ship_id]=-100;
    
    obj_fleet.ship_lost[ship_id]=1;// show_message("obj_fleet.ship_lost["+string(ship_id)+"] = 1");
    
    image_alpha=0.5;
    if (obj_fleet.start!=0){
        /*ex=instance_create(x,y,obj_explosion);
        ex.image_xscale=2;ex.image_yscale=2;
        ex.image_speed=0.75;*/
        
        var husk;husk=instance_create(x,y,obj_en_husk);
        husk.sprite_index=sprite_index;husk.direction=direction;
        husk.image_angle=image_angle;husk.depth=depth;husk.image_speed=0;
        repeat(choose(4,5,6)){
            var explo;explo=instance_create(x,y,obj_explosion);
            explo.image_xscale=0.5;explo.image_yscale=0.5;
            explo.x+=random_range(sprite_width*0.25,sprite_width*-0.25);
            explo.y+=random_range(sprite_width*0.25,sprite_width*-0.25);
        }
        
    }
    x=-7000;y=room_height/2;
}
if (hp&gt;0) and (instance_exists(obj_en_ship)){
    if (cooldown[1]&gt;0) then cooldown[1]-=1;
    if (cooldown[2]&gt;0) then cooldown[2]-=1;
    if (cooldown[3]&gt;0) then cooldown[3]-=1;
    if (cooldown[4]&gt;0) then cooldown[4]-=1;

    if (class="Apocalypse Class Battleship") or (class=string(obj_img.ship[1,5])){o_dist=500;action="attack";}
    if (class="Nemesis Class Fleet Carrier"){o_dist=1000;action="attack";}
    if (class="Avenger Class Grand Cruiser"){o_dist=64;action="broadside";}
    if (class=string(obj_img.ship[1,1])) or (class=string(obj_img.ship[1,2])){o_dist=300;action="attack";}
    if (class=string(obj_img.ship[1,3])) or (class=string(obj_img.ship[1,4])){o_dist=64;action="flank";}
    // if (class!="big") then flank!!!!
    
    
    dist=point_distance(x,y,target.x,target.y)-(max(sprite_get_width(sprite_index),sprite_get_height(sprite_index)));
    
    // STC Bonuses
    var ts;ts=0.2;if (obj_controller.stc_bonus[5]=3) then ts+=0.1;
    
    
    if (paction!="move") and (paction!="attack_move") and (paction!="turn") and (paction!="attack_turn"){
        if (target!=0) and (action="attack"){
            direction=turn_towards_point(direction,x,y,target.x,target.y,ts/2);
        }
        if (target!=0) and (action="broadside") and (dist&gt;o_dist){
            if (y&gt;=target.y) then dist=point_distance(x,y,target.x+lengthdir_x(64,target.direction-180),target.y+lengthdir_y(128,target.direction-90))-(max(sprite_get_width(sprite_index),sprite_get_height(sprite_index)));
            if (y&lt;target.y) then dist=point_distance(x,y,target.x+lengthdir_x(64,target.direction-180),target.y+lengthdir_y(128,target.direction+90))-(max(sprite_get_width(sprite_index),sprite_get_height(sprite_index)));
            if (y&gt;target.y) and (dist&gt;o_dist) then direction=turn_towards_point(direction,x+lengthdir_x(64,target.direction-180),y,target.x,target.y+lengthdir_y(128,target.direction-90),ts);
            if (y&lt;target.y) and (dist&gt;o_dist) then direction=turn_towards_point(direction,x+lengthdir_x(64,target.direction-180),y,target.x,target.y+lengthdir_y(128,target.direction+90),ts);
        }
        if (target!=0) and (action="flank") and (dist&gt;o_dist){
            if (y&gt;=target.y) then dist=point_distance(x,y,target.x+lengthdir_x(64,target.direction-180),target.y+lengthdir_y(128,target.direction-90))-(max(sprite_get_width(sprite_index),sprite_get_height(sprite_index)));
            if (y&lt;target.y) then dist=point_distance(x,y,target.x+lengthdir_x(64,target.direction-180),target.y+lengthdir_y(128,target.direction+90))-(max(sprite_get_width(sprite_index),sprite_get_height(sprite_index)));
            if (y&gt;target.y) and (dist&gt;o_dist) then direction=turn_towards_point(direction,x,y,target.x,target.y,ts);
            if (y&lt;target.y) and (dist&gt;o_dist) then direction=turn_towards_point(direction,x,y,target.x,target.y,ts);
        }
    }
    
    // STC Bonuses
    var speed_up, speed_down;speed_up=0.005;speed_down=0.025;
    if (obj_controller.stc_bonus[6]=3){speed_up=0.008;speed_down=0.037;}
    
    if (paction="turn") or (paction="attack_turn"){
        direction=turn_towards_point(direction,x,y,target_x,target_y,ts/2);
        dist=point_distance(x,y,target_x,target_y);
        if (y&gt;target_y) then direction=turn_towards_point(direction,x,y,target_x,target_y,ts);
        if (y&lt;target_y) then direction=turn_towards_point(direction,x,y,target_x,target_y,ts);
        if (speed&gt;0) then speed-=speed_down;
        
        if (direction-point_direction(x,y,target_x,target_y)&lt;=2) and (direction-point_direction(x,y,target_x,target_y)&gt;=-2){
            if (paction="turn") then paction="move";
            if (paction="attack_turn") then paction="attack_move";
        }
    }
    
    if (paction!="move") and (paction!="turn") and (paction!="attack_move") and (paction!="attack_turn"){
        if (action="attack"){
            if (dist&gt;o_dist) and (speed&lt;(obj_fleet.ship_speed[self.ship_id]/10)) then speed+=speed_up;
            if (dist&lt;o_dist) and (speed&gt;0) then speed-=speed_down;
        }
        if (action="broadside"){
            if (dist&gt;o_dist) and (speed&lt;(obj_fleet.ship_speed[self.ship_id]/10)) then speed+=speed_up;
            if (dist&lt;o_dist) and (speed&gt;0) then speed-=speed_down;
        }
        if (action="flank"){// flank here
            if (dist&gt;o_dist) and (speed&lt;(obj_fleet.ship_speed[self.ship_id]/10)) then speed+=speed_up;
            if (dist&lt;o_dist) and (speed&gt;0) then speed-=speed_down;
        }
    }
    if (paction="move") or (paction="attack_move"){
        direction=turn_towards_point(direction,x,y,target_x,target_y,ts/2);
        var dist;dist=point_distance(x,y,target_x,target_y);
        if (y&gt;target_y) then direction=turn_towards_point(direction,x,y,target_x,target_y,ts);
        if (y&lt;target_y) then direction=turn_towards_point(direction,x,y,target_x,target_y,ts);
        
        if (paction="attack_move") and (instance_exists(obj_en_ship)){
            if (!instance_exists(target)) then target=instance_nearest(x,y,obj_en_ship);
            dist=point_distance(x,y,target.x,target.y);
            if (dist&lt;=o_dist){paction="";action="attack";}
        }
        
        if (dist&gt;20) and (speed&lt;(obj_fleet.ship_speed[self.ship_id]/10)) then speed+=speed_up;
        if (dist&lt;=20) and (speed&gt;0){paction="";action="attack";}
    }
    
    
    if (speed&lt;0) then speed=speed*0.9;
    if (turret_cool&gt;0) then turret_cool-=1;
    
    
    var bull, targe, rdir, dirr, dist, xx, yy, ok;
    targe=0;rdir=0;dirr="";dist=9999;xx=x;yy=y;
    
    
    if (turrets&gt;0) and (instance_exists(obj_en_in)) and (turret_cool=0){
        targe=instance_nearest(x,y,obj_en_in);
        if (instance_exists(targe)) then dist=point_distance(x,y,targe.x,targe.y);
        
        if (dist&gt;64) and (dist&lt;300){
            bull=instance_create(x,y,obj_p_round);bull.direction=point_direction(x,y,targe.x,targe.y);
            bull.speed=20;bull.dam=3;bull.image_xscale=0.5;bull.image_yscale=0.5;turret_cool=floor(60/turrets);
            bull.direction+=choose(random(3),1*-(random(3)));
        }
    }
    targe=0;rdir=0;dirr="";dist=9999;
    
    
    xx=lengthdir_x(64,direction+90);
    yy=lengthdir_y(64,direction+90);
    
    var front, right, left, rear;
    front=0;right=0;left=0;rear=0;
    
    targe=instance_nearest(xx,yy,obj_en_ship);
    rdir=point_direction(x,y,target.x,target.y);
    if (rdir&gt;45) and (rdir&lt;=135) and (targe!=target){target_r=targe;right=1;}
    if (rdir&gt;225) and (rdir&lt;=315) and (targe!=target) and (targe!=target_r){target_l=targe;left=1;}    
    if (collision_line(x,y,x+lengthdir_x(2000,direction),y+lengthdir_y(2000,direction),obj_en_ship,0,1)) then front=1;
    
    
    var f, facing, ammo, range, wep, dam, gg;f=0;facing="";ammo=0;range=0;wep="";dam=0;
    gg=0;
    
    repeat(weapons){
        gg+=1;
    
        // if (cooldown[gg]&gt;0) then cooldown[gg]-=1;
    
        ok=0;f+=1;facing="";ammo=0;range=0;wep="";
    
        
        if (cooldown[gg]&lt;=0) and (weapon[gg]!="") and (weapon_ammo[gg]&gt;0) then ok=1;
        if (ok=1){facing=weapon_facing[gg];ammo=weapon_ammo[gg];range=weapon_range[gg];}
        
        targe=target;
        if (facing="right") then targe=target_r;
        if (facing="left") then targe=target_l;    
        if ((facing="front") or (facing="most")) and (front=1) then ok=2;
        if (facing="right") or (facing="most") and (right=1) then ok=2;
        if (facing="left") or (facing="most") and (left=1) then ok=2;
        if (facing="special") then ok=2;
        if (!instance_exists(targe)) then exit;
        
        
        dist=point_distance(x,y,targe.x,targe.y);
        
        
        if (ok=2) and (dist&lt;(range+(max(sprite_get_width(sprite_index),sprite_get_height(sprite_index))))){
            if (ammo&gt;0) and (ammo&lt;500) then ammo-=1;
            weapon_ammo[gg]=ammo;cooldown[gg]=weapon_cooldown[gg];wep=weapon[gg];dam=weapon_dam[gg];
            
            // if (f=3) and (ship_id=2) then show_message("ammo: "+string(ammo)+" | range: "+string(range));
            
            if (ammo&lt;0) then ok=0;
            ok=3;
            
            if (string_count("orpedo",wep)=0) and (string_count("hawk",wep)=0) and (ok=3){
                bull=instance_create(x+lengthdir_x(32,direction),y+lengthdir_y(32,direction),obj_p_round);
                bull.speed=20;bull.dam=dam;
                if (targe=target) then bull.direction=point_direction(x+lengthdir_x(32,direction),y+lengthdir_y(32,direction),target.x,target.y);
                if (facing!="front"){bull.direction=point_direction(x+lengthdir_x(32,direction),y+lengthdir_y(32,direction),target.x,target.y);}
                if (string_count("ova",wep)=1){bull.image_xscale=2;bull.image_yscale=2;}
                if (wep="Lance Battery"){bull.sprite_index=spr_ground_las;bull.image_xscale=2;bull.image_yscale=2;}
                if (wep="Plasma Cannon"){bull.sprite_index=spr_ground_plasma;bull.image_xscale=3;bull.image_yscale=3;}
            }
            if (string_count("orpedo",wep)=1) and (ok=3){
                
                if (sprite_index=spr_ship_bb){
                    bull=instance_create(x,y+lengthdir_y(-30,direction+90),obj_p_round);
                    bull.speed=10;bull.direction=direction;bull.sprite_index=spr_torpedo;bull.dam=dam;
                }
                
                bull=instance_create(x,y+lengthdir_y(-10,direction+90),obj_p_round);
                bull.speed=10;bull.direction=direction;bull.sprite_index=spr_torpedo;bull.dam=dam;
                bull=instance_create(x,y+lengthdir_y(10,direction+90),obj_p_round);
                bull.speed=10;bull.direction=direction;bull.sprite_index=spr_torpedo;bull.dam=dam;
                
                if (sprite_index=spr_ship_bb){
                    bull=instance_create(x,y+lengthdir_y(30,direction+90),obj_p_round);
                    bull.speed=10;bull.direction=direction;bull.sprite_index=spr_torpedo;bull.dam=dam;
                }
            }
            if (string_count("hawk",wep)=1) and (ok=3){
                bull=instance_create(x,y+lengthdir_y(-30,direction+90),obj_p_th);bull.direction=self.direction;
            }
        }
    }
    

    
}





</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Boarding</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (instance_exists(obj_en_ship)) and (boarders&gt;0) and (board_cooldown&lt;=0) and ((board_capital=true) or (board_frigate=true)){
    var eh,te;eh=0;te=0;
    repeat(2){eh+=1;te=0;
        if (eh=1) and (board_capital=true){if (instance_exists(obj_en_capital)) then te=instance_nearest(x,y,obj_en_capital);}
        if (eh=2) and (board_frigate=true){if (instance_exists(obj_en_cruiser)) then te=instance_nearest(x,y,obj_en_cruiser);}
        
        if (te!=0) and (instance_exists(te)){
            if (point_distance(x,y,te.x,te.y)&lt;=428){
                var first,o;
                first=0;o=0;
                
                repeat(500){o+=1;
                    if (first=0) and (board_id[o]!=0) and (board_location[o]=0) then first=o;
                }
                
                board_cooldown=45;
                
                var bear;bear=instance_create(x,y,obj_p_assra);
                o=first;
                
                repeat(20){
                    if (board_id[o]!=0) and (board_location[o]=0){
                        board_raft[o]=bear;board_location[o]=-1;boarders-=1;bear.boarders+=1;
                        if (obj_ini.role[board_co[o],board_id[o]]=obj_ini.role[100,15]) or (obj_ini.role[board_co[o],board_id[o]]="Master of Sanctity"){
                            if (obj_ini.gear[board_co[o],board_id[o]]="Narthecium") and (obj_ini.hp[board_co[o],board_id[o]]&gt;=10) then bear.apothecary+=1;
                        }
                    }
                    o+=1;
                }
                
                bear.apothecary_had=bear.apothecary;
                bear.target=te;bear.direction=direction;
                bear.origin=self.id;bear.speed=4;
                bear.firstest=first;
                
                if (boarders&lt;=0) then obj_cursor.board=0;
            }
        }
        
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (selected=1) and (!instance_exists(obj_circular)) and (obj_fleet.control!=0){
    var stahp;stahp=0;
    
    if (obj_fleet.start=5) and (obj_controller.zoomed=0){
        if (mouse_x&gt;=view_xview[0]+12) and (mouse_y&gt;=view_yview[0]+436) and (mouse_x&lt;view_xview[0]+48) and (mouse_y&lt;view_yview[0]+480) then stahp=1;
    }
    if (obj_fleet.start=5) and (obj_controller.zoomed=1){
        if (mouse_x&gt;24) and (mouse_y&gt;872) and (mouse_x&lt;90) and (mouse_y&lt;960) then stahp=1;
    }// and (room_speed&lt;90)
    
    if (stahp=0){
        paction="";
        /*target_x=mouse_x;
        target_y=mouse_y;
        
        if (instance_exists(obj_en_ship)){
            var tee,tee_dis;tee=0;tee_dis=0;
            tee=instance_nearest(mouse_x,mouse_y,obj_en_ship);
            tee_dis=point_distance(mouse_x,mouse_y,tee.x,tee.y);
            
            if (tee_dis&lt;=40){
                paction="attack";
                target=tee;
            }
            if (tee_dis&gt;40){
                paction="turn";
            }
        }
        if (!instance_exists(obj_en_ship)){
            paction="turn";
        }*/
        
        instance_create(20,20,obj_circular);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>name</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>""</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (selected=1){draw_set_color(38144);
    draw_circle(x,y,(sprite_width/2),1);
    draw_circle(x,y,(sprite_width/2)-1,1);
    draw_circle(x,y,(sprite_width/2)+1,1);
    
    if (boarders&gt;0){
        draw_set_color(c_red);
        draw_set_alpha(0.3);
        draw_circle(x,y,400,1);
        
        
        if (instance_exists(obj_en_ship)){
            var e;e=instance_nearest(mouse_x,mouse_y,obj_en_ship);
            if (point_distance(mouse_x,mouse_y,e.x,e.y)&lt;=32){
                obj_cursor.board=1;
            }
            if (point_distance(mouse_x,mouse_y,e.x,e.y)&gt;32){
                obj_cursor.board=0;obj_cursor.image_alpha=1;
            }
        }
    }
    
    draw_set_alpha(1);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

draw_set_color(38144);
draw_set_font(fnt_info);
draw_set_halign(fa_center);


if (boarders&gt;0){
    // draw_sprite(spr_force_icon,0,x-16,y+12);
    scr_image("force",0,x-16-32,y+12-32,64,64);
    
    draw_set_color(0);
    draw_text(x-16,y+12,string(boarders));
    draw_text(x-16-1,y+12-1,string(boarders));
    draw_text(x-16+1,y+12+1,string(boarders));
    draw_text(x-16+1,y+12,string(boarders));
    draw_set_color(c_white);
    draw_text(x-16,y+12,string(boarders));
}
draw_set_color(38144);



if (shields&lt;=0){
    if (obj_controller.zoomed=0){if (maxhp!=0) then draw_text(x,y-(sprite_height/2),string(floor((hp/maxhp)*100))+"%");}
    if (obj_controller.zoomed=1){if (maxhp!=0) then draw_text_transformed(x,y-sprite_height,string(floor((hp/maxhp)*100))+"%",2,2,0);}
}

if (shields&gt;0){
    draw_set_color(c_blue);
    if (obj_controller.zoomed=0){if (maxhp!=0) then draw_text(x,y-(sprite_height/2),string(floor((shields/maxshields)*100))+"%");}
    if (obj_controller.zoomed=1){if (maxhp!=0) then draw_text_transformed(x,y-sprite_height,string(floor((shields/maxshields)*100))+"%",2,2,0);}
}

if (master_present!=0) then draw_sprite_ext(spr_popup_select,0,x,y,2,2,0,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// if (obj_fleet.start!=5) then exit;

if (selected=1) and (boarders&gt;0) and (board_cooldown&lt;=0) and (point_distance(x,y,mouse_x,mouse_y)&lt;=428){
    var first,o;
    first=0;o=0;
    
    repeat(500){o+=1;
        if (first=0) and (board_id[o]!=0) and (board_location[o]=0) then first=o;
    }
    
    
    // show_message("First marine to send is slot "+string(first)+", CO:"+string(board_co[first])+" ID:"+string(board_id[first]));
    
    board_cooldown=45;
    
    var bear;bear=instance_create(x,y,obj_p_assra);
    o=first;
    
    repeat(20){
        if (board_id[o]!=0) and (board_location[o]=0){
            board_raft[o]=bear;board_location[o]=-1;boarders-=1;bear.boarders+=1;
            if (obj_ini.role[board_co[o],board_id[o]]=obj_ini.role[100,15]) or (obj_ini.role[board_co[o],board_id[o]]="Master of Sanctity"){
                if (obj_ini.gear[board_co[o],board_id[o]]="Narthecium") and (obj_ini.hp[board_co[o],board_id[o]]&gt;=10) then bear.apothecary+=1;
            }
        }
        o+=1;
    }
    bear.apothecary_had=bear.apothecary;
    
    var tar1,tar2,tar_final;
    tar1=instance_nearest(mouse_x,mouse_y,obj_en_ship);
    tar2=instance_nearest(mouse_x,mouse_y,obj_en_capital);
    
    if (!instance_exists(obj_en_capital)) and (instance_exists(obj_en_ship)) then tar_final=instance_nearest(mouse_x,mouse_y,obj_en_ship);
    if (instance_exists(obj_en_capital)){
        if ((point_distance(tar2.x,tar2.y,mouse_x,mouse_y)-32)&lt;(point_distance(tar1.x,tar1.y,mouse_x,mouse_y))) then tar_final=instance_nearest(mouse_x,mouse_y,obj_en_capital);
        if ((point_distance(tar2.x,tar2.y,mouse_x,mouse_y)-32)&gt;=(point_distance(tar1.x,tar1.y,mouse_x,mouse_y))) then tar_final=instance_nearest(mouse_x,mouse_y,obj_en_ship);
    }
    
    bear.target=tar_final;
    bear.direction=direction;
    bear.origin=self.id;
    bear.speed=4;
    bear.firstest=first;
    
    if (boarders&lt;=0) then obj_cursor.board=0;
}


// board_co[i]=0;board_id[i]=0;board_location[i]=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>155,56</point>
    <point>156,156</point>
  </PhysicsShapePoints>
</object>
