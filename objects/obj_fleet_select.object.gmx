<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>owner</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>escort</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>frigate</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>capital</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
void_x=0;
void_y=0;
void_wid=0;
void_hei=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if (target!=0) and (!instance_exists(target)) then instance_destroy();


if (obj_controller.popup&lt;1) or (obj_controller.popup&gt;2) then instance_destroy();

if (target!=0) and (instance_exists(target)){
    x=target.x;y=target.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_saveload</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_drop_select</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (owner=1) and (instance_nearest(x,y,obj_p_fleet).action=""){





    if (instance_exists(obj_fleet_select)){
        var free,z;free=1;z=obj_fleet_select;
        if (mouse_x&gt;=view_xview[0]+z.void_x) and (mouse_y&gt;=view_yview[0]+z.void_y) 
        and (mouse_x&lt;view_xview[0]+z.void_x+z.void_wid) and (mouse_y&lt;view_yview[0]+z.void_y+z.void_hei) and (obj_controller.fleet_minimized=0) then free=0;
        
        if (mouse_x&gt;=view_xview[0]+z.void_x) and (mouse_y&gt;=view_yview[0]+z.void_y) 
        and (mouse_x&lt;view_xview[0]+z.void_x+z.void_wid) and (mouse_y&lt;view_yview[0]+137) and (obj_controller.fleet_minimized=1) then free=0;
        if (free=0) then exit;
    }

    
    var sys, sys_dist, mine, connected, fleet, cont;
    sys_dist=9999;connected=0;cont=0;
    
    fleet=instance_nearest(x,y,obj_p_fleet);
    
    if (instance_exists(target)) and (target!=0){if (target.acted&gt;0) then exit;}
    
    
    sys=instance_nearest(mouse_x,mouse_y,obj_star);
    sys_dist=point_distance(mouse_x,mouse_y,sys.x,sys.y);
    act_dist=point_distance(x,y,sys.x,sys.y);
    mine=instance_nearest(x,y,obj_star);
    
    if (mine.buddy=sys) then connected=1;
    if (sys.buddy=mine) then connected=1;
    
    if (sys_dist&lt;32) and (sys.id!=mine.id) then cont=1;
    if (sys.storm&gt;0) or (instance_nearest(x,y+24,obj_star).storm&gt;0) then cont=0;
    if (sys.craftworld=1) and (obj_controller.known[6]=0) then cont=0;
    
    var web1,web2,web;
    web1=0;web2=0;web=0;
    
    if (sys_dist&lt;32){
        if (string_count("Webway",mine.p_feature[1])&gt;0) then web1=1;
        if (string_count("Webway",mine.p_feature[2])&gt;0) then web1=1;
        if (string_count("Webway",mine.p_feature[3])&gt;0) then web1=1;
        if (string_count("Webway",mine.p_feature[4])&gt;0) then web1=1;
        
        if (string_count("Webway",sys.p_feature[1])&gt;0) then web2=1;
        if (string_count("Webway",sys.p_feature[2])&gt;0) then web2=1;
        if (string_count("Webway",sys.p_feature[3])&gt;0) then web2=1;
        if (string_count("Webway",sys.p_feature[4])&gt;0) then web2=1;
        
        if (web1=1) and (web2=1) then web=1;
        if (mine.id=sys.id) then web=0;
    }
    
    if (cont=1){
        
        var w,stot;stot=0;
        w=0;repeat(fleet.capital_number){
            w+=1;
            if (fleet.capital[w]!="") and (fleet.capital_sel[w]=0){cont=50;}
            if (fleet.capital[w]!="") and (fleet.capital_sel[w]=1) then stot+=1;
        }
        w=0;repeat(fleet.frigate_number){
            w+=1;
            if (fleet.frigate[w]!="") and (fleet.frigate_sel[w]=0){cont=50;}
            if (fleet.frigate[w]!="") and (fleet.frigate_sel[w]=1) then stot+=1;
        }
        w=0;repeat(fleet.escort_number){
            w+=1;
            if (fleet.escort[w]!="") and (fleet.escort_sel[w]=0){cont=50;}
            if (fleet.escort[w]!="") and (fleet.escort_sel[w]=1) then stot+=1;
        }
        
        
        if (cont!=50) then cont=20;
        if (stot&gt;0) and (stot&lt;fleet.capital_number+fleet.frigate_number+fleet.escort_number) then cont=50;
        if (stot=0){cont=0;cooldown=8;exit;}
    }
    
    
    
    if (cont=20){// Move the entire fleet, don't worry about the other crap
    
        var eta;eta=0;
        fleet=instance_nearest(x,y,obj_p_fleet);
        eta=floor(point_distance(mine.x,mine.y,sys.x,sys.y)/fleet.action_spd)+1;
        if (connected=0) then eta=eta*2;
        if (connected=1) then fleet.connected=1;
        if (web=1) then eta=1;
        fleet.action_eta=eta;
        
        fleet.action_x=sys.x;
        fleet.action_y=sys.y;
        fleet.action="move";
        orbiting=0;
        
        // mine.present_fleet[1]-=1;
        
        
        
        var w, tempp;
        w=0;repeat(fleet.capital_number+1){
            w+=1;if (fleet.capital[w]!="") and (fleet.capital_sel[w]=1){tempp=fleet.capital_num[w];obj_ini.ship_location[tempp]=obj_img.travel;}
        }
        w=0;repeat(fleet.frigate_number+1){
            w+=1;if (fleet.frigate[w]!="") and (fleet.frigate_sel[w]=1){tempp=fleet.frigate_num[w];obj_ini.ship_location[tempp]=obj_img.travel;}
        }
        w=0;repeat(fleet.escort_number+1){
            w+=1;if (fleet.escort[w]!="") and (fleet.escort_sel[w]=1){tempp=fleet.escort_num[w];obj_ini.ship_location[tempp]=obj_img.travel;}
        }
    }
    
    
    if (cont=50){// The fleet is splitting up
    
        if (fleet.acted&gt;0) then exit;
        
        var eta, w, new_fleet, cap, fri, esc, tempp;
        fleet=instance_nearest(x,y,obj_p_fleet);
        new_fleet=instance_create(x,y,obj_p_fleet);
        eta=floor(point_distance(mine.x,mine.y,sys.x,sys.y)/new_fleet.action_spd)+1;
        if (connected=0) then eta=eta*2;
        if (connected=1) then new_fleet.connected=1;
        if (web=1) then eta=1;
        new_fleet.action_eta=eta;
        
        new_fleet.action_x=sys.x;
        new_fleet.action_y=sys.y;
        new_fleet.action="move";
        new_fleet.owner=1;
        new_fleet.x=new_fleet.x+lengthdir_x(48,point_direction(new_fleet.x,new_fleet.y,sys.x,sys.y));
        new_fleet.y=new_fleet.y+lengthdir_y(48,point_direction(new_fleet.x,new_fleet.y,sys.x,sys.y));
        
        cap=0;fri=0;esc=0;
        
        // Pass over ships to the new fleet, if they are selected
        w=0;repeat(fleet.capital_number){w+=1;
            if (fleet.capital[w]!="") and (fleet.capital_sel[w]=1){
                cap+=1;tempp=fleet.capital_num[w];// obj_ini.ship_location[tempp]=obj_img.travel;
                new_fleet.capital[cap]=fleet.capital[w];new_fleet.capital_num[cap]=fleet.capital_num[w];new_fleet.capital_uid[cap]=fleet.capital_uid[w];
                fleet.capital[w]="";fleet.capital_num[w]=0;fleet.capital_uid[w]=0;
            }
        }
        w=0;repeat(fleet.frigate_number){w+=1;
            if (fleet.frigate[w]!="") and (fleet.frigate_sel[w]=1){
                fri+=1;tempp=fleet.frigate_num[w];// obj_ini.ship_location[tempp]=obj_img.travel;
                new_fleet.frigate[fri]=fleet.frigate[w];new_fleet.frigate_num[fri]=fleet.frigate_num[w];new_fleet.frigate_uid[fri]=fleet.frigate_uid[w];
                fleet.frigate[w]="";fleet.frigate_num[w]=0;fleet.frigate_uid[w]=0;
            }
        }
        w=0;repeat(fleet.escort_number){w+=1;
            if (fleet.escort[w]!="") and (fleet.escort_sel[w]=1){
                esc+=1;tempp=fleet.escort_num[w];// obj_ini.ship_location[tempp]=obj_img.travel;
                new_fleet.escort[esc]=fleet.escort[w];new_fleet.escort_num[esc]=fleet.escort_num[w];new_fleet.escort_uid[esc]=fleet.escort_uid[w];
                fleet.escort[w]="";fleet.escort_num[w]=0;fleet.escort_uid[w]=0;
            }
        }
        
        fleet.capital_number-=cap;
        fleet.frigate_number-=fri;
        fleet.escort_number-=esc;
    
        
        
        repeat(20){
        w=0;repeat(8){
            w+=1;if (fleet.capital[w]="") and (fleet.capital[w+1]!=""){
                fleet.capital[w]=fleet.capital[w+1];fleet.capital_num[w]=fleet.capital_num[w+1];fleet.capital_uid[w]=fleet.capital_uid[w+1];
                fleet.capital[w+1]="";fleet.capital_num[w+1]=0;fleet.capital_uid[w+1]=0;}}
        w=0;repeat(30){
            w+=1;if (fleet.frigate[w]="") and (fleet.frigate[w+1]!=""){
                fleet.frigate[w]=fleet.frigate[w+1];fleet.frigate_num[w]=fleet.frigate_num[w+1];fleet.frigate_uid[w]=fleet.frigate_uid[w+1];
                fleet.frigate[w+1]="";fleet.frigate_num[w+1]=0;fleet.frigate_uid[w+1]=0;}}
        w=0;repeat(30){
            w+=1;if (fleet.escort[w]="") and (fleet.escort[w+1]!=""){
                fleet.escort[w]=fleet.escort[w+1];fleet.escort_num[w]=fleet.escort_num[w+1];fleet.escort_uid[w]=fleet.escort_uid[w+1];
                fleet.escort[w+1]="";fleet.escort_num[w+1]=0;fleet.escort_uid[w+1]=0;}}
        }
        // 
        repeat(20){
        w=0;repeat(8){
            w+=1;if (new_fleet.capital[w]="") and (new_fleet.capital[w+1]!=""){
                new_fleet.capital[w]=new_fleet.capital[w+1];new_fleet.capital_num[w]=new_fleet.capital_num[w+1];new_fleet.capital_uid[w]=new_fleet.capital_uid[w+1];
                new_fleet.capital[w+1]="";new_fleet.capital_num[w+1]=0;new_fleet.capital_uid[w+1]=0;}}
        w=0;repeat(30){
            w+=1;if (new_fleet.frigate[w]="") and (new_fleet.frigate[w+1]!=""){
                new_fleet.frigate[w]=new_fleet.frigate[w+1];new_fleet.frigate_num[w]=new_fleet.frigate_num[w+1];new_fleet.frigate_uid[w]=new_fleet.frigate_uid[w+1];
                new_fleet.frigate[w+1]="";new_fleet.frigate_num[w+1]=0;new_fleet.frigate_uid[w+1]=0;}}
        w=0;repeat(30){
            w+=1;if (new_fleet.escort[w]="") and (new_fleet.escort[w+1]!=""){
                new_fleet.escort[w]=new_fleet.escort[w+1];new_fleet.escort_num[w]=new_fleet.escort_num[w+1];new_fleet.escort_uid[w]=new_fleet.escort_uid[w+1];
                new_fleet.escort[w+1]="";new_fleet.escort_num[w+1]=0;new_fleet.escort_uid[w+1]=0;}}
        }
        
        new_fleet.capital_number=cap;
        new_fleet.frigate_number=fri;
        new_fleet.escort_number=esc;
        
        fleet.selected=0;
        obj_controller.selected=new_fleet;
        obj_controller.fleet_all=1;
        with(new_fleet){
            capital_sel[0]=1;capital_sel[1]=1;
            capital_sel[2]=1;capital_sel[3]=1;
            capital_sel[4]=1;capital_sel[5]=1;
            capital_sel[6]=1;capital_sel[7]=1;
            capital_sel[8]=1;
            var i;i=-1;
            repeat(31){i+=1;
                frigate_sel[i]=1;
                escort_sel[i]=1;
            }
        }
        with(obj_fleet_select){instance_destroy();}
        new_fleet.alarm[3]=1;
        
        var ii;ii=0;ii+=fleet.capital_number;ii+=round((fleet.frigate_number/2));ii+=round((fleet.escort_number/4));
        if (ii&lt;=1) then ii=1;fleet.image_index=ii;
        
        // Temporary fixing thing
        with(new_fleet){var w, tempp;
            w=0;repeat(capital_number+1){
                w+=1;if (capital[w]!=""){tempp=capital_num[w];obj_ini.ship_location[tempp]=obj_img.travel;}
            }
            w=0;repeat(frigate_number+1){
                w+=1;if (frigate[w]!=""){tempp=frigate_num[w];obj_ini.ship_location[tempp]=obj_img.travel;}
            }
            w=0;repeat(escort_number+1){
                w+=1;if (escort[w]!=""){tempp=escort_num[w];obj_ini.ship_location[tempp]=obj_img.travel;}
            }
        }
        
    }
    
    
    /*
    
owner=0;
capital_number=0;
frigate_number=0;
escort_number=0;
selected=0;

capital[0]=0;capital_num[0]=0;capital_sel[0]=1;
capital[1]=0;capital_num[1]=0;capital_sel[1]=1;
capital[2]=0;capital_num[2]=0;capital_sel[2]=1;
capital[3]=0;capital_num[3]=0;capital_sel[3]=1;
capital[4]=0;capital_num[4]=0;capital_sel[4]=1;
capital[5]=0;capital_num[5]=0;capital_sel[5]=1;
capital[6]=0;capital_num[6]=0;capital_sel[6]=1;
capital[7]=0;capital_num[7]=0;capital_sel[7]=1;
capital[8]=0;capital_num[8]=0;capital_sel[8]=1;

var i;i=-1;
repeat(31){i+=1;
    frigate[i]=0;frigate_num[i]=0;frigate_sel[i]=1;
}

var i;i=-1;
repeat(31){i+=1;
    escort[i]=0;escort_num[i]=0;escort_sel[i]=1;
}

image_speed=0;


action="";
action_x=0;
action_y=0;
action_spd=64;
action_eta=0;
connected=0;*/
    
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_drop_select</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_bomb_select</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (obj_controller.diplomacy&gt;0) then exit;


/*if (target!=0) and (!instance_exists(target)){
    instance_destroy();
    exit;
}*/

draw_set_color(38144);

draw_set_font(fnt_40k_14b);
draw_set_halign(fa_center);

var ppp;ppp="";
if (owner=1) then ppp=global.chapter_name;
if (owner=2) then ppp="Imperial Navy";
if (owner=3) then ppp="Mechanicus Fleet";
if (owner=8) then ppp="Tau Fleet";
// 

if (obj_controller.zoomed=0) then draw_text_transformed(x,y-32,string(ppp),1,1,0);
if (obj_controller.zoomed=1) then draw_text_transformed(x,y-48,string(ppp),1.4,1.4,0);
    
draw_circle(x,y,12,0);
draw_set_halign(fa_left);


// Order here


if (owner=1) and (instance_nearest(x,y,obj_p_fleet).action=""){
    var free,z;free=1;z=obj_fleet_select;
    if (mouse_x&gt;=view_xview[0]+z.void_x) and (mouse_y&gt;=view_yview[0]+z.void_y) 
    and (mouse_x&lt;view_xview[0]+z.void_x+z.void_wid) and (mouse_y&lt;view_yview[0]+z.void_y+z.void_hei) and (obj_controller.fleet_minimized=0) then free=0;
    
    if (mouse_x&gt;=view_xview[0]+z.void_x) and (mouse_y&gt;=view_yview[0]+z.void_y) 
    and (mouse_x&lt;view_xview[0]+z.void_x+z.void_wid) and (mouse_y&lt;view_yview[0]+137) and (obj_controller.fleet_minimized=1) then free=0;
    
    if (free=1){
        var sys, sys_dist, mine, connected;
        sys_dist=9999;connected=0;
        
        with(obj_star){if (p_type[1]="Craftworld") and (obj_controller.known[6]=0) then instance_deactivate_object(id);}
        sys=instance_nearest(mouse_x,mouse_y,obj_star);
        sys_dist=point_distance(mouse_x,mouse_y,sys.x,sys.y);
        act_dist=point_distance(x,y,sys.x,sys.y);
        
        mine=instance_nearest(x,y,obj_star);
        if (mine.buddy=sys) then connected=1;
        if (sys.buddy=mine) then connected=1;
        
        var web1,web2,web;
        web1=0;web2=0;web=0;
        
        if (sys_dist&lt;32){
            if (string_count("Webway",mine.p_feature[1])&gt;0) then web1=1;
            if (string_count("Webway",mine.p_feature[2])&gt;0) then web1=1;
            if (string_count("Webway",mine.p_feature[3])&gt;0) then web1=1;
            if (string_count("Webway",mine.p_feature[4])&gt;0) then web1=1;
            
            if (string_count("Webway",sys.p_feature[1])&gt;0) then web2=1;
            if (string_count("Webway",sys.p_feature[2])&gt;0) then web2=1;
            if (string_count("Webway",sys.p_feature[3])&gt;0) then web2=1;
            if (string_count("Webway",sys.p_feature[4])&gt;0) then web2=1;
            
            if (web1=1) and (web2=1) then web=1;
            if (mine.id=sys.id) then web=0;
        }
        
        
        if (sys_dist&lt;32) and (sys.id!=mine.id){
            draw_set_color(c_white);
            draw_set_alpha(1);
            
            if (web!=0) then draw_set_color(c_orange);
            if (sys.storm&gt;0) or (instance_nearest(x,y+24,obj_star).storm&gt;0) then draw_set_color(c_red);
    
            
            draw_line_dashed(x,y,sys.x,sys.y,16,0.5);
        
            draw_set_font(fnt_40k_14b);
            var eta;eta=0;
            eta=floor(point_distance(mine.x,mine.y,sys.x,sys.y)/instance_nearest(x,y,obj_p_fleet).action_spd)+1;
            if (connected=0) then eta=eta*2;
            if (web!=0) then eta=1;
            if (sys.storm&gt;0) or (instance_nearest(x,y+24,obj_star).storm&gt;0) then eta="N/A";
            
            draw_set_font(fnt_40k_14b);
            if (obj_controller.zoomed=0) then draw_text_transformed(sys.x+16,sys.y,"ETA "+string(eta),1,1,0);
            if (obj_controller.zoomed=1) then draw_text_transformed(sys.x+24,sys.y,"ETA "+string(eta),1.4,1.4,0);
            
            if (connected=1){
                if (obj_controller.zoomed=0) then draw_text_transformed(sys.x+17,sys.y,"ETA "+string(eta),1,1,0);
                if (obj_controller.zoomed=1) then draw_text_transformed(sys.x+25,sys.y,"ETA "+string(eta),1.4,1.4,0);
            }
        }
        instance_activate_object(obj_star);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
